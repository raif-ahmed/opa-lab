---
inventory:  
  cluster:
    v1:
      Namespace:
        c-bgx9c:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-04T09:42:52Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-04T09:42:52Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-04T09:42:51Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: c-bgx9c
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-04T09:42:51Z'
            name: c-bgx9c
            resourceVersion: '64473622'
            uid: edfa2c51-e700-4340-99dd-85f2035ae937
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        c-cghsx:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:03:03Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:03:03Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-12-18T13:03:02Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: c-cghsx
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-12-18T13:03:02Z'
            name: c-cghsx
            resourceVersion: '147415731'
            uid: 5038fbca-5d90-4913-864e-ebfe3f0e5e09
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        c-d4bhl:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-06T13:13:36Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-06T13:13:36Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-06T13:13:35Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: c-d4bhl
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-06T13:13:35Z'
            name: c-d4bhl
            resourceVersion: '66654824'
            uid: 6e9f4ca5-f92a-4ecf-916a-4c1eac32ab75
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        c-hvdpb:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-09T08:06:10Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-09T08:06:10Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-09T08:06:09Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: c-hvdpb
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-09T08:06:09Z'
            name: c-hvdpb
            resourceVersion: '69506110'
            uid: 15dd14b6-fd18-45c2-94f8-7c9f8fac5ebb
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        c-j26dc:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:11:40Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:11:40Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-12-15T11:11:39Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: c-j26dc
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-12-15T11:11:39Z'
            name: c-j26dc
            resourceVersion: '144140173'
            uid: 71054f89-feb3-4cbb-8d19-aebe9e4283a4
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        c-vjm4h:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:58:17Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:58:17Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-07-31T07:58:16Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: c-vjm4h
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:58:16Z'
            name: c-vjm4h
            resourceVersion: '2966921'
            uid: 3a702569-2168-4db7-9fcd-3d8415cf7052
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-dashboards:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:46:21Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:46:21Z"}]}
              helm.sh/resource-policy: keep
              lifecycle.cattle.io/create.namespace-auth: 'true'
              meta.helm.sh/release-name: rancher-monitoring
              meta.helm.sh/release-namespace: cattle-monitoring-system
              objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
            creationTimestamp: '2023-07-31T07:46:20Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              app.kubernetes.io/instance: rancher-monitoring
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/part-of: rancher-monitoring
              app.kubernetes.io/version: 102.0.2_up40.1.2
              chart: rancher-monitoring-102.0.2_up40.1.2
              heritage: Helm
              kubernetes.io/metadata.name: cattle-dashboards
              name: cattle-dashboards
              objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
              release: rancher-monitoring
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:helm.sh/resource-policy: {}
                      f:meta.helm.sh/release-name: {}
                      f:meta.helm.sh/release-namespace: {}
                      f:objectset.rio.cattle.io/id: {}
                    f:labels:
                      .: {}
                      f:app.kubernetes.io/instance: {}
                      f:app.kubernetes.io/managed-by: {}
                      f:app.kubernetes.io/part-of: {}
                      f:heritage: {}
                      f:kubernetes.io/metadata.name: {}
                      f:name: {}
                      f:objectset.rio.cattle.io/hash: {}
                      f:release: {}
                manager: fleetagent
                operation: Update
                time: '2023-07-31T07:46:20Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:46:20Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      f:app.kubernetes.io/version: {}
                      f:chart: {}
                manager: helm
                operation: Update
                time: '2023-10-05T16:43:20Z'
            name: cattle-dashboards
            resourceVersion: '65821557'
            uid: b1177cac-2264-4c9b-aefd-09b6440a51df
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-fleet-clusters-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:48Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:53Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              objectset.rio.cattle.io/applied: >-
                H4sIAAAAAAAA/3zOTW6DQAyG4bt4HShTUprMOXoBj2OUqeYH4Y9Fhbh7NWSfnS1Zj9+dsoIfDCa/E5dSwYi1WFtr+FWBKfo11l4YSNrH+hEf5GlOquhCrTCsvHSncVxIVj2Fn5jVwHkhX7aULpQ4aHrrPtme5On65YZxGGd3D5MEnuU+jM5db8Hdpml2k3wG/WY+vxXOSp5eRvdqkrQZdLXO/gya25ktKuT3NoGxtYrj+A8AAP//GNBA4fwAAAA
              objectset.rio.cattle.io/id: fleet-bootstrap-data
            creationTimestamp: '2023-07-26T14:33:47Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-fleet-clusters-system
              objectset.rio.cattle.io/hash: 4510303f19b6cbafc9031148b1866f16c2be7aaa
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:objectset.rio.cattle.io/applied: {}
                      f:objectset.rio.cattle.io/id: {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                      f:objectset.rio.cattle.io/hash: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-07-26T14:33:47Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:47Z'
            name: cattle-fleet-clusters-system
            resourceVersion: '5077'
            uid: 5ffe53a3-2da2-4427-9f9d-9353d81d63b0
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-fleet-local-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:34:05Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:34:10Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              objectset.rio.cattle.io/applied: >-
                H4sIAAAAAAAA/3yOS27DMAxE78J15KZK/NM5egFKphsV+hjmZFEYvnuhZp8diRnMewdlAS8MJncQl1LBiLVoe6v/kQAVdHusXWAgSRfrR1zI0ZpEYPhbCoyvFYqdN/MqmVeYauBk9Fchmc4LhV3+x79iFgXnjVx5pnShxF7SW+SD9UGOboO92ts69lbG9XOe5mXyQ2/lame/2DD0E8sY7vdGK5yFHL010k0CuaNdYDybwnn+BQAA//+dOVY4FAEAAA
              objectset.rio.cattle.io/id: fleet-agent-bootstrap-cattle-fleet-local-system
            creationTimestamp: '2023-07-26T14:34:04Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-fleet-local-system
              objectset.rio.cattle.io/hash: 362023f752e7f1989d8b652e029bd2c658ae7c44
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:objectset.rio.cattle.io/applied: {}
                      f:objectset.rio.cattle.io/id: {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                      f:objectset.rio.cattle.io/hash: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-07-26T14:34:04Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:34:05Z'
            name: cattle-fleet-local-system
            resourceVersion: '66484871'
            uid: dd4a7c1b-8cc2-41b0-8d39-ff076cb5ad4c
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-fleet-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              objectset.rio.cattle.io/applied: >-
                H4sIAAAAAAAA/3zOS26EMAyA4bt4DZQUmkLO0Qs4wRGp8kDYLEaIu48C+9nZsvT9PiGR4IKCYE7AnIughJK5rsX+kxMm6fZQOocikbpQvsICBnwkktaWIiw7bu1tXA24nW7hLyRiwbSByUeMDUS0FD+6K/IKBsYf1Q/94NVstbPo3dwPSo2TVZPWXmn3bekX8a5lTAQGHqN9fuIXC6V65Y0cmLNOgnLU+HW9AwAA///+sh4F8wAAAA
              objectset.rio.cattle.io/id: fleet-bootstrap-data
            creationTimestamp: '2023-07-26T14:33:40Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-fleet-system
              objectset.rio.cattle.io/hash: 4510303f19b6cbafc9031148b1866f16c2be7aaa
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:43Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:objectset.rio.cattle.io/applied: {}
                      f:objectset.rio.cattle.io/id: {}
                    f:labels:
                      f:objectset.rio.cattle.io/hash: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-07-26T14:33:47Z'
            name: cattle-fleet-system
            resourceVersion: '5008'
            uid: bb675e69-6469-4ccb-804b-db36c7f5e277
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-gatekeeper-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2024-01-17T07:27:25Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2024-01-17T07:27:30Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2024-01-17T07:27:24Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              admission.gatekeeper.sh/ignore: no-self-managing
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-gatekeeper-system
              pod-security.kubernetes.io/audit: restricted
              pod-security.kubernetes.io/audit-version: latest
              pod-security.kubernetes.io/enforce: restricted
              pod-security.kubernetes.io/enforce-version: v1.24
              pod-security.kubernetes.io/warn: restricted
              pod-security.kubernetes.io/warn-version: latest
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2024-01-17T07:27:24Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      f:admission.gatekeeper.sh/ignore: {}
                      f:pod-security.kubernetes.io/audit: {}
                      f:pod-security.kubernetes.io/audit-version: {}
                      f:pod-security.kubernetes.io/enforce: {}
                      f:pod-security.kubernetes.io/enforce-version: {}
                      f:pod-security.kubernetes.io/warn: {}
                      f:pod-security.kubernetes.io/warn-version: {}
                manager: kubectl-label
                operation: Update
                time: '2024-01-17T07:30:21Z'
            name: cattle-gatekeeper-system
            resourceVersion: '180564305'
            uid: 9cd60d96-ffde-4ffa-8c5a-f9a250c500d9
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-global-data:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-26T14:33:30Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              cattle.io/creator: norman
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-global-data
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:cattle.io/creator: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:43Z'
            name: cattle-global-data
            resourceVersion: '5011'
            uid: a43a8557-f346-495c-8230-ff35b44eeb65
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-global-nt:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-26T14:33:30Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              cattle.io/creator: norman
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-global-nt
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:cattle.io/creator: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
            name: cattle-global-nt
            resourceVersion: '5015'
            uid: b680fbb3-beff-4c78-9361-5dfb6c606ba9
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-impersonation-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:45Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:50Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-26T14:33:43Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              authz.cluster.cattle.io/impersonator: 'true'
              cattle.io/creator: norman
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-impersonation-system
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:authz.cluster.cattle.io/impersonator: {}
                      f:cattle.io/creator: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
            name: cattle-impersonation-system
            resourceVersion: '5025'
            uid: 362de07c-d7e4-4cb9-82a5-f9da2a6f436d
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-logging-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:45:55Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:45:55Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-31T07:45:54Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: cattle-logging-system
              name: cattle-logging-system
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                      f:name: {}
                manager: fleetagent
                operation: Update
                time: '2023-07-31T07:45:54Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:45:54Z'
            name: cattle-logging-system
            resourceVersion: '2957388'
            uid: 4afbfea7-fd5e-43b5-844e-c7bae510170a
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-monitoring-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:46:00Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:46:01Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-31T07:45:59Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: cattle-monitoring-system
              name: cattle-monitoring-system
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                      f:name: {}
                manager: fleetagent
                operation: Update
                time: '2023-07-31T07:45:59Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:46:00Z'
            name: cattle-monitoring-system
            resourceVersion: '2957605'
            uid: 3823b072-c182-4385-87c5-5de53b60f160
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cattle-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/appIds: rancher-k3s-upgrader
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              objectset.rio.cattle.io/applied: >-
                H4sIAAAAAAAA/4zPT0vEMBAF8K8i75xdra01CXjwLHj0Pk0GG9tOlmSsyLLfXcqKePHPcXjDb+YdQYf0xKWmLPBYGxhMSSI8HmnheqDAMFhYKZIS/BEkkpU0ZanbmIcXDlpZ9yXlfSDVmfcpX6bNgPkxz2/CZfe8TvCY2votWRtz8ZAk3t3HmOVPQmhheBSSMHL51/q5lsf0OvCuvlflBSeDmQaefy01Uh3h0bSt5S6GEKzrKVp720bnut5RGALRje2v2fFVt6Gf752Nr2OnjwAAAP//P22JB3kBAAA
              objectset.rio.cattle.io/id: ''
              objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
              objectset.rio.cattle.io/owner-name: rancher
              objectset.rio.cattle.io/owner-namespace: kube-system
            creationTimestamp: '2023-07-26T14:26:42Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: cattle-system
              objectset.rio.cattle.io/hash: 1338e4dccc896ad8873d99469acbcaa5862e9e04
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:objectset.rio.cattle.io/applied: {}
                      f:objectset.rio.cattle.io/id: {}
                      f:objectset.rio.cattle.io/owner-gvk: {}
                      f:objectset.rio.cattle.io/owner-name: {}
                      f:objectset.rio.cattle.io/owner-namespace: {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                      f:objectset.rio.cattle.io/hash: {}
                manager: deploy@rancher2-tst
                operation: Update
                time: '2023-07-26T14:26:42Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/appIds: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T15:03:00Z'
            name: cattle-system
            resourceVersion: '161449178'
            uid: e163d769-f29c-4a10-b6b4-947a783d89e7
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cluster-fleet-default-c-cghsx-0c901828ff9a:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:04:01Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:04:06Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              fleet.cattle.io/cluster: c-cghsx
              fleet.cattle.io/cluster-namespace: fleet-default
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-12-18T13:04:00Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              fleet.cattle.io/managed: 'true'
              kubernetes.io/metadata.name: cluster-fleet-default-c-cghsx-0c901828ff9a
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:fleet.cattle.io/cluster: {}
                      f:fleet.cattle.io/cluster-namespace: {}
                    f:labels:
                      .: {}
                      f:fleet.cattle.io/managed: {}
                      f:kubernetes.io/metadata.name: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-12-18T13:04:00Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-12-18T13:04:00Z'
            name: cluster-fleet-default-c-cghsx-0c901828ff9a
            resourceVersion: '147417271'
            uid: a1d6a152-e5e4-4082-9a98-b02f8675ae74
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cluster-fleet-default-c-j26dc-f143625379bb:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:13:03Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:13:08Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              fleet.cattle.io/cluster: c-j26dc
              fleet.cattle.io/cluster-namespace: fleet-default
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-12-15T11:13:02Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              fleet.cattle.io/managed: 'true'
              kubernetes.io/metadata.name: cluster-fleet-default-c-j26dc-f143625379bb
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:fleet.cattle.io/cluster: {}
                      f:fleet.cattle.io/cluster-namespace: {}
                    f:labels:
                      .: {}
                      f:fleet.cattle.io/managed: {}
                      f:kubernetes.io/metadata.name: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-12-15T11:13:02Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-12-15T11:13:02Z'
            name: cluster-fleet-default-c-j26dc-f143625379bb
            resourceVersion: '144142059'
            uid: 6cbcdfc3-e504-4cf9-b292-babed58c301d
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cluster-fleet-default-c-vjm4h-0e3b293d3119:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:59:45Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:59:50Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              fleet.cattle.io/cluster: c-vjm4h
              fleet.cattle.io/cluster-namespace: fleet-default
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-31T07:59:43Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              fleet.cattle.io/managed: 'true'
              kubernetes.io/metadata.name: cluster-fleet-default-c-vjm4h-0e3b293d3119
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:fleet.cattle.io/cluster: {}
                      f:fleet.cattle.io/cluster-namespace: {}
                    f:labels:
                      .: {}
                      f:fleet.cattle.io/managed: {}
                      f:kubernetes.io/metadata.name: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-07-31T07:59:43Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:59:44Z'
            name: cluster-fleet-default-c-vjm4h-0e3b293d3119
            resourceVersion: '2968741'
            uid: dd8fd480-0256-41a7-bd60-b57742556c33
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        cluster-fleet-local-local-1a3d67d0a899:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:34:05Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:34:10Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              fleet.cattle.io/cluster: local
              fleet.cattle.io/cluster-namespace: fleet-local
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-26T14:34:04Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              fleet.cattle.io/managed: 'true'
              kubernetes.io/metadata.name: cluster-fleet-local-local-1a3d67d0a899
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:fleet.cattle.io/cluster: {}
                      f:fleet.cattle.io/cluster-namespace: {}
                    f:labels:
                      .: {}
                      f:fleet.cattle.io/managed: {}
                      f:kubernetes.io/metadata.name: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-07-26T14:34:04Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:34:04Z'
            name: cluster-fleet-local-local-1a3d67d0a899
            resourceVersion: '5585'
            uid: 55032c5e-598c-48cb-89d6-b6edfc8f51c6
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        default:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-m5qrs
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-26T14:26:37Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-m5qrs
              kubernetes.io/metadata.name: default
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: k3s
                operation: Update
                time: '2023-07-26T14:26:37Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:43Z'
            name: default
            resourceVersion: '5009'
            uid: caf4b837-04b6-4eeb-a1ac-34896a113744
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        fleet-default:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:50Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              objectset.rio.cattle.io/applied: >-
                H4sIAAAAAAAA/4yQvU7DQBCEXwVtfTHYluP4JFoaWiTq9d0kOXI/lm+dFJbfHR00FIDS7Uoz8+3OSgHCloVJr8QxJmFxKeaypvEDRjKkml2qDIt4VC49Okuabmm+5IkNSP0pTLeIeXe6XkhT4MgnBET5Ibi26uHVRfv84gF5vzsycgBpOhbXzuLIi5e7TN/xmmhTZGZ8/frmArJwmEjHxXtFnkf4fxs4cz6Tph49uOkbPsB2A9eG9+C6O/Rm7Dq7H9qxHdr6qSm0X0/eFOUJhvRaJmFZCnbbPgMAAP//qGc0XpcBAAA
              objectset.rio.cattle.io/id: workspace
              objectset.rio.cattle.io/owner-gvk: management.cattle.io/v3, Kind=FleetWorkspace
              objectset.rio.cattle.io/owner-name: fleet-default
              objectset.rio.cattle.io/owner-namespace: ''
            creationTimestamp: '2023-07-26T14:33:30Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: fleet-default
              objectset.rio.cattle.io/hash: 7e7ea272a8ed59a1ca6ea1587cb55d693b393102
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:objectset.rio.cattle.io/applied: {}
                      f:objectset.rio.cattle.io/id: {}
                      f:objectset.rio.cattle.io/owner-gvk: {}
                      f:objectset.rio.cattle.io/owner-name: {}
                      f:objectset.rio.cattle.io/owner-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                      f:objectset.rio.cattle.io/hash: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
            name: fleet-default
            resourceVersion: '5021'
            uid: 96b19ca4-d1b8-4374-b997-906eed677de2
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        fleet-local:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              objectset.rio.cattle.io/applied: >-
                H4sIAAAAAAAA/3yOQW7FIAxE7+L1b/pDCTScoxdwwOhTGRwFZxXl7hVddNndzEgzby6opJhQEcIF2JooapHWh5Xtm6J20ukoMkVUZZqKvJcEATIT6dsmol0P3OF+QDzot/xVKnXFukNoJ/MDGDfifydf2F8QwPls/ZKdcbRY/+G9ye75adGs8+yfuCZaVmvSPGgNK/39YInII+07RQjXUIp6Duh9/wQAAP//ZXflOeYAAAA
              objectset.rio.cattle.io/id: fleet-bootstrap
            creationTimestamp: '2023-07-26T14:33:16Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: fleet-local
              objectset.rio.cattle.io/hash: 67f475f626e5473772f6084a291170a9de5942d1
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:field.cattle.io/projectId: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:objectset.rio.cattle.io/applied: {}
                      f:objectset.rio.cattle.io/id: {}
                    f:labels:
                      f:objectset.rio.cattle.io/hash: {}
                manager: fleetcontroller
                operation: Update
                time: '2023-07-26T14:34:04Z'
            name: fleet-local
            resourceVersion: '5320'
            uid: 613bd616-a782-4724-bbed-ab88c32346b4
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        kube-node-lease:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:45Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:50Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-26T14:26:37Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: kube-node-lease
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: k3s
                operation: Update
                time: '2023-07-26T14:26:37Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
            name: kube-node-lease
            resourceVersion: '5022'
            uid: 880bf462-cbbe-4f79-b94b-0c79fc1c7c96
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        kube-public:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
            creationTimestamp: '2023-07-26T14:26:37Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: kube-public
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: k3s
                operation: Update
                time: '2023-07-26T14:26:37Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
            name: kube-public
            resourceVersion: '5014'
            uid: 082ea596-c40b-463a-a566-02742a57ae6e
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        kube-system:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:49Z"}]}
              field.cattle.io/projectId: local:p-kbbz2
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-26T14:26:37Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              field.cattle.io/projectId: p-kbbz2
              kubernetes.io/metadata.name: kube-system
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: k3s
                operation: Update
                time: '2023-07-26T14:26:37Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/projectId: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      f:field.cattle.io/projectId: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:44Z'
            name: kube-system
            resourceVersion: '5017'
            uid: 8102a9e8-bebe-42ab-b919-111285c4b98c
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        local:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-26T14:33:28Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: local
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                    f:ownerReferences:
                      .: {}
                      k:{"uid":"e39c96f0-b2ea-4bf7-ae3c-f028358c086a"}: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:43Z'
            name: local
            ownerReferences:
              - apiVersion: management.cattle.io/v3
                kind: Cluster
                name: local
                uid: e39c96f0-b2ea-4bf7-ae3c-f028358c086a
            resourceVersion: '4658'
            uid: 2c8631da-5672-4878-9c0b-6925a0c3d1c9
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        logging-systemd-collector:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-14T14:46:37Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-14T14:46:38Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              meta.helm.sh/release-name: local-logging-logging-systemd
              meta.helm.sh/release-namespace: logging-systemd-collector
              objectset.rio.cattle.io/id: default-local-logging-logging-systemd-cattle-fleet-local-system
            creationTimestamp: '2023-12-14T14:46:36Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              app.kubernetes.io/managed-by: Helm
              kubernetes.io/metadata.name: logging-systemd-collector
              name: logging-systemd-collector
              objectset.rio.cattle.io/hash: fea8da652596a37aa1f05039e63f30fe6bf46359
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                manager: rancher
                operation: Update
                time: '2023-12-14T14:46:37Z'
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      f:meta.helm.sh/release-name: {}
                      f:meta.helm.sh/release-namespace: {}
                      f:objectset.rio.cattle.io/id: {}
                    f:labels:
                      .: {}
                      f:app.kubernetes.io/managed-by: {}
                      f:kubernetes.io/metadata.name: {}
                      f:name: {}
                      f:objectset.rio.cattle.io/hash: {}
                manager: fleetagent
                operation: Update
                time: '2023-12-14T14:48:11Z'
            name: logging-systemd-collector
            resourceVersion: '143223480'
            uid: 3cc0116e-e66b-40bf-960d-71cee57ebf3a
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-2fvbr:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-04T09:42:52Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-04T09:42:52Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-04T09:42:51Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-2fvbr
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-04T09:42:51Z'
            name: p-2fvbr
            resourceVersion: '64473659'
            uid: 372955fe-f0ce-47ae-9cad-50212f1bcf91
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-2mv62:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:11:40Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:11:40Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-12-15T11:11:39Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-2mv62
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-12-15T11:11:39Z'
            name: p-2mv62
            resourceVersion: '144140218'
            uid: 3237f449-e50e-457f-9bc2-f6960e3d45c0
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-4bjxh:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-04T09:42:52Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-04T09:42:52Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-04T09:42:51Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-4bjxh
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-04T09:42:51Z'
            name: p-4bjxh
            resourceVersion: '64473645'
            uid: 54a9bf06-74cd-4fc8-b691-e75546446b66
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-5jpf5:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:58:17Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:58:17Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-07-31T07:58:16Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-5jpf5
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:58:16Z'
            name: p-5jpf5
            resourceVersion: '2966949'
            uid: 8e07f7c0-aab7-4cd1-87ea-5268675a361c
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-84lnr:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-06T13:13:36Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-06T13:13:36Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-06T13:13:35Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-84lnr
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-06T13:13:35Z'
            name: p-84lnr
            resourceVersion: '66654841'
            uid: 2dfd5ec2-a42c-4398-802d-61d94e27c11c
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-gtndr:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:03:03Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:03:03Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-12-18T13:03:02Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-gtndr
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-12-18T13:03:02Z'
            name: p-gtndr
            resourceVersion: '147415763'
            uid: c1fb3465-2049-4521-af38-c1ef55eef561
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-gxkpt:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:11:40Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-15T11:11:40Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-12-15T11:11:39Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-gxkpt
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-12-15T11:11:39Z'
            name: p-gxkpt
            resourceVersion: '144140212'
            uid: b2676e51-adbc-487c-bb0e-6917128518f6
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-hwnrx:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-09T08:06:10Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-09T08:06:10Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-09T08:06:09Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-hwnrx
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-09T08:06:09Z'
            name: p-hwnrx
            resourceVersion: '69506124'
            uid: a8ca7504-1be4-4a70-94f9-457c612e69b0
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-kbbz2:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-07-26T14:33:31Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-kbbz2
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:43Z'
            name: p-kbbz2
            resourceVersion: '4736'
            uid: 8f02f371-14fa-41e9-9c1f-406167e36695
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-kwnvn:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:58:17Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T07:58:17Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-07-31T07:58:16Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-kwnvn
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-31T07:58:16Z'
            name: p-kwnvn
            resourceVersion: '2966963'
            uid: 13532595-b14a-48cc-a0fd-cb91815c6612
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-m5qrs:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T14:33:44Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-07-26T14:33:31Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-m5qrs
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T14:33:43Z'
            name: p-m5qrs
            resourceVersion: '4745'
            uid: d5f6ac78-a252-4104-ba00-787a45f3771b
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-ntlmv:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-09T08:06:10Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-09T08:06:10Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-09T08:06:09Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-ntlmv
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-09T08:06:09Z'
            name: p-ntlmv
            resourceVersion: '69506139'
            uid: cfbd264b-7cc1-4266-b0f2-0276a03f7b2a
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-ppx9m:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-06T13:13:36Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-06T13:13:36Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-10-06T13:13:35Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-ppx9m
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-06T13:13:35Z'
            name: p-ppx9m
            resourceVersion: '66654853'
            uid: fce9dc3f-1487-4f14-a5e4-442b3f2a08f7
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        p-zcx7x:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:03:03Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-12-18T13:03:03Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
              management.cattle.io/no-default-sa-token: 'true'
              management.cattle.io/system-namespace: 'true'
            creationTimestamp: '2023-12-18T13:03:02Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: p-zcx7x
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                      f:management.cattle.io/no-default-sa-token: {}
                      f:management.cattle.io/system-namespace: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-12-18T13:03:02Z'
            name: p-zcx7x
            resourceVersion: '147415757'
            uid: 406c1251-04d7-4b09-b7a2-e299818acebb
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        test:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-10-05T17:14:20Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-10-05T17:14:20Z"}]}
              field.cattle.io/containerDefaultResourceLimit: '{}'
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-10-05T17:14:19Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: test
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:field.cattle.io/containerDefaultResourceLimit: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-10-05T17:14:19Z'
            name: test
            resourceVersion: '65846408'
            uid: 96e7971b-46ca-4fda-b1a7-064fb6b8b6c9
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-22wvjjqn5o:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T09:12:52Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T09:12:52Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-31T09:12:51Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-22wvjjqn5o
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-31T09:12:51Z'
            name: u-22wvjjqn5o
            resourceVersion: '3016766'
            uid: 8c6523d1-2ed8-4a33-8b60-415cf7cbbb65
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-3ivgybutzc:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-09-22T06:29:49Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-09-22T06:29:49Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-09-22T06:29:48Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-3ivgybutzc
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-09-22T06:29:48Z'
            name: u-3ivgybutzc
            resourceVersion: '52958083'
            uid: 0824a4bf-c49f-4dec-990f-b04ca0e6f68d
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-akb2exv27p:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-08-28T08:59:25Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-08-28T08:59:25Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-08-28T08:59:24Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-akb2exv27p
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-08-28T08:59:24Z'
            name: u-akb2exv27p
            resourceVersion: '29458100'
            uid: 57408d1c-123a-425f-ae49-2fbd4300556a
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-aqiiuuajd7:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-27T11:30:50Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-27T11:30:50Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-27T11:30:49Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-aqiiuuajd7
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-27T11:30:49Z'
            name: u-aqiiuuajd7
            resourceVersion: '558212'
            uid: 1fa3d7a4-89f8-4750-836b-e2d475e0b9aa
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-cqjtxr36v3:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-31T08:14:18Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-31T08:14:18Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-31T08:14:17Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-cqjtxr36v3
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-31T08:14:17Z'
            name: u-cqjtxr36v3
            resourceVersion: '2979347'
            uid: 52ac1b25-c69b-4de5-8854-9f9f07798e45
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-gbb6kxb2v6:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-08-24T10:09:24Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-08-24T10:09:24Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-08-24T10:09:23Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-gbb6kxb2v6
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-08-24T10:09:23Z'
            name: u-gbb6kxb2v6
            resourceVersion: '25745015'
            uid: bd4adbf5-82f8-4959-b06b-137faedcc3f8
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-gilkxmx7b7:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-08-18T08:42:41Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-08-18T08:42:41Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-08-18T08:42:40Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-gilkxmx7b7
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-08-18T08:42:40Z'
            name: u-gilkxmx7b7
            resourceVersion: '20016975'
            uid: 8d951663-8622-4fe7-aa56-804ed82754e8
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-gtw745thch:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-08-24T05:56:31Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-08-24T05:56:32Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-08-24T05:56:30Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-gtw745thch
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-08-24T05:56:31Z'
            name: u-gtw745thch
            resourceVersion: '25579071'
            uid: 6d4a953b-9f78-4131-9b48-25f4f0d0fcc8
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-nzbduj24bh:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-08-06T20:22:16Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-08-06T20:22:16Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-08-06T20:22:15Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-nzbduj24bh
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-08-06T20:22:15Z'
            name: u-nzbduj24bh
            resourceVersion: '9133764'
            uid: 26bfdc68-579d-4e94-b754-4a7ac372e91a
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-pl5unmfgli:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-08-23T11:38:26Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-08-23T11:38:26Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-08-23T11:38:25Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-pl5unmfgli
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-08-23T11:38:25Z'
            name: u-pl5unmfgli
            resourceVersion: '24857841'
            uid: ebc079b3-66c3-4026-bd27-4f4b694da6d6
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-vvrhmhfpfw:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2024-01-08T15:03:20Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2024-01-08T15:03:20Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2024-01-08T15:03:19Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-vvrhmhfpfw
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2024-01-08T15:03:19Z'
            name: u-vvrhmhfpfw
            resourceVersion: '170196606'
            uid: 8d36db2a-5d80-4b0a-8426-8b8c91ac6a0c
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        u-y43axd4u7z:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-27T11:26:57Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-27T11:26:57Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-27T11:26:56Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: u-y43axd4u7z
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-27T11:26:56Z'
            name: u-y43axd4u7z
            resourceVersion: '556450'
            uid: 96077dda-e17b-4f9f-90b2-5161940b58bb
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
        user-gpllk:
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              cattle.io/status: >-
                {"Conditions":[{"Type":"ResourceQuotaInit","Status":"True","Message":"","LastUpdateTime":"2023-07-26T15:00:21Z"},{"Type":"InitialRolesPopulated","Status":"True","Message":"","LastUpdateTime":"2023-07-26T15:00:21Z"}]}
              lifecycle.cattle.io/create.namespace-auth: 'true'
            creationTimestamp: '2023-07-26T15:00:20Z'
            finalizers:
              - controller.cattle.io/namespace-auth
            labels:
              kubernetes.io/metadata.name: user-gpllk
            managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:metadata:
                    f:annotations:
                      .: {}
                      f:cattle.io/status: {}
                      f:lifecycle.cattle.io/create.namespace-auth: {}
                    f:finalizers:
                      .: {}
                      v:"controller.cattle.io/namespace-auth": {}
                    f:labels:
                      .: {}
                      f:kubernetes.io/metadata.name: {}
                manager: rancher
                operation: Update
                time: '2023-07-26T15:00:20Z'
            name: user-gpllk
            resourceVersion: '17069'
            uid: 72546cbf-e29e-4ffd-b7f7-76d36f8de629
          spec:
            finalizers:
              - kubernetes
          status:
            phase: Active
  namespace:
    cattle-fleet-local-system:
      apps/v1:
        Deployment:
          fleet-agent:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: fleet-agent-local
                meta.helm.sh/release-namespace: cattle-fleet-local-system
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/4xTX3PaPhD8LvdsHENCQvzG8PMvZZpSJqR9yTAZIZ9BjaxzpROFMv7uHWFwSP/QPmGf7/b2dpcdlMgiFywg3YEwhliwIuPCKy2+oGSHHFtFsRTMGmNFFyqHFAqNyB2xRMOdBRE7tqLqNE2d5qMmKXTHbR1jCXUE0uIe/FGV6FiUFaTGax2BFgvUZ1euhFtBCpfXvaR3Wdz0e3hTdG8Ht/lgcd3vYdK7XeQ9ed0fCLyRV1dhmxElvuUJTdFVQoYvZ7m6CmUg5FCjZLLhuRQsV/ctV1FVP+HXYZCtYFxuId3VETCWlRaM+/ETpf9Bij/AH3iJolBGcVgDhnIcnrxXFgu0FvP/vFVmOZMrzL1WZjleGmrL2QalDxwgfTrOoJHYXpptKovONWl42sELbo+ETpw5KksVWrEXCsYGIlgL7TEMAluPMK/ndQTfUC1XDGm3nodjJBkWyqBtFqBZ738Pzk2GH7LZdDjKjmj/WyoDu0Khzh+waJ+ngkM6jgLHry7XdR21gMO7bPL4PBt9nLaQf4lBOzp6l43ejyfP48lj9vB5eH8y3+2XiYN6HoEqxTJUrDByhfbixLt0ncSDOIFD09RrPSWtZFB0XEyIpxbda0R/ya1FR97KIOiuDruC57OTbL74BVqDjC6YQg5S0Mr4zT7LKL1VvB2RYdxwaLfeDN2dJV9B2k2SJGoqEzIPRAxp8OxQ++TQNk17KLtWEodSkjc8+R1VJh2S0MYGiwIlBz/pkESE6BCmcEUsNfm8srRWOdr47SHehFQrodV3zN+mLPvqhT7xYR+zYNm5ha+5JXce7qDevG7+1IJ9o/2PAAAA//9ukq3VMgUAAA
                objectset.rio.cattle.io/id: fleet-agent-bootstrap-cattle-fleet-local-system
              creationTimestamp: '2023-10-06T09:12:46Z'
              generation: 2
              labels:
                app.kubernetes.io/managed-by: Helm
                objectset.rio.cattle.io/hash: 362023f752e7f1989d8b652e029bd2c658ae7c44
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"fleet-agent"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"AGENT_SCOPE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHECKIN_INTERVAL"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: fleetcontroller
                  operation: Update
                  time: '2023-10-06T09:12:46Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        f:app.kubernetes.io/managed-by: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-06T09:13:45Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:13Z'
              name: fleet-agent
              namespace: cattle-fleet-local-system
              resourceVersion: '135401622'
              uid: 9e012d92-6fd9-4e85-bc2f-ae63a79a4391
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: fleet-agent
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: fleet-agent
                spec:
                  affinity:
                    nodeAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - preference:
                            matchExpressions:
                              - key: fleet.cattle.io/agent
                                operator: In
                                values:
                                  - 'true'
                          weight: 1
                  containers:
                    - env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: AGENT_SCOPE
                          value: cattle-fleet-local-system
                        - name: CHECKIN_INTERVAL
                          value: 15m0s
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet-agent
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsGroup: 1000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: fleet-agent
                  serviceAccountName: fleet-agent
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: node.cloudprovider.kubernetes.io/uninitialized
                      operator: Equal
                      value: 'true'
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-10-06T09:12:46Z'
                  lastUpdateTime: '2023-10-06T09:12:55Z'
                  message: >-
                    ReplicaSet "fleet-agent-7b46574cbd" has successfully
                    progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:15:13Z'
                  lastUpdateTime: '2023-12-07T07:15:13Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 2
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
        ReplicaSet:
          fleet-agent-7b46574cbd:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: fleet-agent-local
                meta.helm.sh/release-namespace: cattle-fleet-local-system
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/4xTX3PaPhD8LvdsHENCQvzG8PMvZZpSJqR9yTAZIZ9BjaxzpROFMv7uHWFwSP/QPmGf7/b2dpcdlMgiFywg3YEwhliwIuPCKy2+oGSHHFtFsRTMGmNFFyqHFAqNyB2xRMOdBRE7tqLqNE2d5qMmKXTHbR1jCXUE0uIe/FGV6FiUFaTGax2BFgvUZ1euhFtBCpfXvaR3Wdz0e3hTdG8Ht/lgcd3vYdK7XeQ9ed0fCLyRV1dhmxElvuUJTdFVQoYvZ7m6CmUg5FCjZLLhuRQsV/ctV1FVP+HXYZCtYFxuId3VETCWlRaM+/ETpf9Bij/AH3iJolBGcVgDhnIcnrxXFgu0FvP/vFVmOZMrzL1WZjleGmrL2QalDxwgfTrOoJHYXpptKovONWl42sELbo+ETpw5KksVWrEXCsYGIlgL7TEMAluPMK/ndQTfUC1XDGm3nodjJBkWyqBtFqBZ738Pzk2GH7LZdDjKjmj/WyoDu0Khzh+waJ+ngkM6jgLHry7XdR21gMO7bPL4PBt9nLaQf4lBOzp6l43ejyfP48lj9vB5eH8y3+2XiYN6HoEqxTJUrDByhfbixLt0ncSDOIFD09RrPSWtZFB0XEyIpxbda0R/ya1FR97KIOiuDruC57OTbL74BVqDjC6YQg5S0Mr4zT7LKL1VvB2RYdxwaLfeDN2dJV9B2k2SJGoqEzIPRAxp8OxQ++TQNk17KLtWEodSkjc8+R1VJh2S0MYGiwIlBz/pkESE6BCmcEUsNfm8srRWOdr47SHehFQrodV3zN+mLPvqhT7xYR+zYNm5ha+5JXce7qDevG7+1IJ9o/2PAAAA//9ukq3VMgUAAA
                objectset.rio.cattle.io/id: fleet-agent-bootstrap-cattle-fleet-local-system
              creationTimestamp: '2023-10-06T09:12:46Z'
              generation: 1
              labels:
                app: fleet-agent
                pod-template-hash: 7b46574cbd
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"9e012d92-6fd9-4e85-bc2f-ae63a79a4391"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"fleet-agent"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"AGENT_SCOPE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHECKIN_INTERVAL"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-06T09:13:45Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:13Z'
              name: fleet-agent-7b46574cbd
              namespace: cattle-fleet-local-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: fleet-agent
                  uid: 9e012d92-6fd9-4e85-bc2f-ae63a79a4391
              resourceVersion: '135401621'
              uid: 1fc15793-c456-4a6e-8bf5-8686d9903691
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: fleet-agent
                  pod-template-hash: 7b46574cbd
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: fleet-agent
                    pod-template-hash: 7b46574cbd
                spec:
                  affinity:
                    nodeAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - preference:
                            matchExpressions:
                              - key: fleet.cattle.io/agent
                                operator: In
                                values:
                                  - 'true'
                          weight: 1
                  containers:
                    - env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: AGENT_SCOPE
                          value: cattle-fleet-local-system
                        - name: CHECKIN_INTERVAL
                          value: 15m0s
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet-agent
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsGroup: 1000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: fleet-agent
                  serviceAccountName: fleet-agent
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: node.cloudprovider.kubernetes.io/uninitialized
                      operator: Equal
                      value: 'true'
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
    cattle-fleet-system:
      apps/v1:
        Deployment:
          fleet-controller:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '3'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-07-26T14:33:46Z'
              generation: 3
              labels:
                app.kubernetes.io/managed-by: Helm
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet-controller"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"FLEET_PROPAGATE_DEBUG_SETTINGS_TO_AGENTS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:privileged: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: helm
                  operation: Update
                  time: '2023-07-26T16:23:23Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-10T13:42:58Z'
              name: fleet-controller
              namespace: cattle-fleet-system
              resourceVersion: '172463161'
              uid: 19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: fleet-controller
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: fleet-controller
                spec:
                  containers:
                    - command:
                        - fleetcontroller
                        - '--disable-bootstrap'
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: FLEET_PROPAGATE_DEBUG_SETTINGS_TO_AGENTS
                          value: 'true'
                      image: rancher/fleet:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet-controller
                      resources: {}
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        privileged: false
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsGroup: 1000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: fleet-controller
                  serviceAccountName: fleet-controller
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - emptyDir: {}
                      name: tmp
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T14:33:46Z'
                  lastUpdateTime: '2023-10-06T09:12:39Z'
                  message: >-
                    ReplicaSet "fleet-controller-64f5b4585" has successfully
                    progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2024-01-10T13:42:58Z'
                  lastUpdateTime: '2024-01-10T13:42:58Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 3
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          gitjob:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '3'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-07-26T14:33:46Z'
              generation: 3
              labels:
                app.kubernetes.io/managed-by: Helm
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                        f:spec:
                          f:containers:
                            k:{"name":"gitjob"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: helm
                  operation: Update
                  time: '2023-07-26T16:23:23Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:21Z'
              name: gitjob
              namespace: cattle-fleet-system
              resourceVersion: '135401768'
              uid: d337713a-643d-4730-b43a-841d6b7f59d9
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: gitjob
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: gitjob
                spec:
                  containers:
                    - args:
                        - '--tekton-image'
                        - rancher/tekton-utils:v0.1.33
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/gitjob:v0.1.76
                      imagePullPolicy: IfNotPresent
                      name: gitjob
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: gitjob
                  serviceAccountName: gitjob
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T14:33:46Z'
                  lastUpdateTime: '2023-10-06T09:12:43Z'
                  message: ReplicaSet "gitjob-58dc7cb797" has successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:15:21Z'
                  lastUpdateTime: '2023-12-07T07:15:21Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 3
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
        ReplicaSet:
          fleet-controller-56786984f4:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '2'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-07-26T16:23:23Z'
              generation: 2
              labels:
                app: fleet-controller
                pod-template-hash: 56786984f4
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet-controller"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"FLEET_PROPAGATE_DEBUG_SETTINGS_TO_AGENTS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:privileged: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T16:23:23Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-10-06T09:12:39Z'
              name: fleet-controller-56786984f4
              namespace: cattle-fleet-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: fleet-controller
                  uid: 19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc
              resourceVersion: '66484267'
              uid: ebac9a71-27a2-4a3e-9f82-2dfed904c86c
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: fleet-controller
                  pod-template-hash: 56786984f4
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: fleet-controller
                    pod-template-hash: 56786984f4
                spec:
                  containers:
                    - command:
                        - fleetcontroller
                        - '--disable-bootstrap'
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: FLEET_PROPAGATE_DEBUG_SETTINGS_TO_AGENTS
                          value: 'true'
                      image: rancher/fleet:v0.7.0
                      imagePullPolicy: IfNotPresent
                      name: fleet-controller
                      resources: {}
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        privileged: false
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsGroup: 1000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: fleet-controller
                  serviceAccountName: fleet-controller
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - emptyDir: {}
                      name: tmp
            status:
              observedGeneration: 2
              replicas: 0
          fleet-controller-64f5b4585:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '3'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-10-06T09:12:16Z'
              generation: 1
              labels:
                app: fleet-controller
                pod-template-hash: 64f5b4585
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet-controller"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"FLEET_PROPAGATE_DEBUG_SETTINGS_TO_AGENTS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:privileged: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-06T09:12:16Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-10T13:42:58Z'
              name: fleet-controller-64f5b4585
              namespace: cattle-fleet-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: fleet-controller
                  uid: 19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc
              resourceVersion: '172463160'
              uid: 86f18245-e19c-490d-9481-68cab928a7e1
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: fleet-controller
                  pod-template-hash: 64f5b4585
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: fleet-controller
                    pod-template-hash: 64f5b4585
                spec:
                  containers:
                    - command:
                        - fleetcontroller
                        - '--disable-bootstrap'
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: FLEET_PROPAGATE_DEBUG_SETTINGS_TO_AGENTS
                          value: 'true'
                      image: rancher/fleet:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet-controller
                      resources: {}
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        privileged: false
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsGroup: 1000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: fleet-controller
                  serviceAccountName: fleet-controller
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - emptyDir: {}
                      name: tmp
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          fleet-controller-65d9f467d8:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-07-26T14:33:46Z'
              generation: 2
              labels:
                app: fleet-controller
                pod-template-hash: 65d9f467d8
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet-controller"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T14:33:46Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-26T16:23:35Z'
              name: fleet-controller-65d9f467d8
              namespace: cattle-fleet-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: fleet-controller
                  uid: 19d640ad-69a1-4d7f-b3c1-0caf5b5e75fc
              resourceVersion: '61732'
              uid: 9bbb3f9e-48dc-4f1b-85f1-b8fad1d0a196
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: fleet-controller
                  pod-template-hash: 65d9f467d8
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: fleet-controller
                    pod-template-hash: 65d9f467d8
                spec:
                  containers:
                    - command:
                        - fleetcontroller
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/fleet:v0.5.3
                      imagePullPolicy: IfNotPresent
                      name: fleet-controller
                      resources: {}
                      securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsGroup: 1000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: fleet-controller
                  serviceAccountName: fleet-controller
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - emptyDir: {}
                      name: tmp
            status:
              observedGeneration: 2
              replicas: 0
          gitjob-58dc7cb797:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '3'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-10-06T09:12:16Z'
              generation: 1
              labels:
                app: gitjob
                pod-template-hash: 58dc7cb797
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d337713a-643d-4730-b43a-841d6b7f59d9"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"gitjob"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-06T09:12:16Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:21Z'
              name: gitjob-58dc7cb797
              namespace: cattle-fleet-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: gitjob
                  uid: d337713a-643d-4730-b43a-841d6b7f59d9
              resourceVersion: '135401765'
              uid: 3b5517b3-fe5d-4af6-886e-865a9f3e72e3
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: gitjob
                  pod-template-hash: 58dc7cb797
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: gitjob
                    pod-template-hash: 58dc7cb797
                spec:
                  containers:
                    - args:
                        - '--tekton-image'
                        - rancher/tekton-utils:v0.1.33
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/gitjob:v0.1.76
                      imagePullPolicy: IfNotPresent
                      name: gitjob
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: gitjob
                  serviceAccountName: gitjob
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          gitjob-845b9dcc47:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '2'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-07-26T16:23:23Z'
              generation: 2
              labels:
                app: gitjob
                pod-template-hash: 845b9dcc47
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d337713a-643d-4730-b43a-841d6b7f59d9"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"gitjob"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T16:23:23Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-10-06T09:12:43Z'
              name: gitjob-845b9dcc47
              namespace: cattle-fleet-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: gitjob
                  uid: d337713a-643d-4730-b43a-841d6b7f59d9
              resourceVersion: '66484632'
              uid: 9e3fa5a5-3a2d-4c4a-bfef-84ddfdaa4425
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: gitjob
                  pod-template-hash: 845b9dcc47
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: gitjob
                    pod-template-hash: 845b9dcc47
                spec:
                  containers:
                    - args:
                        - '--tekton-image'
                        - rancher/tekton-utils:v0.1.22
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/gitjob:v0.1.54
                      imagePullPolicy: IfNotPresent
                      name: gitjob
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: gitjob
                  serviceAccountName: gitjob
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              observedGeneration: 2
              replicas: 0
          gitjob-d74ff755b:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: fleet
                meta.helm.sh/release-namespace: cattle-fleet-system
              creationTimestamp: '2023-07-26T14:33:46Z'
              generation: 2
              labels:
                app: gitjob
                pod-template-hash: d74ff755b
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d337713a-643d-4730-b43a-841d6b7f59d9"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"gitjob"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T14:33:46Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-26T16:23:35Z'
              name: gitjob-d74ff755b
              namespace: cattle-fleet-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: gitjob
                  uid: d337713a-643d-4730-b43a-841d6b7f59d9
              resourceVersion: '61753'
              uid: ce9139fe-4b9c-4017-8331-62f04f285b77
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: gitjob
                  pod-template-hash: d74ff755b
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: gitjob
                    pod-template-hash: d74ff755b
                spec:
                  containers:
                    - command:
                        - gitjob
                        - '--tekton-image'
                        - rancher/tekton-utils:v0.1.7
                      env:
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/gitjob:v0.1.32
                      imagePullPolicy: IfNotPresent
                      name: gitjob
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: gitjob
                  serviceAccountName: gitjob
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              observedGeneration: 2
              replicas: 0
    cattle-gatekeeper-system:
      apps/v1:
        Deployment:
          gatekeeper-audit:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-gatekeeper
                meta.helm.sh/release-namespace: cattle-gatekeeper-system
              creationTimestamp: '2024-01-17T07:28:01Z'
              generation: 1
              labels:
                app: rancher-gatekeeper
                app.kubernetes.io/managed-by: Helm
                chart: rancher-gatekeeper
                control-plane: audit-controller
                gatekeeper.sh/operation: audit
                gatekeeper.sh/system: 'yes'
                heritage: Helm
                release: rancher-gatekeeper
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:chart: {}
                        f:control-plane: {}
                        f:gatekeeper.sh/operation: {}
                        f:gatekeeper.sh/system: {}
                        f:heritage: {}
                        f:release: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:chart: {}
                            f:control-plane: {}
                            f:gatekeeper.sh/operation: {}
                            f:gatekeeper.sh/system: {}
                            f:heritage: {}
                            f:release: {}
                        f:spec:
                          f:affinity: {}
                          f:automountServiceAccountToken: {}
                          f:containers:
                            k:{"name":"manager"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"CONTAINER_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8888,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9090,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsGroup: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                                f:seccompProfile:
                                  .: {}
                                  f:type: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/tmp/audit"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:supplementalGroups: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"cert"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tmp-volume"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: helm
                  operation: Update
                  time: '2024-01-17T07:28:01Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-17T07:29:01Z'
              name: gatekeeper-audit
              namespace: cattle-gatekeeper-system
              resourceVersion: '180563147'
              uid: 10d8d345-4c37-4aff-b6b8-633610744fb5
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: rancher-gatekeeper
                  chart: rancher-gatekeeper
                  control-plane: audit-controller
                  gatekeeper.sh/operation: audit
                  gatekeeper.sh/system: 'yes'
                  heritage: Helm
                  release: rancher-gatekeeper
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-gatekeeper
                    chart: rancher-gatekeeper
                    control-plane: audit-controller
                    gatekeeper.sh/operation: audit
                    gatekeeper.sh/system: 'yes'
                    heritage: Helm
                    release: rancher-gatekeeper
                spec:
                  affinity: {}
                  automountServiceAccountToken: true
                  containers:
                    - args:
                        - '--audit-interval=60'
                        - '--log-level=INFO'
                        - '--constraint-violations-limit=20'
                        - >-
                          --validating-webhook-configuration-name=gatekeeper-validating-webhook-configuration
                        - >-
                          --mutating-webhook-configuration-name=gatekeeper-mutating-webhook-configuration
                        - '--audit-from-cache=true'
                        - '--audit-chunk-size=500'
                        - '--audit-match-kind-only=false'
                        - '--emit-audit-events=false'
                        - '--audit-events-involved-namespace=false'
                        - '--operation=audit'
                        - '--operation=status'
                        - '--operation=mutation-status'
                        - '--logtostderr'
                        - '--health-addr=:9090'
                        - '--prometheus-port=8888'
                        - '--enable-external-data=true'
                        - '--enable-generator-resource-expansion=false'
                        - '--metrics-backend=prometheus'
                        - '--disable-cert-rotation=true'
                      command:
                        - /manager
                      env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: CONTAINER_NAME
                          value: manager
                      image: rancher/mirrored-openpolicyagent-gatekeeper:v3.12.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: manager
                      ports:
                        - containerPort: 8888
                          name: metrics
                          protocol: TCP
                        - containerPort: 9090
                          name: healthz
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /readyz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 512Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                        runAsGroup: 999
                        runAsNonRoot: true
                        runAsUser: 1000
                        seccompProfile:
                          type: RuntimeDefault
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /certs
                          name: cert
                          readOnly: true
                        - mountPath: /tmp/audit
                          name: tmp-volume
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 999
                    supplementalGroups:
                      - 999
                  serviceAccount: gatekeeper-admin
                  serviceAccountName: gatekeeper-admin
                  terminationGracePeriodSeconds: 60
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: cert
                      secret:
                        defaultMode: 420
                        secretName: gatekeeper-webhook-server-cert
                    - emptyDir: {}
                      name: tmp-volume
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2024-01-17T07:29:01Z'
                  lastUpdateTime: '2024-01-17T07:29:01Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
                - lastTransitionTime: '2024-01-17T07:28:01Z'
                  lastUpdateTime: '2024-01-17T07:29:01Z'
                  message: >-
                    ReplicaSet "gatekeeper-audit-98f4464f9" has successfully
                    progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          gatekeeper-controller-manager:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-gatekeeper
                meta.helm.sh/release-namespace: cattle-gatekeeper-system
              creationTimestamp: '2024-01-17T07:28:01Z'
              generation: 1
              labels:
                app: rancher-gatekeeper
                app.kubernetes.io/managed-by: Helm
                chart: rancher-gatekeeper
                control-plane: controller-manager
                gatekeeper.sh/operation: webhook
                gatekeeper.sh/system: 'yes'
                heritage: Helm
                release: rancher-gatekeeper
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:chart: {}
                        f:control-plane: {}
                        f:gatekeeper.sh/operation: {}
                        f:gatekeeper.sh/system: {}
                        f:heritage: {}
                        f:release: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:chart: {}
                            f:control-plane: {}
                            f:gatekeeper.sh/operation: {}
                            f:gatekeeper.sh/system: {}
                            f:heritage: {}
                            f:release: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:podAntiAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:automountServiceAccountToken: {}
                          f:containers:
                            k:{"name":"manager"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"CONTAINER_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":8888,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9090,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsGroup: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                                f:seccompProfile:
                                  .: {}
                                  f:type: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:supplementalGroups: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"cert"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm
                  operation: Update
                  time: '2024-01-17T07:28:01Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-17T07:30:11Z'
              name: gatekeeper-controller-manager
              namespace: cattle-gatekeeper-system
              resourceVersion: '180564150'
              uid: 15de419e-e09b-4ac8-b6a6-7a9bad040fdd
            spec:
              progressDeadlineSeconds: 600
              replicas: 3
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: rancher-gatekeeper
                  chart: rancher-gatekeeper
                  control-plane: controller-manager
                  gatekeeper.sh/operation: webhook
                  gatekeeper.sh/system: 'yes'
                  heritage: Helm
                  release: rancher-gatekeeper
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-gatekeeper
                    chart: rancher-gatekeeper
                    control-plane: controller-manager
                    gatekeeper.sh/operation: webhook
                    gatekeeper.sh/system: 'yes'
                    heritage: Helm
                    release: rancher-gatekeeper
                spec:
                  affinity:
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchExpressions:
                                - key: gatekeeper.sh/operation
                                  operator: In
                                  values:
                                    - webhook
                            topologyKey: kubernetes.io/hostname
                          weight: 100
                  automountServiceAccountToken: true
                  containers:
                    - args:
                        - '--port=8443'
                        - '--health-addr=:9090'
                        - '--prometheus-port=8888'
                        - '--logtostderr'
                        - '--log-denies=false'
                        - '--emit-admission-events=false'
                        - '--admission-events-involved-namespace=false'
                        - '--log-level=INFO'
                        - '--exempt-namespace=cattle-gatekeeper-system'
                        - '--operation=webhook'
                        - '--enable-external-data=true'
                        - '--enable-generator-resource-expansion=false'
                        - '--log-mutations=false'
                        - '--mutation-annotations=false'
                        - '--disable-cert-rotation=false'
                        - '--max-serving-threads=-1'
                        - '--tls-min-version=1.3'
                        - '--metrics-backend=prometheus'
                        - '--operation=mutation-webhook'
                        - '--disable-opa-builtin={http.send}'
                      command:
                        - /manager
                      env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: CONTAINER_NAME
                          value: manager
                      image: rancher/mirrored-openpolicyagent-gatekeeper:v3.12.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: manager
                      ports:
                        - containerPort: 8443
                          name: webhook-server
                          protocol: TCP
                        - containerPort: 8888
                          name: metrics
                          protocol: TCP
                        - containerPort: 9090
                          name: healthz
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /readyz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 512Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                        runAsGroup: 999
                        runAsNonRoot: true
                        runAsUser: 1000
                        seccompProfile:
                          type: RuntimeDefault
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /certs
                          name: cert
                          readOnly: true
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 999
                    supplementalGroups:
                      - 999
                  serviceAccount: gatekeeper-admin
                  serviceAccountName: gatekeeper-admin
                  terminationGracePeriodSeconds: 60
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: cert
                      secret:
                        defaultMode: 420
                        secretName: gatekeeper-webhook-server-cert
            status:
              availableReplicas: 3
              conditions:
                - lastTransitionTime: '2024-01-17T07:30:11Z'
                  lastUpdateTime: '2024-01-17T07:30:11Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
                - lastTransitionTime: '2024-01-17T07:28:01Z'
                  lastUpdateTime: '2024-01-17T07:30:11Z'
                  message: >-
                    ReplicaSet "gatekeeper-controller-manager-659f58976d" has
                    successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
              observedGeneration: 1
              readyReplicas: 3
              replicas: 3
              updatedReplicas: 3
        ReplicaSet:
          gatekeeper-audit-98f4464f9:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-gatekeeper
                meta.helm.sh/release-namespace: cattle-gatekeeper-system
              creationTimestamp: '2024-01-17T07:28:01Z'
              generation: 1
              labels:
                app: rancher-gatekeeper
                chart: rancher-gatekeeper
                control-plane: audit-controller
                gatekeeper.sh/operation: audit
                gatekeeper.sh/system: 'yes'
                heritage: Helm
                pod-template-hash: 98f4464f9
                release: rancher-gatekeeper
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:chart: {}
                        f:control-plane: {}
                        f:gatekeeper.sh/operation: {}
                        f:gatekeeper.sh/system: {}
                        f:heritage: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"10d8d345-4c37-4aff-b6b8-633610744fb5"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:chart: {}
                            f:control-plane: {}
                            f:gatekeeper.sh/operation: {}
                            f:gatekeeper.sh/system: {}
                            f:heritage: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:affinity: {}
                          f:automountServiceAccountToken: {}
                          f:containers:
                            k:{"name":"manager"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"CONTAINER_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8888,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9090,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsGroup: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                                f:seccompProfile:
                                  .: {}
                                  f:type: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/tmp/audit"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:supplementalGroups: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"cert"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tmp-volume"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2024-01-17T07:28:01Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-17T07:29:01Z'
              name: gatekeeper-audit-98f4464f9
              namespace: cattle-gatekeeper-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: gatekeeper-audit
                  uid: 10d8d345-4c37-4aff-b6b8-633610744fb5
              resourceVersion: '180563145'
              uid: 5b837716-b340-416f-bc7c-877488c3d8d1
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: rancher-gatekeeper
                  chart: rancher-gatekeeper
                  control-plane: audit-controller
                  gatekeeper.sh/operation: audit
                  gatekeeper.sh/system: 'yes'
                  heritage: Helm
                  pod-template-hash: 98f4464f9
                  release: rancher-gatekeeper
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-gatekeeper
                    chart: rancher-gatekeeper
                    control-plane: audit-controller
                    gatekeeper.sh/operation: audit
                    gatekeeper.sh/system: 'yes'
                    heritage: Helm
                    pod-template-hash: 98f4464f9
                    release: rancher-gatekeeper
                spec:
                  affinity: {}
                  automountServiceAccountToken: true
                  containers:
                    - args:
                        - '--audit-interval=60'
                        - '--log-level=INFO'
                        - '--constraint-violations-limit=20'
                        - >-
                          --validating-webhook-configuration-name=gatekeeper-validating-webhook-configuration
                        - >-
                          --mutating-webhook-configuration-name=gatekeeper-mutating-webhook-configuration
                        - '--audit-from-cache=true'
                        - '--audit-chunk-size=500'
                        - '--audit-match-kind-only=false'
                        - '--emit-audit-events=false'
                        - '--audit-events-involved-namespace=false'
                        - '--operation=audit'
                        - '--operation=status'
                        - '--operation=mutation-status'
                        - '--logtostderr'
                        - '--health-addr=:9090'
                        - '--prometheus-port=8888'
                        - '--enable-external-data=true'
                        - '--enable-generator-resource-expansion=false'
                        - '--metrics-backend=prometheus'
                        - '--disable-cert-rotation=true'
                      command:
                        - /manager
                      env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: CONTAINER_NAME
                          value: manager
                      image: rancher/mirrored-openpolicyagent-gatekeeper:v3.12.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: manager
                      ports:
                        - containerPort: 8888
                          name: metrics
                          protocol: TCP
                        - containerPort: 9090
                          name: healthz
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /readyz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 512Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                        runAsGroup: 999
                        runAsNonRoot: true
                        runAsUser: 1000
                        seccompProfile:
                          type: RuntimeDefault
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /certs
                          name: cert
                          readOnly: true
                        - mountPath: /tmp/audit
                          name: tmp-volume
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 999
                    supplementalGroups:
                      - 999
                  serviceAccount: gatekeeper-admin
                  serviceAccountName: gatekeeper-admin
                  terminationGracePeriodSeconds: 60
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: cert
                      secret:
                        defaultMode: 420
                        secretName: gatekeeper-webhook-server-cert
                    - emptyDir: {}
                      name: tmp-volume
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          gatekeeper-controller-manager-659f58976d:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '3'
                deployment.kubernetes.io/max-replicas: '4'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-gatekeeper
                meta.helm.sh/release-namespace: cattle-gatekeeper-system
              creationTimestamp: '2024-01-17T07:28:01Z'
              generation: 1
              labels:
                app: rancher-gatekeeper
                chart: rancher-gatekeeper
                control-plane: controller-manager
                gatekeeper.sh/operation: webhook
                gatekeeper.sh/system: 'yes'
                heritage: Helm
                pod-template-hash: 659f58976d
                release: rancher-gatekeeper
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:chart: {}
                        f:control-plane: {}
                        f:gatekeeper.sh/operation: {}
                        f:gatekeeper.sh/system: {}
                        f:heritage: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"15de419e-e09b-4ac8-b6a6-7a9bad040fdd"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:chart: {}
                            f:control-plane: {}
                            f:gatekeeper.sh/operation: {}
                            f:gatekeeper.sh/system: {}
                            f:heritage: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:podAntiAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:automountServiceAccountToken: {}
                          f:containers:
                            k:{"name":"manager"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"CONTAINER_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"POD_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":8888,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9090,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsGroup: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                                f:seccompProfile:
                                  .: {}
                                  f:type: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:supplementalGroups: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"cert"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2024-01-17T07:28:01Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-17T07:29:41Z'
              name: gatekeeper-controller-manager-659f58976d
              namespace: cattle-gatekeeper-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: gatekeeper-controller-manager
                  uid: 15de419e-e09b-4ac8-b6a6-7a9bad040fdd
              resourceVersion: '180564146'
              uid: 4738d9e6-210e-409d-a89e-cdf2ce1cc77e
            spec:
              replicas: 3
              selector:
                matchLabels:
                  app: rancher-gatekeeper
                  chart: rancher-gatekeeper
                  control-plane: controller-manager
                  gatekeeper.sh/operation: webhook
                  gatekeeper.sh/system: 'yes'
                  heritage: Helm
                  pod-template-hash: 659f58976d
                  release: rancher-gatekeeper
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-gatekeeper
                    chart: rancher-gatekeeper
                    control-plane: controller-manager
                    gatekeeper.sh/operation: webhook
                    gatekeeper.sh/system: 'yes'
                    heritage: Helm
                    pod-template-hash: 659f58976d
                    release: rancher-gatekeeper
                spec:
                  affinity:
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchExpressions:
                                - key: gatekeeper.sh/operation
                                  operator: In
                                  values:
                                    - webhook
                            topologyKey: kubernetes.io/hostname
                          weight: 100
                  automountServiceAccountToken: true
                  containers:
                    - args:
                        - '--port=8443'
                        - '--health-addr=:9090'
                        - '--prometheus-port=8888'
                        - '--logtostderr'
                        - '--log-denies=false'
                        - '--emit-admission-events=false'
                        - '--admission-events-involved-namespace=false'
                        - '--log-level=INFO'
                        - '--exempt-namespace=cattle-gatekeeper-system'
                        - '--operation=webhook'
                        - '--enable-external-data=true'
                        - '--enable-generator-resource-expansion=false'
                        - '--log-mutations=false'
                        - '--mutation-annotations=false'
                        - '--disable-cert-rotation=false'
                        - '--max-serving-threads=-1'
                        - '--tls-min-version=1.3'
                        - '--metrics-backend=prometheus'
                        - '--operation=mutation-webhook'
                        - '--disable-opa-builtin={http.send}'
                      command:
                        - /manager
                      env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: CONTAINER_NAME
                          value: manager
                      image: rancher/mirrored-openpolicyagent-gatekeeper:v3.12.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: manager
                      ports:
                        - containerPort: 8443
                          name: webhook-server
                          protocol: TCP
                        - containerPort: 8888
                          name: metrics
                          protocol: TCP
                        - containerPort: 9090
                          name: healthz
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /readyz
                          port: 9090
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 512Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                        runAsGroup: 999
                        runAsNonRoot: true
                        runAsUser: 1000
                        seccompProfile:
                          type: RuntimeDefault
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /certs
                          name: cert
                          readOnly: true
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 999
                    supplementalGroups:
                      - 999
                  serviceAccount: gatekeeper-admin
                  serviceAccountName: gatekeeper-admin
                  terminationGracePeriodSeconds: 60
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: cert
                      secret:
                        defaultMode: 420
                        secretName: gatekeeper-webhook-server-cert
            status:
              availableReplicas: 3
              fullyLabeledReplicas: 3
              observedGeneration: 1
              readyReplicas: 3
              replicas: 3
    cattle-logging-system:
      apps/v1:
        DaemonSet:
          rancher-logging-k3s-journald-aggregator:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              annotations:
                deprecated.daemonset.template.generation: '3'
                meta.helm.sh/release-name: rancher-logging
                meta.helm.sh/release-namespace: cattle-logging-system
                objectset.rio.cattle.io/id: default-local-logging-logging-operator-cattle-fleet-local-7d49b
              creationTimestamp: '2023-07-31T07:46:26Z'
              generation: 3
              labels:
                app.kubernetes.io/managed-by: Helm
                objectset.rio.cattle.io/hash: 4edd6e5839ccdb0913d5c2e4e95800f04175fa15
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deprecated.daemonset.template.generation: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:checksum/config: {}
                          f:labels:
                            .: {}
                            f:name: {}
                          f:name: {}
                          f:namespace: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fluentbit"}:
                              .: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/machine-id"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/fluent-bit/etc/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/var/log/journal"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"journal"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"machine-id"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                      f:updateStrategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-12-14T16:16:02Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:currentNumberScheduled: {}
                      f:desiredNumberScheduled: {}
                      f:numberAvailable: {}
                      f:numberMisscheduled: {}
                      f:numberReady: {}
                      f:observedGeneration: {}
                      f:updatedNumberScheduled: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-14T16:16:24Z'
              name: rancher-logging-k3s-journald-aggregator
              namespace: cattle-logging-system
              resourceVersion: '143291216'
              uid: 30696c69-5280-4d04-bd88-853432ff3bc1
            spec:
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  name: rancher-logging-k3s-journald-aggregator
              template:
                metadata:
                  annotations:
                    checksum/config: >-
                      89b517b320334c9ac54f71adeeca4e866819bc387a090e5ab04f6dbbdbc77175
                  creationTimestamp: null
                  labels:
                    name: rancher-logging-k3s-journald-aggregator
                  name: rancher-logging-k3s-journald-aggregator
                  namespace: cattle-logging-system
                spec:
                  containers:
                    - image: rancher/mirrored-fluent-fluent-bit:1.9.5
                      imagePullPolicy: IfNotPresent
                      name: fluentbit
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /fluent-bit/etc/
                          name: config
                        - mountPath: /var/log/journal
                          name: journal
                          readOnly: true
                        - mountPath: /etc/machine-id
                          name: machine-id
                          readOnly: true
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-logging-k3s-journald-aggregator
                  serviceAccountName: rancher-logging-k3s-journald-aggregator
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: rancher-logging-k3s
                      name: config
                    - hostPath:
                        path: /var/log/journal
                        type: ''
                      name: journal
                    - hostPath:
                        path: /etc/machine-id
                        type: ''
                      name: machine-id
              updateStrategy:
                rollingUpdate:
                  maxSurge: 0
                  maxUnavailable: 1
                type: RollingUpdate
            status:
              currentNumberScheduled: 3
              desiredNumberScheduled: 3
              numberAvailable: 3
              numberMisscheduled: 0
              numberReady: 3
              observedGeneration: 3
              updatedNumberScheduled: 3
          rancher-logging-root-fluentbit:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              annotations:
                banzaicloud.com/last-applied: >-
                  UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAb3JpZ2luYWy8lE1v4zYQhv/LnCVblu0k1q1o91BgkwYboJcihyE5kglTpJYcunEN/feClh07/tjNaW8S9c6r+Xg4W2iJUSEjVFtAax0ja2dDelXUeZLIpEYKqXU2EI+Y2s4g06ghS34nhgpK6DMwKMjsIrHrRqsoyFtiCiPtxi1abEjlYgMVeLRyST43rmm0bXLvHEN2JcpiS1BBbSJZFprTX/Zn1zzyo3DQhQ5lEktkNvSuDZvA1EIG7l9L/hvV5MlKClD9k3LXf5MPQ137iJFA+x9qaVxUKa/1RBDjBDKQzrJ3xpCHin2kDFbaKqjg6xAJP0wYMog6qRd3tVrMZZnTXaHyWTkV+cOioHyyILWYzCcLqmfQv/YZhI5kanEgQ5KdT88tslx+/QXd7zM4zH/339vsyCXJVYjteIjOheaRdLaGCsRDWdD0QU3VHEtVT0kUhNNJKWZ3Mynq+/uynspirmZ1qe5luSinEqfyoUScljNB6lehdtLsNGXUlvyAiG6xORnpuNXeO09qz19+rLmajBajOWRDyHM05tkZLVNmf9ZPjp89BbJ8pOQYChl4Ci76HZhbMLrVPPS2i+nKFUVCuKXW+eQ3KYrH1BpP3yOFU+XkTDlPwlQdyeg1b353lumNodr2GaydiS09umh5KLZNj8/IS6hgvEY/NlqMlZMr8uOTvrxXsEZvtPjwxROqv6zZDFekz66Zumb80cM1nwg9tmtMLC9gezdMbzpdxhDFPvZce+HNqE2uxNGkc0EnwJW4FItY1x/acDjoX/vXDKxT9HJyYz+y50JaNdrGN7g1lkB+rSX9JmX669MndyA7s9/RwyyprkkyVPDkXuSSVDQEGaxo874j9+lk4LoUmbKFL98jGshgjSbSSaY/9ksl594ZOrto+43ZGbR0YprGe+755Y1k5J9bEkt1YfV6YHkofenCflhb6H5Kc38b55TjTTPXnIUmilPEBYckPaXZgmZqhxSHIi8Z7m4A+3qw+RwO/a67bcebP7QfqLoO9lXNCc99BrFTyPTCHpmaTRImRhk5Dnsnek+Wn2IryB/IUFAVGSgK2pO69snuzh51CFeOvxGqDVRF3/8fAAD//1BLBwhBI7HpNQMAALQIAABQSwECFAAUAAgACAAAAAAAQSOx6TUDAAC0CAAACAAAAAAAAAAAAAAAAAAAAAAAb3JpZ2luYWxQSwUGAAAAAAEAAQA2AAAAawMAAAAA
                deprecated.daemonset.template.generation: '3'
              creationTimestamp: '2023-07-31T07:46:38Z'
              generation: 3
              labels:
                app.kubernetes.io/managed-by: rancher-logging-root
                app.kubernetes.io/name: fluentbit
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:banzaicloud.com/last-applied: {}
                        f:deprecated.daemonset.template.generation: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"96fd95c2-e60d-423b-890e-19ed91519ef4"}: {}
                    f:spec:
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:checksum/fluent-bit.conf: {}
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fluent-bit"}:
                              .: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/buffers"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/fluent-bit/etc/fluent-bit.conf"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:subPath: {}
                                k:{"mountPath":"/tail-db"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/var/lib/docker/containers"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/var/log/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"buffers"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"config"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:items: {}
                                f:secretName: {}
                            k:{"name":"positiondb"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"varlibcontainers"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"varlogs"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                      f:updateStrategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                  manager: manager
                  operation: Update
                  time: '2023-07-31T07:46:38Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:currentNumberScheduled: {}
                      f:desiredNumberScheduled: {}
                      f:numberAvailable: {}
                      f:numberMisscheduled: {}
                      f:numberReady: {}
                      f:observedGeneration: {}
                      f:updatedNumberScheduled: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:20:50Z'
              name: rancher-logging-root-fluentbit
              namespace: cattle-logging-system
              ownerReferences:
                - apiVersion: logging.banzaicloud.io/v1beta1
                  controller: true
                  kind: Logging
                  name: rancher-logging-root
                  uid: 96fd95c2-e60d-423b-890e-19ed91519ef4
              resourceVersion: '135406808'
              uid: 77b06de7-2626-4c57-adff-af49626321b4
            spec:
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/managed-by: rancher-logging-root
                  app.kubernetes.io/name: fluentbit
              template:
                metadata:
                  annotations:
                    checksum/fluent-bit.conf: >-
                      b820e38d3d5a2df3eb0ea312b464cbf772f3c05d4f2d7c2923ca3c82aa324bed
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/managed-by: rancher-logging-root
                    app.kubernetes.io/name: fluentbit
                spec:
                  containers:
                    - image: rancher/mirrored-fluent-fluent-bit:1.9.5
                      imagePullPolicy: IfNotPresent
                      name: fluent-bit
                      resources:
                        limits:
                          cpu: 200m
                          memory: 100M
                        requests:
                          cpu: 100m
                          memory: 50M
                      securityContext: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /var/lib/docker/containers
                          name: varlibcontainers
                          readOnly: true
                        - mountPath: /var/log/
                          name: varlogs
                          readOnly: true
                        - mountPath: /fluent-bit/etc/fluent-bit.conf
                          name: config
                          subPath: fluent-bit.conf
                        - mountPath: /tail-db
                          name: positiondb
                        - mountPath: /buffers
                          name: buffers
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-logging-root-fluentbit
                  serviceAccountName: rancher-logging-root-fluentbit
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/controlplane
                      value: 'true'
                    - effect: NoExecute
                      key: node-role.kubernetes.io/etcd
                      value: 'true'
                  volumes:
                    - hostPath:
                        path: /var/lib/docker/containers
                        type: ''
                      name: varlibcontainers
                    - hostPath:
                        path: /var/log
                        type: ''
                      name: varlogs
                    - name: config
                      secret:
                        defaultMode: 420
                        items:
                          - key: fluent-bit.conf
                            path: fluent-bit.conf
                        secretName: rancher-logging-root-fluentbit
                    - emptyDir: {}
                      name: positiondb
                    - emptyDir: {}
                      name: buffers
              updateStrategy:
                rollingUpdate:
                  maxSurge: 0
                  maxUnavailable: 1
                type: RollingUpdate
            status:
              currentNumberScheduled: 3
              desiredNumberScheduled: 3
              numberAvailable: 3
              numberMisscheduled: 0
              numberReady: 3
              observedGeneration: 3
              updatedNumberScheduled: 3
        Deployment:
          rancher-logging:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '2'
                meta.helm.sh/release-name: rancher-logging
                meta.helm.sh/release-namespace: cattle-logging-system
                objectset.rio.cattle.io/id: default-local-logging-logging-operator-cattle-fleet-local-7d49b
              creationTimestamp: '2023-07-31T07:46:26Z'
              generation: 2
              labels:
                app.kubernetes.io/instance: rancher-logging
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: rancher-logging
                app.kubernetes.io/version: 3.17.10
                helm.sh/chart: rancher-logging-102.0.1_up3.17.10
                objectset.rio.cattle.io/hash: 4edd6e5839ccdb0913d5c2e4e95800f04175fa15
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                        f:app.kubernetes.io/version: {}
                        f:helm.sh/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/name: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-logging"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-07-31T07:46:26Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-31T23:05:41Z'
              name: rancher-logging
              namespace: cattle-logging-system
              resourceVersion: '161449373'
              uid: 4c5c694a-727f-4b11-bf8e-9ca78217d5c8
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-logging
                  app.kubernetes.io/name: rancher-logging
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/instance: rancher-logging
                    app.kubernetes.io/name: rancher-logging
                spec:
                  containers:
                    - args:
                        - '-enable-leader-election=true'
                      image: rancher/mirrored-banzaicloud-logging-operator:3.17.10
                      imagePullPolicy: IfNotPresent
                      name: rancher-logging
                      ports:
                        - containerPort: 8080
                          name: http
                          protocol: TCP
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-logging
                  serviceAccountName: rancher-logging
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-31T07:46:26Z'
                  lastUpdateTime: '2023-07-31T09:54:43Z'
                  message: >-
                    ReplicaSet "rancher-logging-6b5b478f78" has successfully
                    progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-31T23:05:41Z'
                  lastUpdateTime: '2023-12-31T23:05:41Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 2
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
        ReplicaSet:
          rancher-logging-655578478b:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-logging
                meta.helm.sh/release-namespace: cattle-logging-system
                objectset.rio.cattle.io/id: default-local-logging-logging-operator-cattle-fleet-local-7d49b
              creationTimestamp: '2023-07-31T07:46:26Z'
              generation: 2
              labels:
                app.kubernetes.io/instance: rancher-logging
                app.kubernetes.io/name: rancher-logging
                pod-template-hash: 655578478b
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/name: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"4c5c694a-727f-4b11-bf8e-9ca78217d5c8"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/name: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-logging"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-31T07:46:26Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-31T09:54:43Z'
              name: rancher-logging-655578478b
              namespace: cattle-logging-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-logging
                  uid: 4c5c694a-727f-4b11-bf8e-9ca78217d5c8
              resourceVersion: '3045120'
              uid: 4a189450-9b85-41bd-a9ea-bd907c7f9b05
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-logging
                  app.kubernetes.io/name: rancher-logging
                  pod-template-hash: 655578478b
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/instance: rancher-logging
                    app.kubernetes.io/name: rancher-logging
                    pod-template-hash: 655578478b
                spec:
                  containers:
                    - args:
                        - '-enable-leader-election=true'
                      image: rancher/mirrored-banzaicloud-logging-operator:3.17.7
                      imagePullPolicy: IfNotPresent
                      name: rancher-logging
                      ports:
                        - containerPort: 8080
                          name: http
                          protocol: TCP
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-logging
                  serviceAccountName: rancher-logging
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              observedGeneration: 2
              replicas: 0
          rancher-logging-6b5b478f78:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '2'
                meta.helm.sh/release-name: rancher-logging
                meta.helm.sh/release-namespace: cattle-logging-system
                objectset.rio.cattle.io/id: default-local-logging-logging-operator-cattle-fleet-local-7d49b
              creationTimestamp: '2023-07-31T09:54:33Z'
              generation: 1
              labels:
                app.kubernetes.io/instance: rancher-logging
                app.kubernetes.io/name: rancher-logging
                pod-template-hash: 6b5b478f78
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/name: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"4c5c694a-727f-4b11-bf8e-9ca78217d5c8"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/name: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-logging"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-31T09:54:33Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-31T23:05:41Z'
              name: rancher-logging-6b5b478f78
              namespace: cattle-logging-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-logging
                  uid: 4c5c694a-727f-4b11-bf8e-9ca78217d5c8
              resourceVersion: '161449371'
              uid: 2800cec4-a76c-4e22-957d-ef8012f991d2
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-logging
                  app.kubernetes.io/name: rancher-logging
                  pod-template-hash: 6b5b478f78
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/instance: rancher-logging
                    app.kubernetes.io/name: rancher-logging
                    pod-template-hash: 6b5b478f78
                spec:
                  containers:
                    - args:
                        - '-enable-leader-election=true'
                      image: rancher/mirrored-banzaicloud-logging-operator:3.17.10
                      imagePullPolicy: IfNotPresent
                      name: rancher-logging
                      ports:
                        - containerPort: 8080
                          name: http
                          protocol: TCP
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-logging
                  serviceAccountName: rancher-logging
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
        StatefulSet:
          rancher-logging-root-fluentd:
            apiVersion: apps/v1
            kind: StatefulSet
            metadata:
              annotations:
                banzaicloud.com/last-applied: >-
                  UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAb3JpZ2luYWzMVU1z2zYQ/S97BkRSoZ2IMzm4+WpnEldjJ710PB0IWEqoQSyCDyWKh/+9A5HWh6ukrk+5gcC+xe7bx4c76DAKJaKA5g6MWKAJeSWcm9ymBXqLEcNEUyGpc2TRRmigNQltVMBOxHXCiiUqvthAA15YuULPDS2X2i65J4onUVZ0eJC4ZzDunMrA9/fnqOCEzKFSxGhwFxk2IWIHDOiLRX+FLXq0EgM0f+b+9B/ogyYLDYyIyULYb0JLQ0nlmtbVAqOogIEkGz0Zgx6a6BMyuNVWQQPvByT8sFxgkHSOnp23anYmpxzPS8Xr6bMFfzErkVczVLPqrJphW0N/0zMIDmUegyP1YctnhzbOyWiZWf3dK/SorlCoDTAIaFBG8hnQiShX73+aMeZW0K+1xMv/HidfoVAGQwAGETtnRMRtTz+lQg+mlOUhtEU/assv8+KgBk7AoBi/C0PLglK+hedruacoInKxRGBQlQ/3g/42HNQvzp6fl3DDAO16e9NY0y+f3r59c/XX/OLjr8BgLUzKu8UitW2uqb9hoLucftdu0WnvyWcS9pq/n0OzriZVPTnnwjhtkZ/BiJ8nY3Yi/K29pDj3GDLhDIxeo8UQ5p4W26lpq6MW5jUasblGSVYFaJ6VDBx6TWq3VZ0xiNJdk7zFOGjeR2im9bQu+70P7MnM5wPRO97ne8gDANfWbal2niJJMtDAx1fzLSceAyW/dYQ7MLrTMQxy68jnDl+809mIPH5OGB6c1flsq26ZvI6bV2Qjfs319wzWZFKHHyjZsdAuL+cirvJY7mWAURZ745BkW72Enn0nWjjHx5gd5mDvu7iA0mPcYyhFlyIft/8Fu9fMo/yXD9Fby9rLnvOhf660f3nY7VbYp86OeuP8Cy5WRLc8efNyFaNriqKaPp+Uk3JSNdO6rutCOF0MiIlHQ0LBjzT+t+46rTaB7HhNJxwfcM26nNST8jEKPxrUCEcPxzp69PSfOs+BxweiuclytqTw+uApOLYvCvmh0zZ9hZOyhTa885QcNFVZMfDJXoRPIT94VVnubfxCylzVI9w8mzgZ9CJqsgMR2LYosztf0rVcoUomG9stbnaP91gpA3IZmRuBN5+TMAe+NjZxc890OLTCHaWjwJu7cfWYivvM+sn/5En5+JDjKO3R2J+SUzg3JMTOxc1r7QfR/b+/tWeQnBIRr6MXEZebnCQPOYqYhtd1LbQRC4NX6IyWIkBTZqXvPvr+nwAAAP//UEsHCEzKM12jAwAAOwoAAFBLAQIUABQACAAIAAAAAABMyjNdowMAADsKAAAIAAAAAAAAAAAAAAAAAAAAAABvcmlnaW5hbFBLBQYAAAAAAQABADYAAADZAwAAAAA=
              creationTimestamp: '2023-07-31T07:46:38Z'
              generation: 8
              labels:
                app.kubernetes.io/component: fluentd
                app.kubernetes.io/managed-by: rancher-logging-root
                app.kubernetes.io/name: fluentd
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:banzaicloud.com/last-applied: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/component: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"96fd95c2-e60d-423b-890e-19ed91519ef4"}: {}
                    f:spec:
                      f:podManagementPolicy: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:serviceName: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/component: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                        f:spec:
                          f:containers:
                            k:{"name":"config-reloader"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/fluentd/app-config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/fluentd/etc"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"fluentd"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"BUFFER_PATH"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:tcpSocket:
                                  .: {}
                                  f:port: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":24240,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:memory: {}
                              f:securityContext: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/buffers"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/fluentd/app-config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/fluentd/etc/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/fluentd/secret"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"app-config"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"config"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"output-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"rancher-logging-root-fluentd-buffer"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                      f:updateStrategy:
                        f:rollingUpdate:
                          .: {}
                          f:partition: {}
                        f:type: {}
                  manager: manager
                  operation: Update
                  time: '2023-11-21T11:44:47Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:collisionCount: {}
                      f:currentReplicas: {}
                      f:currentRevision: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updateRevision: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:42Z'
              name: rancher-logging-root-fluentd
              namespace: cattle-logging-system
              ownerReferences:
                - apiVersion: logging.banzaicloud.io/v1beta1
                  controller: true
                  kind: Logging
                  name: rancher-logging-root
                  uid: 96fd95c2-e60d-423b-890e-19ed91519ef4
              resourceVersion: '135398576'
              uid: 3e3cca7e-8f20-4dc4-84ac-a431e2cf4602
            spec:
              podManagementPolicy: OrderedReady
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/component: fluentd
                  app.kubernetes.io/managed-by: rancher-logging-root
                  app.kubernetes.io/name: fluentd
              serviceName: rancher-logging-root-fluentd-headless
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/component: fluentd
                    app.kubernetes.io/managed-by: rancher-logging-root
                    app.kubernetes.io/name: fluentd
                spec:
                  containers:
                    - args:
                        - fluentd
                        - '-o'
                        - /fluentd/log/out
                        - '--log-rotate-age'
                        - '10'
                        - '--log-rotate-size'
                        - '10485760'
                      env:
                        - name: BUFFER_PATH
                          value: /buffers
                      image: rancher/mirrored-banzaicloud-fluentd:v1.14.6-alpine-5
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        initialDelaySeconds: 30
                        periodSeconds: 15
                        successThreshold: 1
                        tcpSocket:
                          port: 24240
                        timeoutSeconds: 1
                      name: fluentd
                      ports:
                        - containerPort: 24240
                          name: fluent-input
                          protocol: TCP
                      resources:
                        limits:
                          memory: 8Gi
                        requests:
                          memory: 4Gi
                      securityContext: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /fluentd/etc/
                          name: config
                        - mountPath: /fluentd/app-config
                          name: app-config
                        - mountPath: /fluentd/secret
                          name: output-secret
                        - mountPath: /buffers
                          name: rancher-logging-root-fluentd-buffer
                    - args:
                        - '--volume-dir=/fluentd/etc'
                        - '--volume-dir=/fluentd/app-config'
                        - '--webhook-url=http://127.0.0.1:24444/api/config.reload'
                      image: rancher/mirrored-jimmidyson-configmap-reload:v0.4.0
                      imagePullPolicy: IfNotPresent
                      name: config-reloader
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /fluentd/app-config
                          name: app-config
                        - mountPath: /fluentd/etc
                          name: config
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 101
                    runAsUser: 100
                  serviceAccount: rancher-logging-root-fluentd
                  serviceAccountName: rancher-logging-root-fluentd
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: config
                      secret:
                        defaultMode: 420
                        secretName: rancher-logging-root-fluentd
                    - name: output-secret
                      secret:
                        defaultMode: 420
                        secretName: rancher-logging-root-fluentd-output
                    - name: app-config
                      secret:
                        defaultMode: 420
                        secretName: rancher-logging-root-fluentd-app
                    - emptyDir: {}
                      name: rancher-logging-root-fluentd-buffer
              updateStrategy:
                rollingUpdate:
                  partition: 0
                type: RollingUpdate
            status:
              availableReplicas: 1
              collisionCount: 0
              currentReplicas: 1
              currentRevision: rancher-logging-root-fluentd-5b684cb8fd
              observedGeneration: 8
              readyReplicas: 1
              replicas: 1
              updateRevision: rancher-logging-root-fluentd-5b684cb8fd
              updatedReplicas: 1
    cattle-monitoring-system:
      apps/v1:
        DaemonSet:
          pushprox-k3s-server-client:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              annotations:
                deprecated.daemonset.template.generation: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app.kubernetes.io/managed-by: Helm
                component: k3s-server
                k8s-app: pushprox-k3s-server-client
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
                provider: kubernetes
                pushprox-exporter: client
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deprecated.daemonset.template.generation: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:component: {}
                        f:k8s-app: {}
                        f:objectset.rio.cattle.io/hash: {}
                        f:provider: {}
                        f:pushprox-exporter: {}
                        f:release: {}
                    f:spec:
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:component: {}
                            f:k8s-app: {}
                            f:provider: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"pushprox-client"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"HOST_IP"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"PROXY_URL"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:hostNetwork: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                      f:updateStrategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:currentNumberScheduled: {}
                      f:desiredNumberScheduled: {}
                      f:numberAvailable: {}
                      f:numberReady: {}
                      f:observedGeneration: {}
                      f:updatedNumberScheduled: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:20:35Z'
              name: pushprox-k3s-server-client
              namespace: cattle-monitoring-system
              resourceVersion: '135406558'
              uid: 55615a33-f5d7-4f30-b0a4-b4e2a1ee2b0f
            spec:
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  component: k3s-server
                  k8s-app: pushprox-k3s-server-client
                  provider: kubernetes
                  release: rancher-monitoring
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    component: k3s-server
                    k8s-app: pushprox-k3s-server-client
                    provider: kubernetes
                    release: rancher-monitoring
                spec:
                  containers:
                    - args:
                        - '--fqdn=$(HOST_IP)'
                        - '--proxy-url=$(PROXY_URL)'
                        - '--allow-port=10250'
                        - '--use-localhost'
                        - '--insecure-skip-verify'
                        - >-
                          --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
                      command:
                        - pushprox-client
                      env:
                        - name: HOST_IP
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: status.hostIP
                        - name: PROXY_URL
                          value: >-
                            http://pushprox-k3s-server-proxy.cattle-monitoring-system.svc:8080
                      image: rancher/pushprox-client:v0.1.0-rancher2-client
                      imagePullPolicy: IfNotPresent
                      name: pushprox-client
                      resources: {}
                      securityContext:
                        runAsNonRoot: true
                        runAsUser: 1000
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirstWithHostNet
                  hostNetwork: true
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: pushprox-k3s-server-client
                  serviceAccountName: pushprox-k3s-server-client
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                    - effect: NoExecute
                      operator: Exists
                    - effect: NoSchedule
                      operator: Exists
              updateStrategy:
                rollingUpdate:
                  maxSurge: 0
                  maxUnavailable: 1
                type: RollingUpdate
            status:
              currentNumberScheduled: 3
              desiredNumberScheduled: 3
              numberAvailable: 3
              numberMisscheduled: 0
              numberReady: 3
              observedGeneration: 1
              updatedNumberScheduled: 3
          rancher-monitoring-prometheus-node-exporter:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              annotations:
                deprecated.daemonset.template.generation: '1'
                field.cattle.io/publicEndpoints: >-
                  [{"nodeName":":rancher2-tst","addresses":["10.100.128.132"],"port":9796,"protocol":"TCP","podName":"cattle-monitoring-system:rancher-monitoring-prometheus-node-exporter-mv85j","allNodes":false},{"nodeName":":rancher1-tst","addresses":["10.100.128.131"],"port":9796,"protocol":"TCP","podName":"cattle-monitoring-system:rancher-monitoring-prometheus-node-exporter-r8pr9","allNodes":false},{"nodeName":":rancher3-tst","addresses":["10.100.128.133"],"port":9796,"protocol":"TCP","podName":"cattle-monitoring-system:rancher-monitoring-prometheus-node-exporter-nwrkr","allNodes":false}]
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app.kubernetes.io/component: metrics
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: prometheus-node-exporter
                app.kubernetes.io/part-of: prometheus-node-exporter
                app.kubernetes.io/version: 1.3.1
                helm.sh/chart: prometheus-node-exporter-4.2.0
                jobLabel: node-exporter
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deprecated.daemonset.template.generation: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/component: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:helm.sh/chart: {}
                        f:jobLabel: {}
                        f:objectset.rio.cattle.io/hash: {}
                        f:release: {}
                    f:spec:
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/component: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:helm.sh/chart: {}
                            f:jobLabel: {}
                            f:release: {}
                        f:spec:
                          f:automountServiceAccountToken: {}
                          f:containers:
                            k:{"name":"node-exporter"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"HOST_IP"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":9796,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:hostPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/host/proc"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/host/root"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:mountPropagation: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/host/sys"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:hostNetwork: {}
                          f:hostPID: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"proc"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"root"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"sys"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                      f:updateStrategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:field.cattle.io/publicEndpoints: {}
                  manager: rancher
                  operation: Update
                  time: '2023-10-05T16:57:52Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:currentNumberScheduled: {}
                      f:desiredNumberScheduled: {}
                      f:numberAvailable: {}
                      f:numberReady: {}
                      f:observedGeneration: {}
                      f:updatedNumberScheduled: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-31T23:05:57Z'
              name: rancher-monitoring-prometheus-node-exporter
              namespace: cattle-monitoring-system
              resourceVersion: '161449606'
              uid: 352c97b8-030a-4b85-b51d-c67980192b4d
            spec:
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-monitoring
                  app.kubernetes.io/name: prometheus-node-exporter
              template:
                metadata:
                  annotations:
                    cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/component: metrics
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/name: prometheus-node-exporter
                    app.kubernetes.io/part-of: prometheus-node-exporter
                    app.kubernetes.io/version: 1.3.1
                    helm.sh/chart: prometheus-node-exporter-4.2.0
                    jobLabel: node-exporter
                    release: rancher-monitoring
                spec:
                  automountServiceAccountToken: false
                  containers:
                    - args:
                        - '--path.procfs=/host/proc'
                        - '--path.sysfs=/host/sys'
                        - '--path.rootfs=/host/root'
                        - '--web.listen-address=[$(HOST_IP)]:9796'
                        - >-
                          --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
                        - >-
                          --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
                      env:
                        - name: HOST_IP
                          value: 0.0.0.0
                      image: rancher/mirrored-prometheus-node-exporter:v1.3.1
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /
                          port: 9796
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: node-exporter
                      ports:
                        - containerPort: 9796
                          hostPort: 9796
                          name: http-metrics
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /
                          port: 9796
                          scheme: HTTP
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          cpu: 200m
                          memory: 50Mi
                        requests:
                          cpu: 100m
                          memory: 30Mi
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /host/proc
                          name: proc
                          readOnly: true
                        - mountPath: /host/sys
                          name: sys
                          readOnly: true
                        - mountPath: /host/root
                          mountPropagation: HostToContainer
                          name: root
                          readOnly: true
                  dnsPolicy: ClusterFirst
                  hostNetwork: true
                  hostPID: true
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 65534
                    runAsGroup: 65534
                    runAsNonRoot: true
                    runAsUser: 65534
                  serviceAccount: rancher-monitoring-prometheus-node-exporter
                  serviceAccountName: rancher-monitoring-prometheus-node-exporter
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                    - effect: NoSchedule
                      operator: Exists
                    - effect: NoExecute
                      operator: Exists
                  volumes:
                    - hostPath:
                        path: /proc
                        type: ''
                      name: proc
                    - hostPath:
                        path: /sys
                        type: ''
                      name: sys
                    - hostPath:
                        path: /
                        type: ''
                      name: root
              updateStrategy:
                rollingUpdate:
                  maxSurge: 0
                  maxUnavailable: 1
                type: RollingUpdate
            status:
              currentNumberScheduled: 3
              desiredNumberScheduled: 3
              numberAvailable: 3
              numberMisscheduled: 0
              numberReady: 3
              observedGeneration: 1
              updatedNumberScheduled: 3
        Deployment:
          pushprox-k3s-server-proxy:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app.kubernetes.io/managed-by: Helm
                component: k3s-server
                k8s-app: pushprox-k3s-server-proxy
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
                provider: kubernetes
                pushprox-exporter: proxy
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:component: {}
                        f:k8s-app: {}
                        f:objectset.rio.cattle.io/hash: {}
                        f:provider: {}
                        f:pushprox-exporter: {}
                        f:release: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:component: {}
                            f:k8s-app: {}
                            f:provider: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"pushprox-proxy"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:32Z'
              name: pushprox-k3s-server-proxy
              namespace: cattle-monitoring-system
              resourceVersion: '135398377'
              uid: adfa507a-3dd8-45d6-897f-fb82e3527be0
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  component: k3s-server
                  k8s-app: pushprox-k3s-server-proxy
                  provider: kubernetes
                  release: rancher-monitoring
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    component: k3s-server
                    k8s-app: pushprox-k3s-server-proxy
                    provider: kubernetes
                    release: rancher-monitoring
                spec:
                  containers:
                    - command:
                        - pushprox-proxy
                      image: rancher/pushprox-proxy:v0.1.0-rancher2-proxy
                      imagePullPolicy: IfNotPresent
                      name: pushprox-proxy
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: pushprox-k3s-server-proxy
                  serviceAccountName: pushprox-k3s-server-proxy
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-10-05T16:57:50Z'
                  lastUpdateTime: '2023-10-05T16:57:53Z'
                  message: >-
                    ReplicaSet "pushprox-k3s-server-proxy-695c9cdf7d" has
                    successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:11:32Z'
                  lastUpdateTime: '2023-12-07T07:11:32Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          rancher-monitoring-kube-state-metrics:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-31T09:13:07Z'
              generation: 1
              labels:
                app.kubernetes.io/component: metrics
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: kube-state-metrics
                app.kubernetes.io/part-of: kube-state-metrics
                app.kubernetes.io/version: 2.6.0
                helm.sh/chart: kube-state-metrics-4.18.0
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/component: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:helm.sh/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                        f:release: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/component: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:helm.sh/chart: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"kube-state-metrics"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-31T09:13:07Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:37Z'
              name: rancher-monitoring-kube-state-metrics
              namespace: cattle-monitoring-system
              resourceVersion: '135398466'
              uid: 875c7e0b-3e1d-40a6-9093-304a609ece5f
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-monitoring
                  app.kubernetes.io/name: kube-state-metrics
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/component: metrics
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/name: kube-state-metrics
                    app.kubernetes.io/part-of: kube-state-metrics
                    app.kubernetes.io/version: 2.6.0
                    helm.sh/chart: kube-state-metrics-4.18.0
                    release: rancher-monitoring
                spec:
                  containers:
                    - args:
                        - '--port=8080'
                        - >-
                          --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
                      image: >-
                        rancher/mirrored-kube-state-metrics-kube-state-metrics:v2.6.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 8080
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      name: kube-state-metrics
                      ports:
                        - containerPort: 8080
                          name: http
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /
                          port: 8080
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      resources:
                        limits:
                          cpu: 100m
                          memory: 200Mi
                        requests:
                          cpu: 100m
                          memory: 130Mi
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 65534
                    runAsGroup: 65534
                    runAsNonRoot: true
                    runAsUser: 65534
                  serviceAccount: rancher-monitoring-kube-state-metrics
                  serviceAccountName: rancher-monitoring-kube-state-metrics
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-10-31T09:13:07Z'
                  lastUpdateTime: '2023-10-31T09:13:07Z'
                  message: >-
                    ReplicaSet "rancher-monitoring-kube-state-metrics-5f8bb57c88"
                    has successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:11:37Z'
                  lastUpdateTime: '2023-12-07T07:11:37Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          rancher-monitoring-operator:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app: rancher-monitoring-operator
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/part-of: rancher-monitoring
                app.kubernetes.io/version: 102.0.1_up40.1.2
                chart: rancher-monitoring-102.0.1_up40.1.2
                heritage: Helm
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:chart: {}
                        f:heritage: {}
                        f:objectset.rio.cattle.io/hash: {}
                        f:release: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:chart: {}
                            f:heritage: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-monitoring"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/cert"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:32Z'
              name: rancher-monitoring-operator
              namespace: cattle-monitoring-system
              resourceVersion: '135398371'
              uid: 1316799c-c829-4a0c-8da6-e22ffa7d2350
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: rancher-monitoring-operator
                  release: rancher-monitoring
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-monitoring-operator
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/part-of: rancher-monitoring
                    app.kubernetes.io/version: 102.0.1_up40.1.2
                    chart: rancher-monitoring-102.0.1_up40.1.2
                    heritage: Helm
                    release: rancher-monitoring
                spec:
                  containers:
                    - args:
                        - '--kubelet-service=kube-system/rancher-monitoring-kubelet'
                        - '--localhost=127.0.0.1'
                        - >-
                          --prometheus-config-reloader=rancher/mirrored-prometheus-operator-prometheus-config-reloader:v0.59.1
                        - '--config-reloader-cpu-request=200m'
                        - '--config-reloader-cpu-limit=200m'
                        - '--config-reloader-memory-request=50Mi'
                        - '--config-reloader-memory-limit=50Mi'
                        - >-
                          --thanos-default-base-image=rancher/mirrored-thanos-thanos:v0.28.0
                        - '--web.enable-tls=true'
                        - '--web.cert-file=/cert/cert'
                        - '--web.key-file=/cert/key'
                        - '--web.listen-address=:8443'
                        - '--web.tls-min-version=VersionTLS13'
                      image: >-
                        rancher/mirrored-prometheus-operator-prometheus-operator:v0.59.1
                      imagePullPolicy: IfNotPresent
                      name: rancher-monitoring
                      ports:
                        - containerPort: 8443
                          name: https
                          protocol: TCP
                      resources:
                        limits:
                          cpu: 200m
                          memory: 500Mi
                        requests:
                          cpu: 100m
                          memory: 100Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /cert
                          name: tls-secret
                          readOnly: true
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 65534
                    runAsGroup: 65534
                    runAsNonRoot: true
                    runAsUser: 65534
                  serviceAccount: rancher-monitoring-operator
                  serviceAccountName: rancher-monitoring-operator
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls-secret
                      secret:
                        defaultMode: 420
                        secretName: rancher-monitoring-admission
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-10-05T16:57:50Z'
                  lastUpdateTime: '2023-10-05T16:57:52Z'
                  message: >-
                    ReplicaSet "rancher-monitoring-operator-7f6bbfcbb6" has
                    successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:11:32Z'
                  lastUpdateTime: '2023-12-07T07:11:32Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          rancher-monitoring-prometheus-adapter:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app.kubernetes.io/component: metrics
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: prometheus-adapter
                app.kubernetes.io/part-of: prometheus-adapter
                app.kubernetes.io/version: v0.10.0
                helm.sh/chart: prometheus-adapter-3.4.0
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/component: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:helm.sh/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:checksum/config: {}
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/component: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:helm.sh/chart: {}
                          f:name: {}
                        f:spec:
                          f:affinity: {}
                          f:containers:
                            k:{"name":"prometheus-adapter"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":6443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/adapter/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: fleetagent
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:41Z'
              name: rancher-monitoring-prometheus-adapter
              namespace: cattle-monitoring-system
              resourceVersion: '135401984'
              uid: e5f50c8c-2a14-4677-a7c8-9900f42e4456
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-monitoring
                  app.kubernetes.io/name: prometheus-adapter
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  annotations:
                    checksum/config: >-
                      8b3a7e2709a7c24b6233127e58df21fab763b6fed38cfc65b9b9da6e0dbc4f2d
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/component: metrics
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/name: prometheus-adapter
                    app.kubernetes.io/part-of: prometheus-adapter
                    app.kubernetes.io/version: v0.10.0
                    helm.sh/chart: prometheus-adapter-3.4.0
                  name: prometheus-adapter
                spec:
                  affinity: {}
                  containers:
                    - args:
                        - /adapter
                        - '--secure-port=6443'
                        - '--cert-dir=/tmp/cert'
                        - '--logtostderr=true'
                        - >-
                          --prometheus-url=http://rancher-monitoring-prometheus.cattle-monitoring-system.svc:9090
                        - '--metrics-relist-interval=1m'
                        - '--v=4'
                        - '--config=/etc/adapter/config.yaml'
                      image: >-
                        rancher/mirrored-prometheus-adapter-prometheus-adapter:v0.10.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      name: prometheus-adapter
                      ports:
                        - containerPort: 6443
                          name: https
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      resources: {}
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - all
                        readOnlyRootFilesystem: true
                        runAsNonRoot: true
                        runAsUser: 10001
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/adapter/
                          name: config
                          readOnly: true
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 10001
                  serviceAccount: rancher-monitoring-prometheus-adapter
                  serviceAccountName: rancher-monitoring-prometheus-adapter
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: rancher-monitoring-prometheus-adapter
                      name: config
                    - emptyDir: {}
                      name: tmp
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-10-05T16:57:50Z'
                  lastUpdateTime: '2023-10-05T16:58:31Z'
                  message: >-
                    ReplicaSet "rancher-monitoring-prometheus-adapter-6c4585d859"
                    has successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:15:41Z'
                  lastUpdateTime: '2023-12-07T07:15:41Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
        ReplicaSet:
          pushprox-k3s-server-proxy-695c9cdf7d:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                component: k3s-server
                k8s-app: pushprox-k3s-server-proxy
                pod-template-hash: 695c9cdf7d
                provider: kubernetes
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:component: {}
                        f:k8s-app: {}
                        f:pod-template-hash: {}
                        f:provider: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"adfa507a-3dd8-45d6-897f-fb82e3527be0"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:component: {}
                            f:k8s-app: {}
                            f:pod-template-hash: {}
                            f:provider: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"pushprox-proxy"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:32Z'
              name: pushprox-k3s-server-proxy-695c9cdf7d
              namespace: cattle-monitoring-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: pushprox-k3s-server-proxy
                  uid: adfa507a-3dd8-45d6-897f-fb82e3527be0
              resourceVersion: '135398376'
              uid: f7d01d9e-90fb-4a01-9ce6-b77cc22f5f5e
            spec:
              replicas: 1
              selector:
                matchLabels:
                  component: k3s-server
                  k8s-app: pushprox-k3s-server-proxy
                  pod-template-hash: 695c9cdf7d
                  provider: kubernetes
                  release: rancher-monitoring
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    component: k3s-server
                    k8s-app: pushprox-k3s-server-proxy
                    pod-template-hash: 695c9cdf7d
                    provider: kubernetes
                    release: rancher-monitoring
                spec:
                  containers:
                    - command:
                        - pushprox-proxy
                      image: rancher/pushprox-proxy:v0.1.0-rancher2-proxy
                      imagePullPolicy: IfNotPresent
                      name: pushprox-proxy
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: pushprox-k3s-server-proxy
                  serviceAccountName: pushprox-k3s-server-proxy
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          rancher-monitoring-kube-state-metrics-5f8bb57c88:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app.kubernetes.io/component: metrics
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: kube-state-metrics
                app.kubernetes.io/part-of: kube-state-metrics
                app.kubernetes.io/version: 2.6.0
                helm.sh/chart: kube-state-metrics-4.18.0
                pod-template-hash: 5f8bb57c88
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/component: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:helm.sh/chart: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"875c7e0b-3e1d-40a6-9093-304a609ece5f"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/component: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:helm.sh/chart: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"kube-state-metrics"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-31T09:13:07Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:37Z'
              name: rancher-monitoring-kube-state-metrics-5f8bb57c88
              namespace: cattle-monitoring-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-monitoring-kube-state-metrics
                  uid: 875c7e0b-3e1d-40a6-9093-304a609ece5f
              resourceVersion: '135398465'
              uid: c3ca1b88-d1ac-4e2f-b881-5cb87e4a32e4
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-monitoring
                  app.kubernetes.io/name: kube-state-metrics
                  pod-template-hash: 5f8bb57c88
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/component: metrics
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/name: kube-state-metrics
                    app.kubernetes.io/part-of: kube-state-metrics
                    app.kubernetes.io/version: 2.6.0
                    helm.sh/chart: kube-state-metrics-4.18.0
                    pod-template-hash: 5f8bb57c88
                    release: rancher-monitoring
                spec:
                  containers:
                    - args:
                        - '--port=8080'
                        - >-
                          --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
                      image: >-
                        rancher/mirrored-kube-state-metrics-kube-state-metrics:v2.6.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 8080
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      name: kube-state-metrics
                      ports:
                        - containerPort: 8080
                          name: http
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /
                          port: 8080
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      resources:
                        limits:
                          cpu: 100m
                          memory: 200Mi
                        requests:
                          cpu: 100m
                          memory: 130Mi
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 65534
                    runAsGroup: 65534
                    runAsNonRoot: true
                    runAsUser: 65534
                  serviceAccount: rancher-monitoring-kube-state-metrics
                  serviceAccountName: rancher-monitoring-kube-state-metrics
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          rancher-monitoring-operator-7f6bbfcbb6:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app: rancher-monitoring-operator
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/part-of: rancher-monitoring
                app.kubernetes.io/version: 102.0.1_up40.1.2
                chart: rancher-monitoring-102.0.1_up40.1.2
                heritage: Helm
                pod-template-hash: 7f6bbfcbb6
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:chart: {}
                        f:heritage: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"1316799c-c829-4a0c-8da6-e22ffa7d2350"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:chart: {}
                            f:heritage: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-monitoring"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/cert"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:32Z'
              name: rancher-monitoring-operator-7f6bbfcbb6
              namespace: cattle-monitoring-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-monitoring-operator
                  uid: 1316799c-c829-4a0c-8da6-e22ffa7d2350
              resourceVersion: '135398370'
              uid: 1a9e8577-eaef-453b-8238-d1516425cf23
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: rancher-monitoring-operator
                  pod-template-hash: 7f6bbfcbb6
                  release: rancher-monitoring
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-monitoring-operator
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/part-of: rancher-monitoring
                    app.kubernetes.io/version: 102.0.1_up40.1.2
                    chart: rancher-monitoring-102.0.1_up40.1.2
                    heritage: Helm
                    pod-template-hash: 7f6bbfcbb6
                    release: rancher-monitoring
                spec:
                  containers:
                    - args:
                        - '--kubelet-service=kube-system/rancher-monitoring-kubelet'
                        - '--localhost=127.0.0.1'
                        - >-
                          --prometheus-config-reloader=rancher/mirrored-prometheus-operator-prometheus-config-reloader:v0.59.1
                        - '--config-reloader-cpu-request=200m'
                        - '--config-reloader-cpu-limit=200m'
                        - '--config-reloader-memory-request=50Mi'
                        - '--config-reloader-memory-limit=50Mi'
                        - >-
                          --thanos-default-base-image=rancher/mirrored-thanos-thanos:v0.28.0
                        - '--web.enable-tls=true'
                        - '--web.cert-file=/cert/cert'
                        - '--web.key-file=/cert/key'
                        - '--web.listen-address=:8443'
                        - '--web.tls-min-version=VersionTLS13'
                      image: >-
                        rancher/mirrored-prometheus-operator-prometheus-operator:v0.59.1
                      imagePullPolicy: IfNotPresent
                      name: rancher-monitoring
                      ports:
                        - containerPort: 8443
                          name: https
                          protocol: TCP
                      resources:
                        limits:
                          cpu: 200m
                          memory: 500Mi
                        requests:
                          cpu: 100m
                          memory: 100Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /cert
                          name: tls-secret
                          readOnly: true
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 65534
                    runAsGroup: 65534
                    runAsNonRoot: true
                    runAsUser: 65534
                  serviceAccount: rancher-monitoring-operator
                  serviceAccountName: rancher-monitoring-operator
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls-secret
                      secret:
                        defaultMode: 420
                        secretName: rancher-monitoring-admission
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          rancher-monitoring-prometheus-adapter-6c4585d859:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
              creationTimestamp: '2023-10-05T16:57:50Z'
              generation: 1
              labels:
                app.kubernetes.io/component: metrics
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: prometheus-adapter
                app.kubernetes.io/part-of: prometheus-adapter
                app.kubernetes.io/version: v0.10.0
                helm.sh/chart: prometheus-adapter-3.4.0
                pod-template-hash: 6c4585d859
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/component: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/name: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:helm.sh/chart: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"e5f50c8c-2a14-4677-a7c8-9900f42e4456"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:checksum/config: {}
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/component: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                            f:app.kubernetes.io/part-of: {}
                            f:app.kubernetes.io/version: {}
                            f:helm.sh/chart: {}
                            f:pod-template-hash: {}
                          f:name: {}
                        f:spec:
                          f:affinity: {}
                          f:containers:
                            k:{"name":"prometheus-adapter"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":6443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/adapter/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-05T16:57:50Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:41Z'
              name: rancher-monitoring-prometheus-adapter-6c4585d859
              namespace: cattle-monitoring-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-monitoring-prometheus-adapter
                  uid: e5f50c8c-2a14-4677-a7c8-9900f42e4456
              resourceVersion: '135401983'
              uid: cb42cc5f-cab8-4452-8b1f-6f22e017a0e7
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-monitoring
                  app.kubernetes.io/name: prometheus-adapter
                  pod-template-hash: 6c4585d859
              template:
                metadata:
                  annotations:
                    checksum/config: >-
                      8b3a7e2709a7c24b6233127e58df21fab763b6fed38cfc65b9b9da6e0dbc4f2d
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/component: metrics
                    app.kubernetes.io/instance: rancher-monitoring
                    app.kubernetes.io/managed-by: Helm
                    app.kubernetes.io/name: prometheus-adapter
                    app.kubernetes.io/part-of: prometheus-adapter
                    app.kubernetes.io/version: v0.10.0
                    helm.sh/chart: prometheus-adapter-3.4.0
                    pod-template-hash: 6c4585d859
                  name: prometheus-adapter
                spec:
                  affinity: {}
                  containers:
                    - args:
                        - /adapter
                        - '--secure-port=6443'
                        - '--cert-dir=/tmp/cert'
                        - '--logtostderr=true'
                        - >-
                          --prometheus-url=http://rancher-monitoring-prometheus.cattle-monitoring-system.svc:9090
                        - '--metrics-relist-interval=1m'
                        - '--v=4'
                        - '--config=/etc/adapter/config.yaml'
                      image: >-
                        rancher/mirrored-prometheus-adapter-prometheus-adapter:v0.10.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      name: prometheus-adapter
                      ports:
                        - containerPort: 6443
                          name: https
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                      resources: {}
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - all
                        readOnlyRootFilesystem: true
                        runAsNonRoot: true
                        runAsUser: 10001
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/adapter/
                          name: config
                          readOnly: true
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 10001
                  serviceAccount: rancher-monitoring-prometheus-adapter
                  serviceAccountName: rancher-monitoring-prometheus-adapter
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: rancher-monitoring-prometheus-adapter
                      name: config
                    - emptyDir: {}
                      name: tmp
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
        StatefulSet:
          prometheus-rancher-monitoring-prometheus:
            apiVersion: apps/v1
            kind: StatefulSet
            metadata:
              annotations:
                meta.helm.sh/release-name: rancher-monitoring
                meta.helm.sh/release-namespace: cattle-monitoring-system
                objectset.rio.cattle.io/id: default-local-monitoring-monitoring-operator-cattle-fleet-e4b4e
                prometheus-operator-input-hash: '536229425285734333'
              creationTimestamp: '2023-10-05T16:58:02Z'
              generation: 1
              labels:
                app: rancher-monitoring-prometheus
                app.kubernetes.io/instance: rancher-monitoring
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/part-of: rancher-monitoring
                app.kubernetes.io/version: 102.0.1_up40.1.2
                chart: rancher-monitoring-102.0.1_up40.1.2
                heritage: Helm
                objectset.rio.cattle.io/hash: 5cb5c34c8a56ecf146fd114b4b437892283c15e9
                operator.prometheus.io/name: rancher-monitoring-prometheus
                operator.prometheus.io/shard: '0'
                release: rancher-monitoring
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:prometheus-operator-input-hash: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:app.kubernetes.io/part-of: {}
                        f:app.kubernetes.io/version: {}
                        f:chart: {}
                        f:heritage: {}
                        f:objectset.rio.cattle.io/hash: {}
                        f:operator.prometheus.io/name: {}
                        f:operator.prometheus.io/shard: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"5c2e08ad-a3f2-45c8-a1d8-a5ddb060f00c"}: {}
                    f:spec:
                      f:podManagementPolicy: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:serviceName: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:kubectl.kubernetes.io/default-container: {}
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/managed-by: {}
                            f:app.kubernetes.io/name: {}
                            f:app.kubernetes.io/version: {}
                            f:operator.prometheus.io/name: {}
                            f:operator.prometheus.io/shard: {}
                            f:prometheus: {}
                        f:spec:
                          f:automountServiceAccountToken: {}
                          f:containers:
                            k:{"name":"config-reloader"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"POD_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"SHARD"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/prometheus/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/etc/prometheus/config_out"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"prometheus"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":9090,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                              f:startupProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/prometheus/certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/etc/prometheus/config_out"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/etc/prometheus/secrets/etcd-client-cert"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                  f:subPath: {}
                                k:{"mountPath":"/prometheus"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"prometheus-proxy"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8081,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:securityContext:
                                .: {}
                                f:runAsGroup: {}
                                f:runAsUser: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/nginx"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/var/cache/nginx"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"init-config-reloader"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"POD_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"SHARD"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8080,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/prometheus/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/etc/prometheus/config_out"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:fsGroup: {}
                            f:runAsGroup: {}
                            f:runAsNonRoot: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"config-out"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"etcd-client-cert"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"nginx-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"prometheus-nginx"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"prometheus-rancher-monitoring-prometheus-db"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"prometheus-rancher-monitoring-prometheus-rulefiles-0"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"tls-assets"}:
                              .: {}
                              f:name: {}
                              f:projected:
                                .: {}
                                f:defaultMode: {}
                                f:sources: {}
                            k:{"name":"web-config"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                      f:updateStrategy:
                        f:type: {}
                  manager: PrometheusOperator
                  operation: Update
                  time: '2023-10-05T16:58:02Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:collisionCount: {}
                      f:currentReplicas: {}
                      f:currentRevision: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updateRevision: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:32Z'
              name: prometheus-rancher-monitoring-prometheus
              namespace: cattle-monitoring-system
              ownerReferences:
                - apiVersion: monitoring.coreos.com/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Prometheus
                  name: rancher-monitoring-prometheus
                  uid: 5c2e08ad-a3f2-45c8-a1d8-a5ddb060f00c
              resourceVersion: '135401881'
              uid: 36c7dcc7-71c2-4edc-ae13-8772cba96986
            spec:
              podManagementPolicy: Parallel
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/instance: rancher-monitoring-prometheus
                  app.kubernetes.io/managed-by: prometheus-operator
                  app.kubernetes.io/name: prometheus
                  operator.prometheus.io/name: rancher-monitoring-prometheus
                  operator.prometheus.io/shard: '0'
                  prometheus: rancher-monitoring-prometheus
              serviceName: prometheus-operated
              template:
                metadata:
                  annotations:
                    kubectl.kubernetes.io/default-container: prometheus
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/instance: rancher-monitoring-prometheus
                    app.kubernetes.io/managed-by: prometheus-operator
                    app.kubernetes.io/name: prometheus
                    app.kubernetes.io/version: 2.38.0
                    operator.prometheus.io/name: rancher-monitoring-prometheus
                    operator.prometheus.io/shard: '0'
                    prometheus: rancher-monitoring-prometheus
                spec:
                  automountServiceAccountToken: true
                  containers:
                    - args:
                        - '--web.console.templates=/etc/prometheus/consoles'
                        - >-
                          --web.console.libraries=/etc/prometheus/console_libraries
                        - '--storage.tsdb.retention.time=6h'
                        - '--storage.tsdb.retention.size=50GiB'
                        - >-
                          --config.file=/etc/prometheus/config_out/prometheus.env.yaml
                        - '--storage.tsdb.path=/prometheus'
                        - '--web.enable-lifecycle'
                        - >-
                          --web.external-url=http://rancher-monitoring-prometheus.cattle-monitoring-system:9090
                        - '--web.route-prefix=/'
                        - '--no-storage.tsdb.wal-compression'
                        - >-
                          --web.config.file=/etc/prometheus/web_config/web-config.yaml
                      image: rancher/mirrored-prometheus-prometheus:v2.38.0
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 6
                        httpGet:
                          path: /-/healthy
                          port: http-web
                          scheme: HTTP
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 3
                      name: prometheus
                      ports:
                        - containerPort: 9090
                          name: http-web
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /-/ready
                          port: http-web
                          scheme: HTTP
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 3
                      resources:
                        limits:
                          cpu: '1'
                          memory: 8Gi
                        requests:
                          cpu: 750m
                          memory: 4Gi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                      startupProbe:
                        failureThreshold: 60
                        httpGet:
                          path: /-/ready
                          port: http-web
                          scheme: HTTP
                        periodSeconds: 15
                        successThreshold: 1
                        timeoutSeconds: 3
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                        - mountPath: /etc/prometheus/config_out
                          name: config-out
                          readOnly: true
                        - mountPath: /etc/prometheus/certs
                          name: tls-assets
                          readOnly: true
                        - mountPath: /prometheus
                          name: prometheus-rancher-monitoring-prometheus-db
                        - mountPath: /etc/prometheus/secrets/etcd-client-cert
                          name: etcd-client-cert
                        - mountPath: >-
                            /etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0
                          name: prometheus-rancher-monitoring-prometheus-rulefiles-0
                        - mountPath: /etc/prometheus/web_config/web-config.yaml
                          name: web-config
                          readOnly: true
                          subPath: web-config.yaml
                    - args:
                        - '--listen-address=:8080'
                        - '--reload-url=http://127.0.0.1:9090/-/reload'
                        - '--config-file=/etc/prometheus/config/prometheus.yaml.gz'
                        - >-
                          --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
                        - >-
                          --watched-dir=/etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0
                      command:
                        - /bin/prometheus-config-reloader
                      env:
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        - name: SHARD
                          value: '0'
                      image: >-
                        rancher/mirrored-prometheus-operator-prometheus-config-reloader:v0.59.1
                      imagePullPolicy: IfNotPresent
                      name: config-reloader
                      ports:
                        - containerPort: 8080
                          name: reloader-web
                          protocol: TCP
                      resources:
                        limits:
                          cpu: 200m
                          memory: 50Mi
                        requests:
                          cpu: 200m
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                        - mountPath: /etc/prometheus/config
                          name: config
                        - mountPath: /etc/prometheus/config_out
                          name: config-out
                        - mountPath: >-
                            /etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0
                          name: prometheus-rancher-monitoring-prometheus-rulefiles-0
                    - args:
                        - nginx
                        - '-g'
                        - daemon off;
                        - '-c'
                        - /nginx/nginx.conf
                      image: rancher/mirrored-library-nginx:1.24.0-alpine
                      imagePullPolicy: IfNotPresent
                      name: prometheus-proxy
                      ports:
                        - containerPort: 8081
                          name: nginx-http
                          protocol: TCP
                      resources: {}
                      securityContext:
                        runAsGroup: 101
                        runAsUser: 101
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /nginx
                          name: prometheus-nginx
                        - mountPath: /var/cache/nginx
                          name: nginx-home
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '--watch-interval=0'
                        - '--listen-address=:8080'
                        - '--config-file=/etc/prometheus/config/prometheus.yaml.gz'
                        - >-
                          --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
                        - >-
                          --watched-dir=/etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0
                      command:
                        - /bin/prometheus-config-reloader
                      env:
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        - name: SHARD
                          value: '0'
                      image: >-
                        rancher/mirrored-prometheus-operator-prometheus-config-reloader:v0.59.1
                      imagePullPolicy: IfNotPresent
                      name: init-config-reloader
                      ports:
                        - containerPort: 8080
                          name: reloader-web
                          protocol: TCP
                      resources:
                        limits:
                          cpu: 200m
                          memory: 50Mi
                        requests:
                          cpu: 200m
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                            - ALL
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                        - mountPath: /etc/prometheus/config
                          name: config
                        - mountPath: /etc/prometheus/config_out
                          name: config-out
                        - mountPath: >-
                            /etc/prometheus/rules/prometheus-rancher-monitoring-prometheus-rulefiles-0
                          name: prometheus-rancher-monitoring-prometheus-rulefiles-0
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext:
                    fsGroup: 2000
                    runAsGroup: 2000
                    runAsNonRoot: true
                    runAsUser: 1000
                  serviceAccount: rancher-monitoring-prometheus
                  serviceAccountName: rancher-monitoring-prometheus
                  terminationGracePeriodSeconds: 600
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: config
                      secret:
                        defaultMode: 420
                        secretName: prometheus-rancher-monitoring-prometheus
                    - name: tls-assets
                      projected:
                        defaultMode: 420
                        sources:
                          - secret:
                              name: >-
                                prometheus-rancher-monitoring-prometheus-tls-assets-0
                    - emptyDir: {}
                      name: config-out
                    - configMap:
                        defaultMode: 420
                        name: prometheus-rancher-monitoring-prometheus-rulefiles-0
                      name: prometheus-rancher-monitoring-prometheus-rulefiles-0
                    - name: web-config
                      secret:
                        defaultMode: 420
                        secretName: prometheus-rancher-monitoring-prometheus-web-config
                    - emptyDir: {}
                      name: prometheus-rancher-monitoring-prometheus-db
                    - hostPath:
                        path: /var/lib/rancher/k3s/server/tls/etcd
                        type: ''
                      name: etcd-client-cert
                    - emptyDir: {}
                      name: nginx-home
                    - configMap:
                        defaultMode: 438
                        name: prometheus-nginx-proxy-config
                      name: prometheus-nginx
              updateStrategy:
                type: RollingUpdate
            status:
              availableReplicas: 1
              collisionCount: 0
              currentReplicas: 1
              currentRevision: prometheus-rancher-monitoring-prometheus-668c484989
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updateRevision: prometheus-rancher-monitoring-prometheus-668c484989
              updatedReplicas: 1
    cattle-system:
      apps/v1:
        Deployment:
          rancher:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '3'
                field.cattle.io/publicEndpoints: >-
                  [{"addresses":["10.100.128.131","10.100.128.132","10.100.128.133"],"port":443,"protocol":"HTTPS","serviceName":"cattle-system:rancher","ingressName":"cattle-system:rancher","hostname":"rancher.epcm.s1.dev.a4.telekom.de","path":"/","allNodes":false},{"port":32080,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true},{"port":32443,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true}]
                meta.helm.sh/release-name: rancher
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-07-26T14:27:01Z'
              generation: 15
              labels:
                app: rancher
                app.kubernetes.io/managed-by: Helm
                chart: rancher-2.7.6
                heritage: Helm
                release: rancher
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:spec:
                      f:replicas: {}
                  manager: kubectl
                  operation: Update
                  subresource: scale
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:field.cattle.io/publicEndpoints: {}
                  manager: rancher
                  operation: Update
                  time: '2023-07-26T14:33:30Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:app.kubernetes.io/managed-by: {}
                        f:chart: {}
                        f:heritage: {}
                        f:release: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:release: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:requiredDuringSchedulingIgnoredDuringExecution: {}
                            f:podAntiAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"rancher"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"CATTLE_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CATTLE_PEER_SERVICE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":80,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/rancher/ssl/cacerts.pem"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                  f:subPath: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls-ca-volume"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm
                  operation: Update
                  time: '2023-07-26T16:20:25Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-31T23:06:16Z'
              name: rancher
              namespace: cattle-system
              resourceVersion: '161449870'
              uid: d61e1acd-1f5e-4578-931b-fa9d4f126119
            spec:
              progressDeadlineSeconds: 600
              replicas: 3
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: rancher
              strategy:
                rollingUpdate:
                  maxSurge: 1
                  maxUnavailable: 1
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher
                    release: rancher
                spec:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: kubernetes.io/os
                                operator: NotIn
                                values:
                                  - windows
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchExpressions:
                                - key: app
                                  operator: In
                                  values:
                                    - rancher
                            topologyKey: kubernetes.io/hostname
                          weight: 100
                  containers:
                    - args:
                        - '--http-listen-port=80'
                        - '--https-listen-port=443'
                        - '--add-local=true'
                      env:
                        - name: CATTLE_NAMESPACE
                          value: cattle-system
                        - name: CATTLE_PEER_SERVICE
                          value: rancher
                      image: rancher/rancher:v2.7.6
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 60
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: rancher
                      ports:
                        - containerPort: 80
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/rancher/ssl/cacerts.pem
                          name: tls-ca-volume
                          readOnly: true
                          subPath: cacerts.pem
                  dnsPolicy: ClusterFirst
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher
                  serviceAccountName: rancher
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls-ca-volume
                      secret:
                        defaultMode: 256
                        secretName: tls-ca
            status:
              availableReplicas: 3
              conditions:
                - lastTransitionTime: '2023-07-26T14:27:01Z'
                  lastUpdateTime: '2023-10-06T09:11:00Z'
                  message: ReplicaSet "rancher-5c7b7b9795" has successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:11:56Z'
                  lastUpdateTime: '2023-12-07T07:11:56Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 15
              readyReplicas: 3
              replicas: 3
              updatedReplicas: 3
          rancher-webhook:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '2'
                meta.helm.sh/release-name: rancher-webhook
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-07-26T14:34:10Z'
              generation: 2
              labels:
                app.kubernetes.io/managed-by: Helm
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/managed-by: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-webhook"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"ENABLE_CAPI"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"ENABLE_MCM"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"STAMP"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8777,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:startupProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm
                  operation: Update
                  time: '2023-07-26T16:23:55Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-31T23:05:41Z'
              name: rancher-webhook
              namespace: cattle-system
              resourceVersion: '161449367'
              uid: 3ac811cc-1890-47e3-b79e-193f535bc3d4
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: rancher-webhook
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-webhook
                spec:
                  containers:
                    - env:
                        - name: STAMP
                        - name: ENABLE_CAPI
                          value: 'true'
                        - name: ENABLE_MCM
                          value: 'true'
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/rancher-webhook:v0.3.5
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: rancher-webhook
                      ports:
                        - containerPort: 9443
                          name: https
                          protocol: TCP
                        - containerPort: 8777
                          name: capi-https
                          protocol: TCP
                      resources: {}
                      startupProbe:
                        failureThreshold: 60
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 1
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp/k8s-webhook-server/serving-certs
                          name: tls
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-webhook
                  serviceAccountName: rancher-webhook
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls
                      secret:
                        defaultMode: 420
                        secretName: rancher-webhook-tls
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T14:34:10Z'
                  lastUpdateTime: '2023-07-26T16:24:25Z'
                  message: >-
                    ReplicaSet "rancher-webhook-998454b77" has successfully
                    progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-31T23:05:41Z'
                  lastUpdateTime: '2023-12-31T23:05:41Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 2
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          system-upgrade-controller:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '1'
              creationTimestamp: '2023-07-26T15:02:59Z'
              generation: 1
              labels:
                io.cattle.field/appId: rancher-k3s-upgrader
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:labels:
                        .: {}
                        f:io.cattle.field/appId: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:upgrade.cattle.io/controller: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                              f:requiredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"system-upgrade-controller"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"SYSTEM_UPGRADE_CONTROLLER_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"SYSTEM_UPGRADE_CONTROLLER_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:envFrom: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/ssl"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"etc-ssl"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: Go-http-client
                  operation: Update
                  time: '2023-07-26T15:02:59Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:14Z'
              name: system-upgrade-controller
              namespace: cattle-system
              resourceVersion: '135401652'
              uid: 97e06bae-4f22-4c97-9263-7ecfc28f4cad
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  upgrade.cattle.io/controller: system-upgrade-controller
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    upgrade.cattle.io/controller: system-upgrade-controller
                spec:
                  affinity:
                    nodeAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - preference:
                            matchExpressions:
                              - key: node-role.kubernetes.io/control-plane
                                operator: In
                                values:
                                  - 'true'
                          weight: 100
                        - preference:
                            matchExpressions:
                              - key: node-role.kubernetes.io/master
                                operator: In
                                values:
                                  - 'true'
                          weight: 100
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: kubernetes.io/os
                                operator: NotIn
                                values:
                                  - windows
                  containers:
                    - env:
                        - name: SYSTEM_UPGRADE_CONTROLLER_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.labels['upgrade.cattle.io/controller']
                        - name: SYSTEM_UPGRADE_CONTROLLER_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      envFrom:
                        - configMapRef:
                            name: system-upgrade-controller-config
                      image: rancher/system-upgrade-controller:v0.9.1
                      imagePullPolicy: IfNotPresent
                      name: system-upgrade-controller
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/ssl
                          name: etc-ssl
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: system-upgrade-controller
                  serviceAccountName: system-upgrade-controller
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - operator: Exists
                  volumes:
                    - hostPath:
                        path: /etc/ssl
                        type: Directory
                      name: etc-ssl
                    - emptyDir: {}
                      name: tmp
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T15:02:59Z'
                  lastUpdateTime: '2023-07-26T15:03:02Z'
                  message: >-
                    ReplicaSet "system-upgrade-controller-7b8d94c7f5" has
                    successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
                - lastTransitionTime: '2023-12-07T07:15:14Z'
                  lastUpdateTime: '2023-12-07T07:15:14Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
        ReplicaSet:
          rancher-5c7b7b9795:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '3'
                deployment.kubernetes.io/max-replicas: '4'
                deployment.kubernetes.io/revision: '3'
                field.cattle.io/publicEndpoints: >-
                  [{"addresses":["10.100.128.131","10.100.128.132","10.100.128.133"],"port":443,"protocol":"HTTPS","serviceName":"cattle-system:rancher","ingressName":"cattle-system:rancher","hostname":"rancher.epcm.s1.dev.a4.telekom.de","path":"/","allNodes":false},{"port":32080,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true},{"port":32443,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true}]
                meta.helm.sh/release-name: rancher
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-10-06T09:09:29Z'
              generation: 3
              labels:
                app: rancher
                pod-template-hash: 5c7b7b9795
                release: rancher
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:field.cattle.io/publicEndpoints: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d61e1acd-1f5e-4578-931b-fa9d4f126119"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:requiredDuringSchedulingIgnoredDuringExecution: {}
                            f:podAntiAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"rancher"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"CATTLE_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CATTLE_PEER_SERVICE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":80,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/rancher/ssl/cacerts.pem"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                  f:subPath: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls-ca-volume"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2023-10-06T09:09:29Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-10-06T09:10:29Z'
              name: rancher-5c7b7b9795
              namespace: cattle-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher
                  uid: d61e1acd-1f5e-4578-931b-fa9d4f126119
              resourceVersion: '161449869'
              uid: df74f872-ca20-41ce-adb8-d1495c2ec1c5
            spec:
              replicas: 3
              selector:
                matchLabels:
                  app: rancher
                  pod-template-hash: 5c7b7b9795
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher
                    pod-template-hash: 5c7b7b9795
                    release: rancher
                spec:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: kubernetes.io/os
                                operator: NotIn
                                values:
                                  - windows
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchExpressions:
                                - key: app
                                  operator: In
                                  values:
                                    - rancher
                            topologyKey: kubernetes.io/hostname
                          weight: 100
                  containers:
                    - args:
                        - '--http-listen-port=80'
                        - '--https-listen-port=443'
                        - '--add-local=true'
                      env:
                        - name: CATTLE_NAMESPACE
                          value: cattle-system
                        - name: CATTLE_PEER_SERVICE
                          value: rancher
                      image: rancher/rancher:v2.7.6
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 60
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: rancher
                      ports:
                        - containerPort: 80
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/rancher/ssl/cacerts.pem
                          name: tls-ca-volume
                          readOnly: true
                          subPath: cacerts.pem
                  dnsPolicy: ClusterFirst
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher
                  serviceAccountName: rancher
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls-ca-volume
                      secret:
                        defaultMode: 256
                        secretName: tls-ca
            status:
              availableReplicas: 3
              fullyLabeledReplicas: 3
              observedGeneration: 3
              readyReplicas: 3
              replicas: 3
          rancher-6d4fb9b86d:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '3'
                deployment.kubernetes.io/max-replicas: '4'
                deployment.kubernetes.io/revision: '2'
                field.cattle.io/publicEndpoints: >-
                  [{"addresses":["10.100.128.131","10.100.128.132","10.100.128.133"],"port":443,"protocol":"HTTPS","serviceName":"cattle-system:rancher","ingressName":"cattle-system:rancher","hostname":"rancher.epcm.s1.dev.a4.telekom.de","path":"/","allNodes":false},{"port":32080,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true},{"port":32443,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true}]
                meta.helm.sh/release-name: rancher
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-07-26T16:20:25Z'
              generation: 6
              labels:
                app: rancher
                pod-template-hash: 6d4fb9b86d
                release: rancher
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:field.cattle.io/publicEndpoints: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d61e1acd-1f5e-4578-931b-fa9d4f126119"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:requiredDuringSchedulingIgnoredDuringExecution: {}
                            f:podAntiAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"rancher"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"CATTLE_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CATTLE_PEER_SERVICE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":80,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/rancher/ssl/cacerts.pem"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                  f:subPath: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls-ca-volume"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T16:20:25Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-10-06T09:10:29Z'
              name: rancher-6d4fb9b86d
              namespace: cattle-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher
                  uid: d61e1acd-1f5e-4578-931b-fa9d4f126119
              resourceVersion: '66481660'
              uid: d7f48c8d-220b-4fe4-b8f3-0ea5e45cfb91
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: rancher
                  pod-template-hash: 6d4fb9b86d
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher
                    pod-template-hash: 6d4fb9b86d
                    release: rancher
                spec:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: kubernetes.io/os
                                operator: NotIn
                                values:
                                  - windows
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchExpressions:
                                - key: app
                                  operator: In
                                  values:
                                    - rancher
                            topologyKey: kubernetes.io/hostname
                          weight: 100
                  containers:
                    - args:
                        - '--http-listen-port=80'
                        - '--https-listen-port=443'
                        - '--add-local=true'
                      env:
                        - name: CATTLE_NAMESPACE
                          value: cattle-system
                        - name: CATTLE_PEER_SERVICE
                          value: rancher
                      image: rancher/rancher:v2.7.5
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 60
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: rancher
                      ports:
                        - containerPort: 80
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/rancher/ssl/cacerts.pem
                          name: tls-ca-volume
                          readOnly: true
                          subPath: cacerts.pem
                  dnsPolicy: ClusterFirst
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher
                  serviceAccountName: rancher
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls-ca-volume
                      secret:
                        defaultMode: 256
                        secretName: tls-ca
            status:
              observedGeneration: 6
              replicas: 0
          rancher-9fc99b99f:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '3'
                deployment.kubernetes.io/max-replicas: '4'
                deployment.kubernetes.io/revision: '1'
                field.cattle.io/publicEndpoints: >-
                  [{"addresses":["10.100.128.131","10.100.128.132","10.100.128.133"],"port":443,"protocol":"HTTPS","serviceName":"cattle-system:rancher","ingressName":"cattle-system:rancher","hostname":"rancher-tst.epcm.s1.dev.a4.telekom.de","allNodes":false},{"port":32080,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true},{"port":32443,"protocol":"TCP","serviceName":"cattle-system:rancher-np","allNodes":true}]
                meta.helm.sh/release-name: rancher
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-07-26T14:27:01Z'
              generation: 6
              labels:
                app: rancher
                pod-template-hash: 9fc99b99f
                release: rancher
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:field.cattle.io/publicEndpoints: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                        f:release: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d61e1acd-1f5e-4578-931b-fa9d4f126119"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                            f:release: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:requiredDuringSchedulingIgnoredDuringExecution: {}
                            f:podAntiAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"rancher"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"CATTLE_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CATTLE_PEER_SERVICE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":80,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/rancher/ssl/cacerts.pem"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                  f:subPath: {}
                          f:dnsPolicy: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls-ca-volume"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T14:33:30Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-26T16:21:26Z'
              name: rancher-9fc99b99f
              namespace: cattle-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher
                  uid: d61e1acd-1f5e-4578-931b-fa9d4f126119
              resourceVersion: '60149'
              uid: 7fef8726-bb34-413e-b849-647c908b20e7
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: rancher
                  pod-template-hash: 9fc99b99f
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher
                    pod-template-hash: 9fc99b99f
                    release: rancher
                spec:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: kubernetes.io/os
                                operator: NotIn
                                values:
                                  - windows
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchExpressions:
                                - key: app
                                  operator: In
                                  values:
                                    - rancher
                            topologyKey: kubernetes.io/hostname
                          weight: 100
                  containers:
                    - args:
                        - '--http-listen-port=80'
                        - '--https-listen-port=443'
                        - '--add-local=true'
                      env:
                        - name: CATTLE_NAMESPACE
                          value: cattle-system
                        - name: CATTLE_PEER_SERVICE
                          value: rancher
                      image: rancher/rancher:v2.6.11
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 60
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: rancher
                      ports:
                        - containerPort: 80
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: 80
                          scheme: HTTP
                        initialDelaySeconds: 5
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/rancher/ssl/cacerts.pem
                          name: tls-ca-volume
                          readOnly: true
                          subPath: cacerts.pem
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher
                  serviceAccountName: rancher
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls-ca-volume
                      secret:
                        defaultMode: 256
                        secretName: tls-ca
            status:
              observedGeneration: 6
              replicas: 0
          rancher-webhook-78456ffd4:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
                meta.helm.sh/release-name: rancher-webhook
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-07-26T14:34:10Z'
              generation: 2
              labels:
                app: rancher-webhook
                pod-template-hash: 78456ffd4
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"3ac811cc-1890-47e3-b79e-193f535bc3d4"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-webhook"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"ENABLE_CAPI"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"ENABLE_MCM"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"STAMP"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8777,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T14:34:10Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:observedGeneration: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-26T16:24:25Z'
              name: rancher-webhook-78456ffd4
              namespace: cattle-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-webhook
                  uid: 3ac811cc-1890-47e3-b79e-193f535bc3d4
              resourceVersion: '62467'
              uid: b5cad2d9-a8e6-4212-b9f7-122240ab91b0
            spec:
              replicas: 0
              selector:
                matchLabels:
                  app: rancher-webhook
                  pod-template-hash: 78456ffd4
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-webhook
                    pod-template-hash: 78456ffd4
                spec:
                  containers:
                    - env:
                        - name: STAMP
                        - name: ENABLE_CAPI
                          value: 'true'
                        - name: ENABLE_MCM
                          value: 'true'
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/rancher-webhook:v0.2.9
                      imagePullPolicy: IfNotPresent
                      name: rancher-webhook
                      ports:
                        - containerPort: 9443
                          name: https
                          protocol: TCP
                        - containerPort: 8777
                          name: capi-https
                          protocol: TCP
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp/k8s-webhook-server/serving-certs
                          name: tls
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-webhook
                  serviceAccountName: rancher-webhook
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls
                      secret:
                        defaultMode: 420
                        secretName: rancher-webhook-tls
            status:
              observedGeneration: 2
              replicas: 0
          rancher-webhook-998454b77:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '2'
                meta.helm.sh/release-name: rancher-webhook
                meta.helm.sh/release-namespace: cattle-system
              creationTimestamp: '2023-07-26T16:23:55Z'
              generation: 1
              labels:
                app: rancher-webhook
                pod-template-hash: 998454b77
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:meta.helm.sh/release-name: {}
                        f:meta.helm.sh/release-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"3ac811cc-1890-47e3-b79e-193f535bc3d4"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"rancher-webhook"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"ENABLE_CAPI"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"ENABLE_MCM"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"STAMP"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":8777,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9443,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:resources: {}
                              f:startupProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tls"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T16:23:55Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-31T23:05:41Z'
              name: rancher-webhook-998454b77
              namespace: cattle-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: rancher-webhook
                  uid: 3ac811cc-1890-47e3-b79e-193f535bc3d4
              resourceVersion: '161449365'
              uid: c664c776-613b-4513-afe7-f1c69a0c036a
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: rancher-webhook
                  pod-template-hash: 998454b77
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: rancher-webhook
                    pod-template-hash: 998454b77
                spec:
                  containers:
                    - env:
                        - name: STAMP
                        - name: ENABLE_CAPI
                          value: 'true'
                        - name: ENABLE_MCM
                          value: 'true'
                        - name: NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/rancher-webhook:v0.3.5
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: rancher-webhook
                      ports:
                        - containerPort: 9443
                          name: https
                          protocol: TCP
                        - containerPort: 8777
                          name: capi-https
                          protocol: TCP
                      resources: {}
                      startupProbe:
                        failureThreshold: 60
                        httpGet:
                          path: /healthz
                          port: https
                          scheme: HTTPS
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 1
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp/k8s-webhook-server/serving-certs
                          name: tls
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: rancher-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: rancher-webhook
                  serviceAccountName: rancher-webhook
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - name: tls
                      secret:
                        defaultMode: 420
                        secretName: rancher-webhook-tls
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
          system-upgrade-controller-7b8d94c7f5:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '1'
              creationTimestamp: '2023-07-26T15:02:59Z'
              generation: 1
              labels:
                pod-template-hash: 7b8d94c7f5
                upgrade.cattle.io/controller: system-upgrade-controller
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                      f:labels:
                        .: {}
                        f:pod-template-hash: {}
                        f:upgrade.cattle.io/controller: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"97e06bae-4f22-4c97-9263-7ecfc28f4cad"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:pod-template-hash: {}
                            f:upgrade.cattle.io/controller: {}
                        f:spec:
                          f:affinity:
                            .: {}
                            f:nodeAffinity:
                              .: {}
                              f:preferredDuringSchedulingIgnoredDuringExecution: {}
                              f:requiredDuringSchedulingIgnoredDuringExecution: {}
                          f:containers:
                            k:{"name":"system-upgrade-controller"}:
                              .: {}
                              f:env:
                                .: {}
                                k:{"name":"SYSTEM_UPGRADE_CONTROLLER_NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                                k:{"name":"SYSTEM_UPGRADE_CONTROLLER_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:envFrom: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/ssl"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"etc-ssl"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"tmp"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T15:02:59Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:15:14Z'
              name: system-upgrade-controller-7b8d94c7f5
              namespace: cattle-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: system-upgrade-controller
                  uid: 97e06bae-4f22-4c97-9263-7ecfc28f4cad
              resourceVersion: '135401651'
              uid: c1850116-bcf0-45a2-baf0-204bff811d99
            spec:
              replicas: 1
              selector:
                matchLabels:
                  pod-template-hash: 7b8d94c7f5
                  upgrade.cattle.io/controller: system-upgrade-controller
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    pod-template-hash: 7b8d94c7f5
                    upgrade.cattle.io/controller: system-upgrade-controller
                spec:
                  affinity:
                    nodeAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - preference:
                            matchExpressions:
                              - key: node-role.kubernetes.io/control-plane
                                operator: In
                                values:
                                  - 'true'
                          weight: 100
                        - preference:
                            matchExpressions:
                              - key: node-role.kubernetes.io/master
                                operator: In
                                values:
                                  - 'true'
                          weight: 100
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: kubernetes.io/os
                                operator: NotIn
                                values:
                                  - windows
                  containers:
                    - env:
                        - name: SYSTEM_UPGRADE_CONTROLLER_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.labels['upgrade.cattle.io/controller']
                        - name: SYSTEM_UPGRADE_CONTROLLER_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      envFrom:
                        - configMapRef:
                            name: system-upgrade-controller-config
                      image: rancher/system-upgrade-controller:v0.9.1
                      imagePullPolicy: IfNotPresent
                      name: system-upgrade-controller
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/ssl
                          name: etc-ssl
                        - mountPath: /tmp
                          name: tmp
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: system-upgrade-controller
                  serviceAccountName: system-upgrade-controller
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - operator: Exists
                  volumes:
                    - hostPath:
                        path: /etc/ssl
                        type: Directory
                      name: etc-ssl
                    - emptyDir: {}
                      name: tmp
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
      batch/v1:
        Job:
          helm-install-rancher:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xVYY/iNhD9K9VI9y0JDiwsRLoPWTYUersQBXbVqlohYybgrmMj26G9Iv575ZC79W6v26vUb3Y8M35v/N7kBPTAH1EbriQksKGW7TvHGAJ45nILCfykNhBAhZZuqaWQnIBKqSy1XEnjtmrzGzJr0Eaaq4hRawVGXHW4y96jqEKmpNVKCNQh21NtQ407bqxuakDwjxXU7xJ1uDs+t4W8o2Mc/PCJy+3HKYpq7Ir+ax1JK4QENJVsj/q7ws2BMpdzOQvNZ2OxgnMATGMDfsUrNJZWB0hkLUQAgm5QNG1xgBu2JnqDvfn6XUj21OwhgT6WONqS4RDZ8HoQb7eElb2rPh32u+WGDOIy7jGkZOiQtSybvnNpLBUifLnoXVLmgMwh31D2rMryjlfcQhITQgKwWB0EtejO39HCO6SVLPlueiG0nKbd/uDjKOt2+z3Sj2/iYUzi3njQ7Y163fiWpL2rCbmOh4PBqJ/e9PsT0ktHt6Q3iodpfzL535/g7NF3aqVcojaQ/HoCqnduAW0zIYDQ00bwpo1PAaA8NontS8zT+wwCOFJR+/I7B18jHrNiOVvM/U9Fli/8/TS7u1/fFrPHrPBqGWQarR83nqbFau2uXObp2L/37Wu/TvEC99YeTNLpfDh9erjJinm2ypbrNJ+dP3SMe2l2aZ7ptEzCbnQdDSK7+/NvgL9BbJUWP2b/EWH6sJqu83S5XI+L7Dabr2bp3dJLLKkw6CfMF+u8WPz8ixcTmSMLIiZqY1FHQjEqgphEV92IRKQTD5pNr934tSbp7O6hyNb54m429itq/KKI81MAvKI773k7z4IfDqhDp7vkSKJhRMJNzcW2S7pO8QTanLwWIleCs8+QwKycK5trNCgtvPIyBKDRqFozdNI+B3BUoq7wXtXSXoRauWVOrTNYa7eXGg1q0xB7HdeOzjbMad/dfX5ypKTa4hIFMqu0c8ZzvUEt0aJpxqSBBASX9R/OjtqZUNuvVBZyQrmotbOIQX3kDFPG3NVzb0K9TKYLHeM7p8UcfNF5cmpXbYXLv+QSFXpObixc8t09Pbgc6Ue3BF/Cv0W9mQaW2rpp9fmvAAAA//8mR7ssIwcAAA
                objectset.rio.cattle.io/id: helm-controller-chart-registration
                objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
                objectset.rio.cattle.io/owner-name: rancher
                objectset.rio.cattle.io/owner-namespace: cattle-system
              creationTimestamp: '2023-10-06T09:09:24Z'
              generation: 1
              labels:
                helmcharts.helm.cattle.io/chart: rancher
                objectset.rio.cattle.io/hash: 5efe9d088ec8761dd0cf345a852fb061f13cea08
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:helmcharts.helm.cattle.io/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:helmcharts.helm.cattle.io/configHash: {}
                          f:labels:
                            .: {}
                            f:helmcharts.helm.cattle.io/chart: {}
                        f:spec:
                          f:containers:
                            k:{"name":"helm"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"AUTH_PASS_CREDENTIALS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"FAILURE_POLICY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_DRIVER"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_VERSION"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NO_PROXY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"REPO"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"TARGET_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"VERSION"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/chart"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"content"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"values"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm-controller@rancher2-tst
                  operation: Update
                  time: '2023-10-06T09:09:24Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-10-06T09:09:32Z'
              name: helm-install-rancher
              namespace: cattle-system
              resourceVersion: '66480905'
              uid: 31c868a6-11ac-412a-9014-70ef2b87cb3a
            spec:
              backoffLimit: 1000
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 31c868a6-11ac-412a-9014-70ef2b87cb3a
              suspend: false
              template:
                metadata:
                  annotations:
                    helmcharts.helm.cattle.io/configHash: >-
                      SHA256=9E2253051B181013C6239321D0A34F07186695AB55F03A9D03918A5FFD8166E2
                  creationTimestamp: null
                  labels:
                    controller-uid: 31c868a6-11ac-412a-9014-70ef2b87cb3a
                    helmcharts.helm.cattle.io/chart: rancher
                    job-name: helm-install-rancher
                spec:
                  containers:
                    - args:
                        - install
                        - '--namespace'
                        - cattle-system
                      env:
                        - name: NAME
                          value: rancher
                        - name: VERSION
                        - name: REPO
                        - name: HELM_DRIVER
                          value: secret
                        - name: CHART_NAMESPACE
                          value: cattle-system
                        - name: CHART
                          value: >-
                            https://%{KUBERNETES_API}%/static/charts/rancher-2.7.6.tgz
                        - name: HELM_VERSION
                        - name: TARGET_NAMESPACE
                          value: cattle-system
                        - name: AUTH_PASS_CREDENTIALS
                          value: 'false'
                        - name: NO_PROXY
                          value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
                        - name: FAILURE_POLICY
                          value: reinstall
                      image: rancher/klipper-helm:v0.8.0-build20230510
                      imagePullPolicy: IfNotPresent
                      name: helm
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /config
                          name: values
                        - mountPath: /chart
                          name: content
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: OnFailure
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: helm-rancher
                  serviceAccountName: helm-rancher
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - name: values
                      secret:
                        defaultMode: 420
                        secretName: chart-values-rancher
                    - configMap:
                        defaultMode: 420
                        name: chart-content-rancher
                      name: content
            status:
              completionTime: '2023-10-06T09:09:32Z'
              conditions:
                - lastProbeTime: '2023-10-06T09:09:32Z'
                  lastTransitionTime: '2023-10-06T09:09:32Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2023-10-06T09:09:24Z'
              succeeded: 1
              uncountedTerminatedPods: {}
    fleet-default:
      batch/v1:
        Job:
          cluster-ad-proxy-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '4'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXbW/bthP/KsW9Fi3Jkp1IgF8Ubf7/dVvSYM0KbEVQUNRJZk2RGkm59QJ/94GUH+TUdhKsbwYEgSzeHe/hd787PUCDlpbUUsgfgEqpLLVcSeN+MtU03EIOUZFME0wZvSyTYhJP0wlWacGSpIriKE6yi5SNi4sJhQBqlKi9CcghhQBU8QWZNWhHmqsRo9YKHHEV8hJyMCvJiMZWnRFUXyVqUi8XkEPN7RdVDA6XcfDqFy7L2f+5/VkVT5qRtEHIgYnOWNSElqTV6tvqWXqmpcwpVwLRkhIr2gkL6wCYRh/xHW/QWNq0kMtOiAAELVD4VJ6yPqdmDjkkl0kyLliJKRb0AtPxJUuQsWnGGJtkJRuzdJpkUeJuOxECYZRFF9CfH3c1AB/Mb1ihRsnQQP7pAWjLP6I2fcWOJBgCKIRii/dO9y0K7ItbUWEwAKak1UoI1JBb3WEACy5daXcFOZ3yzmNgOk7S7HJckQuMKUnLLCVFkl6SaFyl47RMk0mSwfp+HYBpkblkFpQtVFX9yj06xwFYbFpBLbrDIZ6PFAbi7CIiUUyi+C6Kcv/3JwyMu4Aol6g32dG1ewBSUMMZqbmd1dw6yBLa2flsbm1r8jCsuRW0GJW4VK0ZWRS4UM2oRAiAtMrYzxUX7kdocWGVDK1SwoSRO7aoGy69o59baudDqf2Rk0Rp9apVXLpahp3RYcGlu5pwyd07Qty/TgsI4CnPwteMoTFpFKrWhMha4tESsiQ0nUFijR3VvVWNS256H15ABWQbzFelFx6RoVGdZgj3gecW6oDy6VFKBjHeB8AbWjv0aCrZHPVGlHSWC5Mvo1E8SpI9xozF1pWIbO4JQGP/6Jpw7YCyy+c1GkNrvHU+5icSfkRcCc5WkMP/+nIulegavFadtD1eGve4NboLfO/iJgAuLWpJBdmLrINH2sO0nDbQH59SnqvmzOX+9JQq01h+f2//9qwOMcg0WhMOG2VvyNXHyaG0nApY3wfgksBl/Zbrw6y5a3YN+JXyc110usnip5rMSx0ROOw3oeqRmW+bzPcKBEDbVqz8S0t1jdYQ58Ms1J0MmZIVr8PNwWhFG+El/ViY0bYdLboCtUSLxnFtQyWtsSTFavYTiibwdwy42CfTZXH2mEyDc/NllsUsjZI4wzIu4jLFtKim2STOaDxJx5dVNo6nVTrNfM8OJl3w3fggxKBecoaEMubKDwH0r90c34/+2di/bWlnsJz5STFI0cEV23weGQ/h7vn5fIFy6dtwg7U376+v3925PqWiw5dsMg56GyNXH69u7j7f/XF75cH6mJL6JNEapXWMdDlycPRCt50QO8J4V90oe6vRoE/bxvYWRo946jyt7LE1GK/97x9LIj+Ev/4FBWk0nbBn/N4KnCGR7czxpZPcvjkx3xkE0CxKrl+R9tVTI8vMXz6cNv6Rkms/rjkV/G/ULy3+f6gmzsQgaawdbi2Hu8wPWwFaQRmSLdxflNkXtcq9w5NUJX5Agcwq7XbHQzpXBnIQXHbf3H6p3Qaq7Y4PbnDpi2+QdZrblcMlfrPOjO7ka/O7cSt1HEWRW0572n3ds+7NYJB+T5tWiQ0N9zFiVSFzX3E36gObY9n5EblA58TgM8eFrFqn6WKBq786KgbEuYnjfpvE3nbPOte0dW6f/DDxQqQsKGJalNNicvAdsycubFq78v37sD5omz2Yj4qcx/+zVHaQf5b0ni6fJb7riCcU9rvV8VXJg0Wjx0j/tEfCftFar+/Xa4cZS23ngb/+JwAA//8da7qV5g8AAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-ad-proxy
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:15Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 38332bcde4eba7e428c3ecc69ccc59dc2c463903
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"6234982f-7e1a-4d94-b348-02f424d43539"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:15Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:28Z'
              name: cluster-ad-proxy-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-ad-proxy
                  uid: 6234982f-7e1a-4d94-b348-02f424d43539
              resourceVersion: '169912464'
              uid: 9934100d-add2-499b-8670-1156ada97e02
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 9934100d-add2-499b-8670-1156ada97e02
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 9934100d-add2-499b-8670-1156ada97e02
                    job-name: cluster-ad-proxy-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-ad-proxy,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=2'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-ad-proxy
                        - /ad-proxy
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-ad-proxy
                  serviceAccountName: git-cluster-ad-proxy
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-ad-proxy-config-dbaee4bd6b53
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:28Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:28Z'
                  lastTransitionTime: '2024-01-08T09:06:28Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:15Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-coredns-autoscaler-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '1'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXb2/bthP+KsW9Fi3Jkp1IgF8UbX6/dVvSYM0KbEVQUNRJZk2RGkm59QJ/94GU/yip7ThY3wwIAlk8HnnPPffc6QEatLSklkL+AFRKZanlShr3k6mm4RZyiIpkmmDK6GWZFJN4mk6wSguWJFUUR3GSXaRsXFxMKARQo0TtXUAOMQSgii/IrEE70lyNGLVW4IirkJeQg1lJRjS26oSh+ipRk3q5gBxqbr+oYrC4jINXv3BZzv7P7c+qeNaNpA1CDkx0xqImTGkspSG0s8owKlCf5cG0lDk3lUC0pMSKdsLCOgCm0cd+xxs0ljYt5LITIgBBCxQe1GPe59TMIYcML9OoomVVMTZNLrNJyeIxKzO8SC4nEYvSMokuywzdac8GQxhl0QX0locvHYAP6zesUKNkaCD/9AC05R9Rmz6LB0CHAAqh2OK92/sWBfYJr6gwGABT0molHJq51R0GsODSpXuXpHPS0HmGsHKajSlFko2jiqRRFpEsKygZsywes2KSTOMI1vfrAEyLzAFcULZQVfUr99wdB2CxaQW16BaHbD+QLIizi4hEMYniuyjK/d+fMHDuQqNcot7gpGv3AKSghjNSczuruXWEdrHMZ3NrW5OHYc2toMWoxKVqzciiwIVqRiVCAKRVxn6uuHA/QosLq2RolRImjNyyRd1w6S/6uaV2PrTaLzlLlFavWsWly2rYGR0WXLqjCZfcvSPE/eu0gACeu1n4mjE0Jo1C1ZoQWUs8b0KWhKYzSKyxo7r3qnHJTX+HFwgF2QbzVemF52ZoVKcZwn3glYc6ynx6AskgxvsAeENrxyNNJZuj3piSznJh8mU0ikdJsmebsdi6FJHNOQFo7B9dYa4dUXZ4XqMxtMZbd8f8COAHzJXgbAU5/K9P51KJrsFr1Unb86Vxj1unu8D3V9wEwKVFLakge5N18GT3EJbjDvrlY5vnqjlxuF89tpVpLL8/t397cg8xyDRaEw4LZe/I5cfZobScCljfB+BA4LJ+y/Vj1NwxuwL8SvmpKjpeZPFzReatDhg8rjeh6pGZb4vM1woEQNtWrPxLS3WN1hB3h1moOxkyJSteh5uF0Yo2wlv6VjGjbTtadAVqiRaNU92GSlpjSYrV7CcUTeDPGKiyB9OhODsuq8Gp7jPLYpZGSZxhGRdxmWJaVNNsEmc0nqTjyyobx9MqnWa+egd9MPiupRBiUC85Q0IZc0SAAPrXrt/vR4SZzw1paWewnPnuMQDr0RFbZE+2jNC9fXvzYfj2fDVBufRFumHim/fX1+/uXBVT0eFLpiBHzI2Tq49XN3ef7/64vfJUfipYPXC0RmmdXl2OHCDe6LYTYicn76obZW81GvRQbnxvSfZExU6Lzp55gzbc//6xEvND1O1fCJRG0wl74t5bgxMSs+1IPnWS2zdHuj+DAJpFyfUr0r56rqGZ+ctb1+Z+pOTaN3NOBf/bU/5Fyf8P5cS5GIDG2uFM83jS+WEDQisoQ7Kl+4uQfVGp3Ds+SVXiBxTIrNJusnws9spADoLL7pubPrWbT7Xd6cENLn3yDbJOc7tyvMRv1rnRnXxtfjdu9I6jKHKjay/Fr3slvhm02VNSapXYiHQfLVYVMvcteKM+sDmWnW+lC3TXGXwiueBV63a6qODqr46KgYRuIrrfwtn77vXnmrYugDM+arw5KQuKmBbltJgkw6+hvZhh09qVr+mH9aNS2hP8oMnpmjhry64MzrLeS+hZ5rsqeWbDfho7PFx5Amn0vOmf9uzYj2br9f167Xhkqe18Maz/CQAA//8q/38xNhAAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-coredns-autoscaler
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:19Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 9e840fadffcc63895dc12cd9e73850c04d308d9e
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"cd692aae-920f-4090-99ba-2c912cb53610"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:19Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:29Z'
              name: cluster-coredns-autoscaler-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-coredns-autoscaler
                  uid: cd692aae-920f-4090-99ba-2c912cb53610
              resourceVersion: '169912524'
              uid: 55b8216c-2bcf-43f3-a294-3c3e75be96b8
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 55b8216c-2bcf-43f3-a294-3c3e75be96b8
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 55b8216c-2bcf-43f3-a294-3c3e75be96b8
                    job-name: cluster-coredns-autoscaler-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-coredns-autoscaler,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=0'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-coredns-autoscaler
                        - /coreDNS-autoscaler
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-coredns-autoscaler
                  serviceAccountName: git-cluster-coredns-autoscaler
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-coredns-autoscaler-config-dbaee4bd6b53
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:29Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:29Z'
                  lastTransitionTime: '2024-01-08T09:06:29Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:19Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-docker-proxy-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '3'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXYW/bNhP+K8V9Fi0pku1YgD8Ubd533ZY0WLMCWxEUFHWSWVOkRlJuvcD/fSBlW3JqOwnWLwOCwBKPR95zzz13eoAaLS2opZA9AJVSWWq5ksY9MlXX3EIGUZ5MEkwZvSySfBxP0jGWac6SpIziKE5m05Rd5NMxhQAqlKi9C8gggQBU/gWZNWhHmqsRo9YKHHEV8gIyMGvJiMZGnTFUXyVqUq2WkEHF7ReVDxZXcfDqFy6L+f+5/VnlT7qRtEbIgInWWNSkUGyJmjRafVs/a69pKHMOSoFoSYElbYWFTQBMo4/6jtdoLK0byGQrRACC5ig8nKe8L6hZQAaTaZRMKCvTBKdlMUliFk0v8XKWRHmRpsWEprNpnk9m7rQzYRBGWTSFzub4dQPwAf2GJWqUDA1knx6ANvwjatNl7gjQEEAuFFu+d3vfosAuySUVBgNgSlqthEANmdUtBrDk0qV4n5jz0LeeD2lMczqe5SS6SCYkjSYxyYvplFzkaTzGS4ZRkcLmfhOAaZA5UHPKlqosf+WeqRcBWKwbQS26xSG3jyQI4tk0IlFMovguijL/9ycMnLugKJeotwjpyv0AklPDGam4nVfcOvoS2trFfGFtY7IwrLgVNB8VuFKNGVkUuFT1qEAIgDTK2M8lF+4htLi0SoZWKWHCyC1b1DWX/qKfG2oXQ6t+yVmitHrdKC5dPsPW6DDn0h1NuOTuHSHuX6sFBPDUzcLXjKExaRSqxoTIGuIZE7IkNK1BYo0dVZ1XjStuuju8QBbILpivSi89K0OjWs0Q7gOvM9SR5dMjSAYx3gfAa1o5Bmkq2QL11pS0lguTraJRPEqSnmfGYuNSRLbnBKCx++mKceOIssfzGo2hFd66O2YnAD9irgRna8jgf106V0q0NV6rVtqOL7X7uXO6D7y/4jYALi1qSQXpTTbBo91DWE476JZPbV6o+szhfvXUVqax+P7c7u3ZPcQg02hNOCyU3pHLj7NDaTkVsLkPwIHAZfWW60PU3DH7AvxK+bkqOl1k8VNF5q2OGBzWm1DVyCx2ReZrBQKgTSPW/qWlukJriLvDPNStDJmSJa/C7cJoTWvhLX17mNOmGS3bHLVEi8bpbU0lrbAg+Xr+E4o68GcM9NiD6VCcHxPU4Fyvmc9ilkZJPMMizuMixTQvJ7NxPKPxOL24LGcX8aRMJzNft4OuF3zXRggxqFecIaGMOQpAAN1r19f7UWDus0Ia2hos5r5jDGA6OGKH6Yk2ER48P187UK58SW559+b99fW7O1ezVLT4kgnH0XDr5Orj1c3d57s/bq88cR/LUwcWrVBap06XIweCN7pthdiLx7vyRtlbjQY9fFvfO0o90qzzEtPzbNBuu+cfKyg/RMv+hRxpNK2wZ+69MzgjKLv+41MnuX1zotczCKBeFly/Is2rp9qXWby8UW3vRwqufevmVPC/Ub80+f+hnDgXA9BYM5xgDueaHzYONIIyJDu6vwjZF5XKveOTVAV+QIHMKu3myENpVwYyEFy239ysqd00qu1eD25w5ZNvkLWa27XjJX6zzo1u5Wvzu3EjdhxFkRtUO/l93anvzaCpHpdPq8RWkrs4sSyRuS+8G/WBLbBofctcorvI4PPHha0at9PFA1d/tVQMxHMby/0OyM53pzzXtHFXP/vB4g1JkVPENC8m+TgZfuP0AoZ1Y9e+jh82B+XTk/qoyfk6eNaWPfWfZd3L5rPM95XxxIZ+3jo+PnnSaPRc6X71jOiHr83mfrNx3LHUtr4ANv8EAAD//xcpxMMGEAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-docker-proxy
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:14Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 67036acf43e7fd631c078e8930bd44d6a497bb69
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"41aba59b-0236-4061-bd77-2b415e8ce0d4"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:14Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:30Z'
              name: cluster-docker-proxy-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-docker-proxy
                  uid: 41aba59b-0236-4061-bd77-2b415e8ce0d4
              resourceVersion: '169912556'
              uid: d8a0c5b3-c5a5-4bd8-af4e-9f0d4281a738
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: d8a0c5b3-c5a5-4bd8-af4e-9f0d4281a738
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: d8a0c5b3-c5a5-4bd8-af4e-9f0d4281a738
                    job-name: cluster-docker-proxy-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-docker-proxy,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=0'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-docker-proxy
                        - /docker-proxy
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-docker-proxy
                  serviceAccountName: git-cluster-docker-proxy
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-docker-proxy-config-dbaee4bd6b53
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:30Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:30Z'
                  lastTransitionTime: '2024-01-08T09:06:30Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:14Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-fluentd-aggregator-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '1'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXb2/bthP+KsW9Fi3Jkv8J8Iuize+3bksarFmBrQgKijrJrClSIym3XuDvPpDyHyW1HQfrmwFBIIvHI++55547PUCNlhbUUsgegEqpLLVcSeN+MlXX3EIGUZ6ME0wZnRZJPorH6QjLNGdJUkZxFCezScqG+WREIYAKJWrvAjKIIQCVf0FmDdqB5mrAqLUCB1yFvIAMzFoyorFRZwzVV4maVKslZFBx+0XlvcVVHLz6hcti/n9uf1b5s24krREyYKI1FjUpRYvSFoRWlcaKWqUv8mAaypybUiBaUmBJW2FhEwDT6GO/4zUaS+sGMtkKEYCgOQoP6invC2oWkMGYTfO4mKSTchanEzYu6IiOyqKIcDSaxjSa5ElCpyVzpz0bDGGURRPoLI9fOgAf1m9YokbJ0ED26QFowz+iNl0Wj4AOAeRCseV7t/ctCuwSXlJhMACmpNVKCNSQWd1iAEsuXbr3SbokDa1nSBGxckpnSNJkOiXpcJSSfMjGBNNynAzj4TRJC9jcbwIwDTIHcE7ZUpXlr9xzdxiAxboR1KJb7LP9SLIgnk0iEsUkiu+iKPN/f0LPuQuNcol6i5Ou3AOQnBrOSMXtvOLWEZrQ1i7mC2sbk4Vhxa2g+aDAlWrMwKLApaoHBUIApFHGfi65cD9Ci0urZGiVEiaM3LJFXXPpL/q5oXbRtzosOUuUVq8bxaXLatgaHeZcuqMJl9y9I8T9a7WAAJ67WfiaMTQmjULVmBBZQzxvQpaEpjVIrLGDqvOqccVNd4cXCAXZBfNV6aXnZmhUqxnCfeCVhzrKfHoCSS/G+wB4TSvHI00lW6DempLWcmGyVTSIB0lyYJux2LgUke05AWjsHl1hbhxR9nheozG0wlt3x+wE4EfMleBsDRn8r0vnSom2xmvVStvxpXaPO6f7wA9X3AbApUUtqSAHk03wZHcfltMOuuVTmxeqPnO4Xz21lWksvj+3e3t2DzHINFoT9gvl4Mjlx9mhtJwK2NwH4EDgsnrL9WPU3DH7AvxK+bkqOl1k8XNF5q2OGDyuN6GqgVnsiszXCgRAm0as/UtLdYXWEHeHeahbGTIlS16F24XBmtbCW/pWMadNM1i2OWqJFo1T3ZpKWmFB8vX8JxR14M/oqbIH06E4Py2rwbnuM5/FLI2SeIZFnMdFimlejmejeEbjUTqclrNhPC7T8cxXb68PBt+1FEIM6hVnSChjjggQQPfa9fvDiDD3uSENbQ0Wc989emA9OmKH7NmWER55e7maoFz5It0y8c376+t3d66KqWjxJVOQI+bWydXHq5u7z3d/3F55Kj8VrA44WqG0Tq+mAweIN7pthdjLybvyRtlbjQY9lFvfO5I9UbHzonNgXq8Nd79/rMT8EHX7FwKl0bTCnrn3zuCMxOw6kk+d5PbNie7PIIB6WXD9ijSvnmtoZvHy1rW9Hym49s2cU8H/Rv3S5P+HcuJc9EBjTX+meTzp/LABoRGUIdnR/UXIvqhU7h2fpCrwAwpkTqSyB3gs9spABoLL9pubPrWbT7Xd68ENrnzyDbJWc7t2vMRv1rnRrXxtfjdu9I6jKHKjayfFrzslvum12XNSapXYinQXLZYlMvcteKM+sAUWrW+lS3TX6X0iueBV43a6qODqr5aKnoRuI7rfwdn57vTnmjYugAs+arw5KXKKmObFOB8l/a+hg5hh3di1r+mHzaNSOhD8qMn5mrhoy74MLrI+SOhF5vsqeWbDYRo7Plx5Amn0vOmeDuw4jGabzf1m43hkqW19MWz+CQAA///kIZOLNhAAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-fluentd-aggregator
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:23Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 6c8b1d747f9147c6da5a5fdd0e5581a07b33a8fc
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d0cf8a9e-4388-4254-b2c6-e4f63212834d"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:23Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:32Z'
              name: cluster-fluentd-aggregator-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-fluentd-aggregator
                  uid: d0cf8a9e-4388-4254-b2c6-e4f63212834d
              resourceVersion: '169912599'
              uid: 7b8e7f52-fd82-46e0-9c6c-f119d2d670e5
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 7b8e7f52-fd82-46e0-9c6c-f119d2d670e5
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 7b8e7f52-fd82-46e0-9c6c-f119d2d670e5
                    job-name: cluster-fluentd-aggregator-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-fluentd-aggregator,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=0'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-fluentd-aggregator
                        - /fluentd-aggregator
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-fluentd-aggregator
                  serviceAccountName: git-cluster-fluentd-aggregator
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-fluentd-aggregator-config-dbaee4bd6b53
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:32Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:32Z'
                  lastTransitionTime: '2024-01-08T09:06:32Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:23Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-logging-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '10'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXbW/bOBL+K8V8Fi3Jkt8E+EPR5u56d0mDbbbAbmEUFDWSWVOklqTcegP/9wUpvyiJ7STYflkgCGRxZjgvzzwzuocaLS2opZDdA5VSWWq5ksb9ZKquuYUMojwZJ5gyOi2SfBSP0xGWac6SpIziKE5mk5QN88mIQgAVStTeBGQQRxCAyr8hswbtQHM1YNRagQOuQl5ABmYjGdHYqAuC6rtETar1CjKouP2m8t7hOg7e/I/LYv5vbv+r8mfNSFojZMBEayxqIlRVcVm9SM00lDndUiBaUmBJW2FhGwDT6CO+4zUaS+sGMtkKEYCgOQqfynPWl9QsIYMiH80YpvE4nk0p5pM8x3yY5ixOkmlRTstyWOTjdDJ0t52OgDDKogl0x6c9DcDH8guWqFEyNJB9uQfa8M+oTVewE+mFAHKh2Oqj032PArvallQYDIApabUSAjVkVrcYwIpLV9hDOc4mvPUAYOMyTVNKCU6nCUnHGJFZWYwJG2KajybpiLEItottAKZB5lKZU7ZSZfl/7rE5DMBi3Qhq0R320XyiLBDPJhGJYhLFd1GU+b/foWfcxUO5RL1Ljq7cA5CcGs5Ixe284tbhldDWLudLaxuThWHFraD5oMC1aszAosCVqgcFQgCkUcZ+LblwP0KLK6tkaJUSJnTdQSzqmkvv6NeG2mVf6njkJFFavWkUl66UYWt0mHPpriZccveOEPev1QICeM6z8C1jaEwahaoxIbKGeLCELAlNa5BYYwdVZ1XjmpvOh1cQAdkH813plQdkaFSrGcIi8MxCHU6+PEpJL8ZFALymlQOPppItUe9ESWu5MNk6GsSDJDlCzFhsXInI7p4ANHaPrgW3DiiHfF6jMbTCW+djdibhJ8SV4GwDGfyrK+daibbGa9VK2+Gldo97o4fAjy7uAuDSopZUkKPINnik3U/LeQPd8TnlpaovXO5Pz6kyjcXTe7u3F3WIQabRmrDfKEdDrj5ODqXlVMB2EYBLApfVe64fZs1dc2jA75Rf6qLzTRY/12Re6oTAw34TqhqY5b7JfK9AALRpxMa/tFRXaA1xPsxD3cqQKVnyKtwdDDa0Fl7SD4U5bZrBqs1RS7RoHNXWVNIKC5Jv5v9BUQf+jh4V+2S6LM4fcWlwabjMZzFLoySeYRHncZFimpfj2Sie0XiUDqflbBiPy3Q88y3bG3PBk+FBiEG95gwJZcxVHwLoXrsZfpz789S/bWhrsJj7OdHL0IMr9ul8OhzC/ePLyQLl2vfgDmjvPl5ff7hzTUpFi69ZYhzudkauPl/d3H29++32yiP1MR91KaIVSuvoaDpwWPRCt60QB7b4UN4oe6vRoE/azvYeQ49I6jKnHIHVG63d75/LID+FvP4G/2g0rbAX/N4LXGCQ/cDxpZPcvjsz3BkEUK8Krt+Q5s1z88osXz+Zdv6Rgms/qzkV/E/Ury3+P6gmzkQvaazprywPF5mfNv8bQRmSPdxfldlXtcrC4UmqAj+hQGaVdovjQy5XBjIQXLY/3HKp3fqp7YEPbnDti2+QtZrbjcMl/rDOjG7lW/Orcet0HEWR20w70n3bce5Nb4o+IU2rxI6DuxCxLJG577cb9YktsWj9eFyh86H3geMiVo3TdKHA1R8tFT3e3IWx2Oews92RzjVtnNfnPkm8DMmnOEpKVsZxNO1/wBxpC+vGbnz33m8fNM0RyidFLqP/RSoHwL9I+kiWLxI/9MMzCse16vSW5KGi0SOkezri4LhjbbeL7dYhxlLbethv/woAAP//4M30FN8PAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-logging
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:25Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: db59ce416198aeb7bbeb24bc1338df8ff2db6472
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"c6f444aa-e883-46e0-9fd6-c2e4b5745cc0"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:25Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:36Z'
              name: cluster-logging-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-logging
                  uid: c6f444aa-e883-46e0-9fd6-c2e4b5745cc0
              resourceVersion: '169912685'
              uid: 2f0dc462-75da-4b52-af32-9ba918ea5143
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 2f0dc462-75da-4b52-af32-9ba918ea5143
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 2f0dc462-75da-4b52-af32-9ba918ea5143
                    job-name: cluster-logging-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-logging,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=4'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-logging
                        - /logging
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-logging
                  serviceAccountName: git-cluster-logging
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-logging-config-b8e53fcf1108
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:36Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:36Z'
                  lastTransitionTime: '2024-01-08T09:06:36Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:25Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-longhorn-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '9'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RX227bOBD9lYDPoiXZ8k2AH4I2vWwbN2jSArtFEFDUSGJNkVqScuoN/O8LUrItJ7aTYPuyQBBY4nA4nJlzzugBlWBISgxB8QMiQkhDDJNC20cqy5IZFKMgGYwGEFEySQfJMBxFQ8iihA4GWRAG4WA6jmg/GQ8J8lAOApRzgWI0RR6SyU+gRoPpKSZ7lBjDocekz1IUI70SFCuo5AlDeS9A4Xy5QDHKmfkpk87iMvTOPjGRzt4z84dMnnUjSAkoRpTX2oDCXIq8kEq8aJ+uCLWbMw5gcAoZqblBaw9RBe7GN6wEbUhZoVjUnHuIkwS4S+Ux7wXRBYpRGGXj4WAS0SzLYJKlfUrS8TTrjwZhOAIY9pNxOukHfXvakStgSmgwRs364VA95C7zFTJQIChoFP94QKRi30HppmIHEow8lHBJF1/s3rfAoSluRrgGD1EpjJKcg0KxUTV4aMGELe22IMdTXrseSPqQ0SgY42EyGeJoRAie9qM+hmQ0GcGEUkoJWt+uPaQroDaZCaELmWWfmevOvocMlBUnBuxit58PFAaF03GAgxAH4U0QxO7vL9Rxbi9EmADVZkfl9gfCCdGM4pyZWc6MbVlMalPMCmMqHft+zgwnSS+Fpax0zwCHhSx7KSAP4Upqc5cxbh98AwsjhW+k5NoP7LIBVTLhAr2riCm6VrslawnCqFUlmbC19Gut/IQJezRmgtl3GNt/teLIQ89F5p9TClpHgS8r7QOtsOsWnw58XWvARpte3nhVsGS6ieEVVIA3l7mXauE60teyVhTQree4hdhG+fEoJZ073nqIlSS33aOIoAWo1hTXhnEdL4Ne2BsMdj2mDVS2RLg9x0MKmp8WhGvbKNt8XoLWJIcrG2N8JOEHzCVndIVi9K4p51LyuoRLWQvT9Etpf26cbi++C7G9ABMGlCAc70zW3qPd3bQcd9AsH9tcyPLE4W712FaqIH16bvP25B6sgSow2u8CZefI1sfagTCMcLS+9ZBNAhP5W6b2s2aP2QLwnrBTKDoOsvA5kDmrAwb7eOMy7+liAzKHFeQhUlV85V4aonIwGtsYZr6qhU+lyFjutwu9FSm5s3SyMCNV1VvUCSgBBrTl2pIIkkOKk9XsA/DSc2d0uNgl02Zx9phMvVP6MpuGNAoG4RTSMAnTCKIkG02H4ZSEw6g/yab9cJRFo6nDbEfpvCfygbEGtWQUMKHUlh95qHltdXwn/bPIva1IrSGdOaXopGjviNZQ63upUrypHxjqN2xUAC/9zbozpoSCavN8wLZdbsLSBa4UWxIDC1gd27FvtSnwAb3yt79fTmAglo4X2uZ///Hm7vr6w92bL5eX5/O3lkEIrx136eIMyzNtFKOmkNosYEULoBYYM0IpVAYLuHeYaJ19uPh8efft+uLr/PzyYuPqnZKl1bEGhJ9g9RUy+2yvFqNaW+R3OcGmoItSWdkKEt7I+XrdOc8G/fGmE/OLxaDj5OL7xfzm7ubPqwsH/ccE37QcyUEYy++TngW3M7qqOd/S78dsLs2VAg2uCVvfG1A+Yv3TJL1DamdYaZ6f0Nx+5+wnsaW938zjv0VC/oMKKNA1Nyfi3hic4PGN7Lt6C2beHBmxKPJQuUiZOsPV2XNTgy5ePx+08eGUKTcxMcLZP6Be2zH/o5pYF52k0ao7OO6Pk79tCqs4oYA37f6qzL4KKre2n4RM4Ro4UCOVo7k9RZUaxYgzUf+yI76yHwHKbElkDktXfA20VsysbF/CL2PdqFqc62/aftWEQRDY74NG+c4b4Zt3ZpmnQmEkb5WwuSNkGVD7IT2X17SAtHY61DBy50tTO/q1O+1d0MXfNeEdtm3vcbtJYuO7oapLUtmwj34bOiMcTcfZKIM+9PvQ/ZTcsd0BPvNaKdmJyvyQcjihgLIyKwf/h/Ue6nZYOGhyGj4v2rJFzIusd2z7IvMtoJ7ZsJuODw+7R3O5Nyqv17dWd5E2xNQON+t/AwAA///KjoBpqBEAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-longhorn
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:18Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 14f75384cfffe8fd2cad79f263116ee52b7d8202
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"b2efc407-5b85-46aa-9242-eb686e8cccca"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"GIT_SSH_COMMAND"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_USERNAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:secretKeyRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/fleet/helm"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"helm-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:18Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:46Z'
              name: cluster-longhorn-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-longhorn
                  uid: b2efc407-5b85-46aa-9242-eb686e8cccca
              resourceVersion: '169912847'
              uid: 7f972640-a64c-471f-abb4-72ae6c6bbd33
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 7f972640-a64c-471f-abb4-72ae6c6bbd33
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 7f972640-a64c-471f-abb4-72ae6c6bbd33
                    job-name: cluster-longhorn-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-longhorn,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=4'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--password-file'
                        - /etc/fleet/helm/password
                        - '--cacerts-file'
                        - /etc/fleet/helm/cacerts
                        - '--ssh-privatekey-file'
                        - /etc/fleet/helm/ssh-privatekey
                        - '--'
                        - cluster-longhorn
                        - /longhorn
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: GIT_SSH_COMMAND
                          value: ssh -o stricthostkeychecking=accept-new
                        - name: HELM_USERNAME
                          valueFrom:
                            secretKeyRef:
                              key: username
                              name: helmrepo-auth
                              optional: true
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /etc/fleet/helm
                          name: helm-secret
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-longhorn
                  serviceAccountName: git-cluster-longhorn
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-longhorn-config-497f6fe2e22e
                      name: config
                    - name: helm-secret
                      secret:
                        defaultMode: 420
                        secretName: helmrepo-auth
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:46Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:46Z'
                  lastTransitionTime: '2024-01-08T09:06:46Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:18Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-monitoring-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '7'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXbW/bthP/KgVfi9ajnViAXxRt/v91W9JgzQpshVFQ1ElmTZEaeXLrBf7uAyk/KKntJFjfDDAMiTwe7+F3vzvdkwaQlQwZye8JU0ojQ6GVda9cN41AkpOoSCcpZJxdlmkxjifZGKqs4GlaRXEUp9OLjCfFxZiRgNSgwHgVJCcXJCC6+AIcLeDICD3iDFHCSOhQlCQndq04NdDqM4L6qwJD69WS5KQW+EUXg81VHLz6Rahy9n+BP+viSTWKNUBywmVnEQxttBKojVD1s07alnF3vJIASEuoWCeRbALCDXif70QDFlnTklx1UgZEsgKkD+Yp7QtmF84ifpEk2fgyS6pxVJYFg4xFccHKZFwm6bhMptVkclnF7raTTlDOeOSCftrYgHh3foMKDCgOluSf7glrxUcwts/akSCTgBRS8+V7d/YtSOgTXDFpISBcKzRaSjAkR9NBQJZCufTuk3Iu7J1HwiSOy6xkFzTlHGhWpQllEz6hUZyU8WScsKpMyGa+CYhtgbuAFowvdVX9KjxGk4AgNK1kCG5ziOojySHx9CKiUUyj+C6Kcv/7kwyUO5eYUGC28TG1eyC0YFZwWguc1QIdcCnrcDFbILY2D8NaoGTFqISVbu0IQcJSN6MSSEBoqy1+roR0LyHCErUKUWtpw8htI5hGKG/o55bhYih12HKSoNCsWy2Uy2bYWRMWQrmrqVDCrVHq/jojSUCesix8zTlYm0Whbm0IvKUeLyFPQ9tZoGhxVPdaDayE7W14ASHQnTNftVl6TIZWd4YDmQeeYZiDyqdHIRn4OA+IaFjt8GOY4gswW1HaoZA2X0WjeJSmB5RZhNaliG7vCYiB/tEV4sYBZR/Pa7CW1XDrbMxPBPyIuJaCr0lO/tenc6Vl18C17hT2eGnc407p3vGDiVsHhEIwikl6ENkEj04Pw3JaQb996vBCN2cu97unjnID5ff39qtnz1AL3ADacFgoB0UuP04OFAomyWYeEBcEoeq3wjyMmrtmX4BfmThXRaeLLH6qyLzUEYGH9SZ1PbKLXZH5WiEBYW0r134RmakBLXU2zELTqZBrVYk63G6M1qyRXtK3hhlr29GyK8AoQLCObRumWA0lLdazn0A2gb9jwMY+mC6Ks+/pNDjXZWbTmGdRGk+hjIu4zCArqsl0HE9ZPM6Sy2qaxJMqm0x91Q76XfBdC6HUglkJDpRx7gBAAtIvu35+GAFmiV9tWWehnPluMQjSgyt2ET3aIsLB2/NZA9TKF+MWcW/eX1+/u3PVymQHL5lqHAC3Sq4+Xt3cfb774/bKQ/YxMfWBYjUodLx0OXKg9EK3nZR72nhX3Wi8NWDBh26rewemR2x1nlwOCBu02f79x1LJD2Gxf0FEBmwn8YzdO4EzVLLrPD51SuCbE12ek4A0y1KYV7R99VTjsouXt6itfbQUxjdtwaT4G8xLk/8fyolTMQgab4ezy8OJ5ocNAq1kHOgO7i+K7ItKZe7wpHQJH0ACR23cBPmQ1LUlOZFCdd/clGncHGpwzwc3sPLJt8A7I3DtcAnf0KkxnXptf7dutI6jKHIjak+9r3vmvRm002PUiVpuybj3EqoKuPumu9Ef+ALKzrfKJTgzBp88zmndupPOG3L1V8fkgDq3nsx3Yex197xzzVpn+JmPFC9Gs+zyIoW04GOIhl81B/KCpsW1r+H7zYPSOQD6qMj5GnjWkT3snyV9oMxnie+r4okDhynr+NDkAWPA46R/OqDhMHJtNvPNxuEGGXYe/Jt/AgAA///4rapC9g8AAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-monitoring
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:14Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: cc72245842f50ddbae4a01bad25d235d29f668f1
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"611d4da7-3cce-4f32-a6c6-012d1652afd2"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:14Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:28Z'
              name: cluster-monitoring-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-monitoring
                  uid: 611d4da7-3cce-4f32-a6c6-012d1652afd2
              resourceVersion: '169912498'
              uid: c55b2f2e-f1ac-4e2a-811f-2bce5c286bad
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: c55b2f2e-f1ac-4e2a-811f-2bce5c286bad
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: c55b2f2e-f1ac-4e2a-811f-2bce5c286bad
                    job-name: cluster-monitoring-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-monitoring,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=2'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-monitoring
                        - /monitoring
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-monitoring
                  serviceAccountName: git-cluster-monitoring
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-monitoring-config-44873e3bc5e0
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:28Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:28Z'
                  lastTransitionTime: '2024-01-08T09:06:28Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:14Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          cluster-squid-proxy-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '9'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RX3W7bPBJ9lYDXoiVF8p8AXwRt+rNt3KBJC+wWQUBRI4k1Raok5dQb+N0XpGRbTm0nwfbmA4LAEofD4cycc0aPqAJDMmIISh4REUIaYpgU2j5SWVXMoAQFaTSKIKZkkkXpMBzFQ8jjlEZRHoRBGE3HMT1Px0OCPFSAAOVcoARNkYdk+hOo0WAGiskBJcZwGDDpswwlSK8ExQpqecJQPghQuFguUIIKZn7KtLe4DL2zT0xks/fM/Eumz7oRpAKUIMobbUBh/athGa6V/L160VZdE2r35xzA4Axy0nCD1h6iCtylb1kF2pCqRoloOPcQJylwl81j3kuiS5SgCYmDdAwQxMNpGE2DLEoneRiPYErOx1FKptMxjePJ2J52/BaYEhqMUWtyOFoPuft8hRwUCAoaJT8eEanZd1C6rduBNCMPpVzSxRe79y1waEucE67BQ1QKoyTnoFBiVAMeWjBhC7wty8nEN64ZRtlkFObBBEcZEBwPwwlOaRTgySSbDOPxJD4PCFrfrT2ka6A2pSmhC5nnn5lr03MPGahqTgzYxX5jHygPCqfjAAchDsLbIEjc339Qz7m9E2ECVJcgVdgfCKdEM4oLZmYFM7Z3MWlMOSuNqXXi+wUznKSDDJay1gMDHBayGmSAPIRrqc19zrh98A0sjBS+kZJrP7DLBlTFhAv0viam7FvtlqwlCKNWtWTCltNvtPJTJuzRmAlm32Fs/zWKIw89F5l/QSloHQe+rLUPtMauYXwa+brRgI02g6L1qmDJdBvDKzgBby7zINXCNaWvZaMooDvPkQyxvfLjSUp6d7zzEKtIYRtIEUFLUJ0pbgzjOlkGg3AQRbs20wZqWyLcneMhBe1PC8W1bZRtPq9Aa1LAtY0xOZLwA+aSM7pCCXrXlnMpeVPBlWyEafulsj83TrcX34XYXYAJA0oQjncma+/J7n5ajjtol49tLmV14nC3emwrVZD9eW779uQerIEqMNrvA2XnyNbH2oEwjHC0vvOQTQITxVum9rNmj9kC8IGwUyg6DrLwOZA5qwMG+3jjshjocgMyhxXkIVLXfOVeGqIKMBrbGGa+aoRPpchZ4XcLgxWpuLN04jAjdT1YNCkoAQa0pduKCFJAhtPV7APwynNn9OjYJdNmcXaAT71TQjObhjQOonAKWZiGWQxxmo+mw3BKwmF8Psmn5+Eoj0dTB9ue5Hl/iAjGGtSSUcCEUtsByEPta6vpuzFgNnJva9JoyGZOL3pZ2juiM9T6QaoMb0oIhvotIZXAK3+z7owpoaC6VB+w7ZbbsHSJa8WWxMACVsd27FttanxYtfz+48uZDMTSEUSHgvcfb+9vbj7cv/lydXUxf2uphPDGkZguz7A800YxakqpzQJWtARqETIjlEJtsIAHB47O2YfLz1f3324uv84vri43rt4pWVlBa9H4CVZfIbfP9oIJarSlgD452ET04SprW0fCW2lfr3vn2aA/3vZifrEq9Jxcfr+c397f/vv60nHAU6ZvG48UIIwl+snAotwZXTecb3n4Yz6X5lqBBteKne8NOp/Q/2m23kG2N7i0z3/w3X7/7Cex47+/TOh/RUv+DzlQoBtuTsS9MThB6Bv9d/UWzLw5MmtR5KFqkTF1huuz58YHXb5+UOjiwxlTbnRihLP/gnptx/yDamJd9JJG6/4EuT9X/rVxrOaEAt60+6sy+yqo3Nl+EjKDG+BAjVSO5vakVWqUIM5E89vO+sp+DSizJZE5LF3xNdBGMbOyfQm/jXWjGnGhv2n7hRMGQWA/FFr9u2jlb94bag7KhZG8k8T2mpDnQO3X9Vze0BKyxglSS8q9b0/tGNjutNdBl78awnuE213lbpPH1nfLVlektpGf+lp0djhLCUCcZqN0GPW/L3ecd4DVvE5QdtIyP6QfTi6gqs3KkcDjeg97O0QcNDkNohdt2eLmRdY7zn2R+RZWz2zYDcuHZ9+judybnNfrO6u+SBtiGoee9f8CAAD//62o6ubAEQAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-squid-proxy
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:14Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 8a40b7ee04591390d3b8f146e9a273ba997c4487
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"6d861f08-3dea-4518-bc30-88d85478420a"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"GIT_SSH_COMMAND"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_USERNAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:secretKeyRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/fleet/helm"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"helm-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:14Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:07:35Z'
              name: cluster-squid-proxy-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-squid-proxy
                  uid: 6d861f08-3dea-4518-bc30-88d85478420a
              resourceVersion: '169913580'
              uid: 35603df6-af72-45e0-b090-2a43f7124e4c
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 35603df6-af72-45e0-b090-2a43f7124e4c
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 35603df6-af72-45e0-b090-2a43f7124e4c
                    job-name: cluster-squid-proxy-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=cluster-squid-proxy,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=6'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--password-file'
                        - /etc/fleet/helm/password
                        - '--cacerts-file'
                        - /etc/fleet/helm/cacerts
                        - '--ssh-privatekey-file'
                        - /etc/fleet/helm/ssh-privatekey
                        - '--'
                        - cluster-squid-proxy
                        - /squid-proxy
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: GIT_SSH_COMMAND
                          value: ssh -o stricthostkeychecking=accept-new
                        - name: HELM_USERNAME
                          valueFrom:
                            secretKeyRef:
                              key: username
                              name: helmrepo-auth
                              optional: true
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /etc/fleet/helm
                          name: helm-secret
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-squid-proxy
                  serviceAccountName: git-cluster-squid-proxy
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-squid-proxy-config-dbaee4bd6b53
                      name: config
                    - name: helm-secret
                      secret:
                        defaultMode: 420
                        secretName: helmrepo-auth
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:07:35Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:07:35Z'
                  lastTransitionTime: '2024-01-08T09:07:35Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:14Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          ecp-bmc-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '14'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RX227bOBD9lYDPoiVZ8k2AH4I2vWwbN2jSArtFEFDUSGZNkVqScuoN/O8LUrItJ7aTYPuyQNFY4nA4nJlzzugBlWBIRgxByQMiQkhDDJNC20cqy5IZlKAgjYYRxJSMsygdhMN4AHmc0ijKgzAIo8kopv10NCDIQwUIUM4FSlAYIw/J9CdQo8H0FJM9Sozh0GPSZxlKkF4JihVU8oShvBegcLFcoAQVzPyUaWdxGXpnn5jIpu+Z+UOmz7oRpASUIKAVTkv6InNdEWr35BzA4AxyUnOD1h6iCtxNb1gJ2pCyQomoOfcQJylwl8Jj3udEz21icxpPgkEUR/3RZAxhOBiPgn7cH6dZHEbjMAYyGWXDzJ62HzmmhAYj1Lw+HKGH3B2+Qg4KBAWNkh8PiFTsOyjdFOhAOpGHUi7p4ovd+xY4NLXMCdfgISqFUZJzUCgxqgYPLZiwhdym/0mCa1foaESybAAED+OY4DgKCU4zGON+OgjTQT9K42CE1rdrD+kKqE1dSuhC5vln5nqw7yEDZcWJAbvY7doDZUDhZBTgIMRBeBMEifv3F+o4t/cgTIBqk6IK+wPhlGhGccHMtGDG9iUmtZlP58ZUOvH9ghlO0l4GS1npngEOC1n2MkAewpXU5i5n3D74BhZGCt9IybUf2GUDqmTCBXpXETPvWu2WrCUIo1aVZMKW0K+18lMm7NGYCWbfYWz/qxVHHnouMv+cUtA6DnxZad9WxTWJTyNf1xqw0aZXNF4VLJluYngF4PHmMvdSLVwj+lrWigK69RyDENsfPx6lpHPHWw+xkhS2aRQRdA6qNcW1YVwny6AX9qJo11raQGVLhNtzPKSg+Wkht7aNss3nJWhNCriyMSZHEn7AXHJGVyhB75pyLiWvS7iUtTBNv5T258bp9uK7ENsLMGFACcLxzmTtPdrdTctxB83ysc1zWZ443K0e20oVZE/Pbd6e3IM1UAVG+12g7BzZ+lg7EIYRjta3HrJJYKJ4y9R+1uwxWwDeE3YKRcdBFj4HMmd1wGAfb1wWPT3fgMxhBXmIVBVfuZeGqAKMxjaGqa9q4VMpclb47UJvRUruLJ0ITElV9RZ1CkqAAW0ptiSCFJDhdDX9ALz03BkdCnbJtFmcthzqnRKR6SSkcRCFE8jCNMxiiNN8OBmEExIO4v44n/TDYR4PJw6qHTnznogFxhrUklHAhFJbdeSh5rXV6J2uT8PIva5IrSGbOmHopGbvjNZQ63upMrypGxjqNyw0B176m3VnTAkF1eb3gG273MSl57hSbEkMLGB1bMe+1aawO3ny7Z+XUxWIpWOAts3ff7y5u77+cPfmy+Xl+eyt5QrCa8dSen6G5Zk2ilEzl9osYEXnQC0EpoRSqAwWcO+6v3X24eLz5d2364uvs/PLi42rd0qWVrEauH2C1VfI7bO9TIJqbTHeRb+9dBePsrJFI7zR6/W6c54N+uNNJ+YX037HycX3i9nN3c2fVxcO5I+pvOkyUoAwlsnHPQtjZ3RVc74l2o/5TJorBRpc37W+N/B7xO+n6XiHyZ2j9vkJoe33yn4SW4L7zYz9W8TiP/C9Al1zcyLujcEJxt4IvKu3YObNkWHKwqtcZEyd4ersuflAz18/CbTx4YwpNxsxwtk/oF7bMf+jmlgXnaTRqjsi7g+Ov23eqjihgDft/qrMvgoqt7afhMzgGjhQI5WjuT3tlBoliDNR/7LDvLLjvjJbEpnB0hVfA60VMyvbl/DLWDeqFuf6m7afLWEQBPZLoBG780brZrupZScNRvJW85qrQZ4Dtd/DM3lN55DVTnAaIu58OGrHunanvQK6+LsmvEOybfi3m9w1vhuGuiSVjfbxp55bw1lKAOI0G6aDqPNB2OG2A+zltcKxk5DZIZ1wsgBlZVYO7A/rPYztOv+gyWmwvGjLFh8vst5x64vMt/B5ZsNu6j08xB7N5d4IvF7fWpVF2hBTO5Ss/w0AAP//vOcySWYRAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: ecp-bmc
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-08T09:06:24Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 0fc49053432798e1158702428bd413814ea97d6d
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"37add5ea-644a-431a-bde8-2b51b523b407"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"GIT_SSH_COMMAND"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_USERNAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:secretKeyRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/fleet/helm"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"helm-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:24Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:58Z'
              name: ecp-bmc-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: ecp-bmc
                  uid: 37add5ea-644a-431a-bde8-2b51b523b407
              resourceVersion: '169913023'
              uid: 80826365-d8f9-4abc-8eff-f9bd481f9610
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 80826365-d8f9-4abc-8eff-f9bd481f9610
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 80826365-d8f9-4abc-8eff-f9bd481f9610
                    job-name: ecp-bmc-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=ecp-bmc,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=13'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--password-file'
                        - /etc/fleet/helm/password
                        - '--cacerts-file'
                        - /etc/fleet/helm/cacerts
                        - '--ssh-privatekey-file'
                        - /etc/fleet/helm/ssh-privatekey
                        - '--'
                        - ecp-bmc
                        - /bmc
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: GIT_SSH_COMMAND
                          value: ssh -o stricthostkeychecking=accept-new
                        - name: HELM_USERNAME
                          valueFrom:
                            secretKeyRef:
                              key: username
                              name: helmrepo-auth
                              optional: true
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /etc/fleet/helm
                          name: helm-secret
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-ecp-bmc
                  serviceAccountName: git-ecp-bmc
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: ecp-bmc-config-dbaee4bd6b53
                      name: config
                    - name: helm-secret
                      secret:
                        defaultMode: 420
                        secretName: helmrepo-auth
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:58Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:58Z'
                  lastTransitionTime: '2024-01-08T09:06:58Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:24Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          raif-testing-longhorn-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '4'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RX3W7bOhJ+lYDXoiVHdpwI8EVwmtN227hBkxbYLYKAokYSa4rUkiOn3sDvviAl23JqOwm2NwsYhiQOh/P3fTN8IhUgyxgykjwRppRGhkIr6165riqBJCFRGp/FMOLsPIvT8fBsNIZ8lPI4zqNhNIwvJiN+mk7GjASkAAXGqyAJGZGA6PQncLSAAyP0gDNECQOhQ5GRhNil4tRArY8I6kcFhhaLOUlIIfCnTnuLi2Fw8kmobPpe4D90+qIaxSogCTFM5BTBolAFlVoVpTbqVZttzbjTkEsApBnkrJFIVgHhBrzbd6ICi6yqSaIaKQMiWQrSx/OQ9pLZkiQkHWYX58BjxkbpxRByzk/jOGaQZfl4wk/Ho3Q0OcvGuTvtmB+UMx5NSCu0396AeI++Qg4GFAdLkh9PhNXiOxjb5m5PqElAUqn5/Ivb+w4ktGnOmbQQEK4VGi0lGJKgaSAgc6FckjepeSH4jS+J9Nz5eTqmk2yc09H5OdCL8TmnZ/yCXYzGMAE+JKv7VUBsDdyFNWV8rvP8s/DFehoQhKqWDMEt9st7T4rI8GIS0WhIo+FdFCX+9y/SU+68YkKB6UJkCvdAaMqs4LQQOC0EugqmrMFyWiLWNgnDQqBk6SCDha7tAEHCXFeDDEhAaK0tPuRCupcQYY5ahai1tGHklhFMJZQ39KFmWPaltktOEhSaZa2FcgkNG2vCVCh3NBVKuG+Uur/GSBKQlywLLzkHa0dRqGsbAq+pL5mQx6FtLFC0OCharQYWwrY2vIEZ6NqZR23mvixDqxvDgdwHnmqYq5Yfz0LS8/E+IKJiRVtCipdgOlHaoJA2WUSD4SCOt4VmEWqXItqdExAD7aOD48oVyiae12AtK+DG2ZgcCPgecS0FX5KE/N2mc6FlU8G1bhS29VK5x7XSjeNbEzsHhEIwikm6FVkFz3b3w3JYQbt8aHOpqyOH+9VDW7mB7Pdz269H91AL3ADasA+UrSKXHycHCgWTZHUfEBcEoYp3wuxGzR2zAeAjE8dQdBhkw5dA5qX2COziTepiYMs1yDxWSEBYXcul/4jMFICWOhumoWlUyLXKRRF2C4Mlq6SX9A1i6jX06NaHysVoeogvaa8hBb8RPKUWzEJwoIxzlxsSkPaz67nbNj2N/deaNRayqefynv07R3SC1j5qk9F1cAF52FJFCbIK1+temDMOpgvCHtluuTXLlrQ2YsEQ5rA8tGNXah39QxEKN8+vpxhQC4/crjzff7x7uL398PDXl+vry9k7h3EmG88utjyh+sSiERxLbXEOS14Cd6U7ZZxDjVTBo6/aTtmHq8/XD99ur77OLq+v1qr+NrpynaaFySdYfoXcvTv/EtJYh80+al0c+jjStUsjk23XXa165zmjP971bH41XfeUXH2/mt093P3z5sqD8zkFt3XHClDoGPh84ODnhW4aKTcE+TGfabwxYMFXYqd7DZtnvHycRrdY2irq3n8jot3y2Q1iR0x/mGn/CMn/DzxtwDYSj9i9FjjCtOvG7POtBP51YAjiJCDVPBPmhNYnL/V1W769g3f20UwYP9MIJsV/wLy1Yv6PcuJU9ILG6/5otzvw/bE5qZaMA12X+5si+yao3Lt6UjqDW5DAURtPc00KRgGC9RctSxIihWp+uSHcuDHd4IZEZrDwybfAGyNw6eoSfqFTYxp1ab9Zd/kYRlHkJvi2/V223W+2nTYOdQvUsuuJraOQ58Dd9Xemb3kJWeM7UkvLvauh9RzsdjqHyNW/GyZ7lNs5c7+OZKu75atrVjvbj1/mvCQdRmmcnp6dxSlkvQtgj/f2MFvQNZVte5nt6yG+ZUBV49ITwdNqB39bVOwVOQ6kV23ZYOdV0lvefZX4BlovbNhOsvsH04Ox3BlrV6t714GJRYaNR9DqvwEAAP//u3aV4GMRAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: raif-testing-longhorn
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-10T10:11:21Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: b1d98ec3aa4b91efcc2333aeddf57c254b476d5f
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"b84b4725-7d5f-488e-958c-6c9a945e7ec1"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"GIT_SSH_COMMAND"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_USERNAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:secretKeyRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/fleet/helm"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"helm-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-10T10:11:21Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-10T10:12:23Z'
              name: raif-testing-longhorn-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: raif-testing-longhorn
                  uid: b84b4725-7d5f-488e-958c-6c9a945e7ec1
              resourceVersion: '172278517'
              uid: 63941cf3-9a43-4ba1-92a2-1c1ff4f69f52
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 63941cf3-9a43-4ba1-92a2-1c1ff4f69f52
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 63941cf3-9a43-4ba1-92a2-1c1ff4f69f52
                    job-name: raif-testing-longhorn-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - '--label=fleet.cattle.io/repo-name=raif-testing-longhorn'
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=3'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--password-file'
                        - /etc/fleet/helm/password
                        - '--cacerts-file'
                        - /etc/fleet/helm/cacerts
                        - '--ssh-privatekey-file'
                        - /etc/fleet/helm/ssh-privatekey
                        - '--'
                        - raif-testing-longhorn
                        - /longhorn
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: GIT_SSH_COMMAND
                          value: ssh -o stricthostkeychecking=accept-new
                        - name: HELM_USERNAME
                          valueFrom:
                            secretKeyRef:
                              key: username
                              name: helmrepo-auth
                              optional: true
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /etc/fleet/helm
                          name: helm-secret
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-raif-testing-longhorn
                  serviceAccountName: git-raif-testing-longhorn
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: raif-testing-longhorn-config-10b3b2663bed
                      name: config
                    - name: helm-secret
                      secret:
                        defaultMode: 420
                        secretName: helmrepo-auth
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-10T10:12:23Z'
              conditions:
                - lastProbeTime: '2024-01-10T10:12:23Z'
                  lastTransitionTime: '2024-01-10T10:12:23Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-10T10:11:21Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          raif-testing-monitoring-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '7'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RX3W7bOhJ+lYDXoiXHjp0I8EXQpj/bxg2atMBuEQQUNZJYU6SWHDn1CfzuB6RkS0ltJ8HpzQGCwBSHw/n7vhk+kBKQpQwZiR8IU0ojQ6GVdUuuy1IgiUmUjCYjGHN2mo6Sk+FkfALZOOGjURYNo+HobDrmx8n0hJGA5KDAeBUkJlMSEJ38BI4WcGCEHnCGKGEgdChSEhO7UpwaqPQBQX2vwNB8uSAxyQX+1ElvczkMjj4Jlc7eC/yPTp5Vo1gJJCaGiYwiWBQqp6VWArURKn/RcVsx7nRkEgBpChmrJZJ1QLgB7/iNKMEiKysSq1rKgEiWgPQR3ae9YLYgMUmyBKITAJaOR2nGpiMYcZ4kaTaZZuMTfnYWDY+nw8mxu+2wJ5QzHrnw77c4IN6nr5CBAcXBkvjHA2GV+A7GNvnbEW4SkERqvvjizr4FCU2qMyYtBIRrhUZLCYbEaGoIyEIol+htep5NQO0LIzk9PT6D6YSOeTah4yxK6VmSnlA4mZ4lpwmwUzYm69t1QGwF3IU2YXyhs+yz8CV7HBCEspIMwW32i3xHmsjwbBrRaEij4U0Uxf7vf6Sn3PnFhALTBsnk7gehCbOC01zgLBfo6piyGotZgVjZOAxzgZIlgxSWurIDBAkLXQ5SIAGhlbZ4lwnpFiHCArUKUWtpw8htI5hSKG/oXcWw6Et1W04SFJpVpYVyKQ1ra8JEKHc1FUq4b5S6f7WRJCDPWRaecw7WjqNQVzYEXlFfNCEfhba2QNHiIG+0GlgK29jwCn6gG2futVn4wgytrg0Hcht4wmGuXn48CUnPx9uAiJLlTREpXoBpRWmNQtp4GQ2Gg9GoKzWLULkU0faegBhofjpIrl2hbON5CdayHK6cjfGegO8Q11LwFYnJuyadSy3rEi51rbCpl9L93CjdOt6Z2DogFIJRTNJOZB08Od0Py34Fzfa+w4UuD1zud/cd5QbS3+9tvh48Qy1wA2jDPlA6RS4/Tg4UCibJ+jYgLghC5W+FeRw1d80WgPdMHELRfpANnwOZl9oh8BhvUucDW2xA5rFCAsKqSq78R2QmB7TU2TALTa1CrlUm8rDdGKxYKb2kbxIzr6FHuD5ULkaz/YxJe20p+I3kKbVgloIDZZy77JCANJ9d7+3a9ezYf61YbSGdeT7vefDoilbQ2nttUroJLyAPG7IoQJbhZt8Lc8bBtGHYIdtuN2bZglZGLBnCAlb7TjyW2sR/f4zC3urlRANq6fHbFun7jzd319cf7t58ubw8n791SGey9hxjiyOqjywawbHQFhew4gVwV8AzxjlUSBXc+9ptlX24+Hx59+364uv8/PJio+qd0aXrNw1YPsHqK2Ru7XyMSW0dQvvYfQImXblMMtk03/W6d52z+eNNz+QXc3ZPycX3i/nN3c1/ry48Qp/ycFN6LAeFjoZPBw6DXuiqlnLLkh+zucYrAxZ8Mba6N9h5Qs6HubQDVKeoXf/GRo8rqJN3q5ad/jDd/hGm/wdkbcDWEg/YvRE4QLeb7uzzrQS+2TMJcRKQcpEKc0Sro+eauy1e38Zb+2gqjB9sBJPiLzCvrZh/UU6cil7QeNWf7x5PfX9sWKok40A35f6qyL4KKreunpRO4RokcNTGs1ydgFGAYP2Ly5KYSKHqX24SN25WN7glkTksffIt8NoIXLm6hF/o1Jhandtv1r1BhlEUuTG+6YDnTQOcdyPH/oaBWraNsXEVsgy4ewvP9TUvIK19W2p4ufdKtJ6F3UnnErn4f81kj3Rbd243sWx0N4x1ySpn/XPvOi9Lh1EySo4nk1ECae812OO+HewWtH2l6zDzHW3Edw0oK1x5LnhYP4JgB4ydIoex9KIjW/i8SLqj3heJb9H1zIFuot09oL40lLeuCROLDGsPovXfAQAA//+tsPS9cREAAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: raif-testing-monitoring
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-10T10:10:05Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: bfbe05eead43dfa73e3ccbbdf67f45c990127162
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"b8829e76-4cf6-4f0d-9bd5-e579b8bea8a4"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"GIT_SSH_COMMAND"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_USERNAME"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:secretKeyRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/fleet/helm"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"helm-secret"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-10T10:10:05Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-10T10:10:16Z'
              name: raif-testing-monitoring-cac07
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: raif-testing-monitoring
                  uid: b8829e76-4cf6-4f0d-9bd5-e579b8bea8a4
              resourceVersion: '172276473'
              uid: 053cfb40-1d15-449f-ad68-77160f3452e2
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 053cfb40-1d15-449f-ad68-77160f3452e2
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 053cfb40-1d15-449f-ad68-77160f3452e2
                    job-name: raif-testing-monitoring-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=fleet.cattle.io/repo-name=raif-testing-monitoring
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=2'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--password-file'
                        - /etc/fleet/helm/password
                        - '--cacerts-file'
                        - /etc/fleet/helm/cacerts
                        - '--ssh-privatekey-file'
                        - /etc/fleet/helm/ssh-privatekey
                        - '--'
                        - raif-testing-monitoring
                        - /monitoring
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: GIT_SSH_COMMAND
                          value: ssh -o stricthostkeychecking=accept-new
                        - name: HELM_USERNAME
                          valueFrom:
                            secretKeyRef:
                              key: username
                              name: gitrepo-auth
                              optional: true
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /etc/fleet/helm
                          name: helm-secret
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-raif-testing-monitoring
                  serviceAccountName: git-raif-testing-monitoring
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: raif-testing-monitoring-config-10b3b2663bed
                      name: config
                    - name: helm-secret
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-10T10:10:16Z'
              conditions:
                - lastProbeTime: '2024-01-10T10:10:16Z'
                  lastTransitionTime: '2024-01-10T10:10:16Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-10T10:10:05Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          testing-dominic-0949b:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: c3447fbcce6e21894c9b34b179c740f89be6c584
                generation: '19'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RX3W7buBJ+lWKuRUt2FMcW4IuizTnoOZs02GYL7BZBQVEjmTVFaknKbTbwuy+G8o+S2E6M7c0CQSCLM8P5+eab0QPU6HnBPYfsAbjWxnMvjXb0U5i6lh4yEGdpelHmQuAYR8PJNBXT/CzNhxdTcZEm5WSa41icT1KIoEKNNpiADIZTiMDk31B4h35gpRkI7r3CgTSxLCADd68Fs9iYI4Lmu0bLquUCMqik/2by3uFyGL35v9TF7L/S/8/kL5rRvEbIwKPzUlesMLXUUrxKzTVckG6pED0rsOSt8rCKQFgMEd/KGp3ndQOZbpWKQPEcVUjlIetz7uaQwXg45aNJjukEJ/l5KsokTadiOkrLZCzOMB0nk/xcnF/QbfsjYMk0nVL4hz2NIMTyK5ZoUQt0kH15AN7Iz2hdV7A96YUIcmXE4iPpvkeFXW1LrhxGIIz21iiFFjJvW4xgITUVdluOgwlvAwCKUZIn48mI8WSUsnSYF4yflRcsn6aFmJyPpuMRwupuFYFrUFAqcy4Wpix/kQGbowg81o3iHumwj+Y9ZYHh9CJhyZAlw9skycLfH9AzTvFwqdGuk2MregCWcycFq6SfFZQCZDUy3vr5bO5947I4rqRXPB8UuDSNG3hUuDD1oECIgDXG+a+lVPQj9rjwRsfeGOXihI492lrq4OrXhvt5X2p3RJKovb1vjNRUzLh1Ns6lpquZ1JLeMUb/Wqsggpc8i98Kgc6lSVzgMq6lE7EyupobqwdVZ83iUrru7hMogG2C+G7sIkAxdqa1AuEuCpzCCSFfnqSiF9tdBLLmFcHGci3maNeirPVSuWyZDIaDs7MduJzHhorD1vdEYLF7pOZbEUS2ebxC53iFN+RjdiDRe8SNkuIeMvhPV8alUW2NV6bVvkNKTY8bo9vA+/gPAUjt0Wqu2E5kFT3R7qflsIHu+JDy3NRHLg+nh1SFxeL5vd3bozrMobDoXfy4RXamqEIkidpLrmB1FwGlQerqvbSP80YXbZvvO5fH+udwew1faq8gtUfgcacpUw3cfNNegVQhAt406j689NxW6B0jH2axbXUsjC5lFa8PBve8VkEyDIRZsNAjWZp/YcLMnrMk642e6BmhM+bQLqVAxoWgukAE3Wuaq7tZPAuTmLGGtw6LWSDvnuuP7tjE+dyXwQkNjHoZ+mJd+ncfr64+3FLjcNXiKSsFIWFt5PLz5fXt19vfby4Ddp5yRJccXqH2RBGTAaEjCN20Sm07+EN5bfyNRYchXWvbm6o+IY7jfb4r9c7Q+vfP7eqfQij/gBMsulb5I35vBI709GYIhNJp6d8dGLWEtHpRSPuGNW9emiFufvq0WPvHCmnD3JRcyb/Qnlr8f1FNyEQvaaLprw+Pl4qfNpMbxQWyDdxPyuxJrXJHeNKmwE+oUHhjaY1btDlajR5dWOEdZKCkbn/QqmdpGbR+ywfXuAzFdyhaK/094RJ/eDJjW/3W/eZouR0mSUJ7Yke3bzu2vd7Nteds6Y1as28XIpYlCvqaujafxByLNgysBZIPvc8Nitg0pEmhwOWfLVc93lyHcbfJYWe7I50r3pDXBz4QOhmGSTlK+CTBYT7ufU70aAvrxt+H7n1YPWqaHZT3ihxH/6tUtoB/lfSOLF8lvu2HFxR2q87+vSVAxWJASPe0xsGTvWe1ulutCDOe+zYAf/V3AAAA//87mzjVbw8AAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: testing-dominic
                objectset.rio.cattle.io/owner-namespace: fleet-default
              creationTimestamp: '2024-01-11T12:48:22Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 619a28be48e8b54cf0449c924f06c3e4608b5c57
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"d20b0682-a024-41bd-a3f7-b94dc852962e"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/delete-me-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-11T12:48:22Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-11T12:48:36Z'
              name: testing-dominic-0949b
              namespace: fleet-default
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: testing-dominic
                  uid: d20b0682-a024-41bd-a3f7-b94dc852962e
              resourceVersion: '173630606'
              uid: 929284d2-61e2-400a-a59f-6f9781721263
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 929284d2-61e2-400a-a59f-6f9781721263
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 929284d2-61e2-400a-a59f-6f9781721263
                    job-name: testing-dominic-0949b
                spec:
                  containers:
                    - args:
                        - >-
                          -basic-git=delete-me-auth=https://gitlab.devops.telekom.de
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/dev/misc/longhorn.git
                        - '-revision'
                        - c3447fbcce6e21894c9b34b179c740f89be6c584
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/delete-me-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - '--label=fleet.cattle.io/repo-name=testing-dominic'
                        - '--namespace'
                        - fleet-default
                        - '--service-account'
                        - ''
                        - '--sync-generation=19'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - testing-dominic
                        - .
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: c3447fbcce6e21894c9b34b179c740f89be6c584
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-testing-dominic
                  serviceAccountName: git-testing-dominic
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: testing-dominic-config-e0f20a80e1b6
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: delete-me-auth
            status:
              completionTime: '2024-01-11T12:48:36Z'
              conditions:
                - lastProbeTime: '2024-01-11T12:48:36Z'
                  lastTransitionTime: '2024-01-11T12:48:36Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-11T12:48:22Z'
              succeeded: 1
              uncountedTerminatedPods: {}
    fleet-local:
      batch/v1:
        Job:
          cluster-config-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '20'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXbW/bNhD+KwU/i5Zk+VWAPxRtNnRb0mDNCmxFUFDUSWZNkRp5cusF/u8DKdtSXNtJsH4ZEMQSeTzey3PPnR5IBchyhoykD4QppZGh0Mq6V66rSiBJSZQlkwRGnM3yJBvHk9EYilHGk6SI4ihO5tMRH2bTMSMBKUGB8SpISoYRCYjOvgBHCzgwQg84Q5QwEDoUOUmJ3ShODdT6gqD+qsDQcr0iKSkFftFZb3MdB69+FSpf/CzwF509qUaxCkhKuGwsgqFcq0KUzzpla8bd0UICIJWaM0m2AeEGvLt3ogKLrKpJqhopAyJZBtLH8ZzuJbNLkpJRPmW8mI35ZAxxwSZJMsvH8yiZzItsOErmLJ7kkyhJ3G0nzaec8WhK2t1TZgbEu/E7FGBAcbAk/fRAWC0+grFtqk4ElgQkk5qv3ruzb0FCm9WCSQsB4Vqh0VKCISmaBgKyEsql9JCIc6FufOZZPGZQJAmdz/MZHeU5oyznUzoGNuERj7IIgGzvtwGxNXAXxozxlS6K34QH5TAgCFUtGYLb7MP4REpIPJ9GNIppFN9FUer//iI95c4dJhSYXWxM6R4IzZgVnJYCF6VAB1TKGlwuloi1TcOwFChZNshhrWs7QJCw0tUgBxIQWmuLnwsh3UuIsEKtQtRa2tCVBUUwlVDe0M81w2VfqttykqDQbGotFDqZxpowE8pdTYUSbo1S968xLtNPWRa+5hysHUWhrm0IvKYeKSFPQttYoGhxULZaDayFbW14AQPQvTNftVl5NIZWN4YDuQ88pTAHk09HIen5eB8QUbHSYccwxZdgdqK0QSFtuo4G8SBJOoRZhNqliO7uCYiB9tGV39YB5RDPa7CWlXDrbEzPBPyEuJaCb0hKfmrTudayqeBaNwpbvFTuca/04Hhn4s4BoRCMYpJ2Itvg6HQ/LOcVtNvnDi91deFyv3vuKDeQf39vu3rxDLXADaAN+4XSKXL5cXKgUDjmvA+IC4JQ5VthHkfNXXMowK9MXKqi80UWP1VkXuqEwON6k7oc2OW+yHytkICwupYbv4jMlICWOhsWoWlU2BJduNsYbFglvaRvCAuvocezPlQuRovHRBlc6hqL4Ww4S4p8OIR5VuRRPE1gzqIiz6YRmxVFEhejYRRPc39x1xaCo7ZAqQWzFhwo49wllgSkXXZ9uevlizjxyzVrLOQL3wJ63j+6YR+q73g/PFp5Ph2AWvsq20Hpzfvr63d3rgyZbOAl84lD1k7J1cerm7vPd3/eXnksHjNOGydWgkJHOLOBQ5sXum2kPPDBu+JG460BCz52O917lBzR0GXW6KDT653t+4/liB9CT/+BYQzYRuIFu/cCFzhi31J86pTAN2faNycBqVa5MK9o/eqpjmSXL+89O/toLozvxoJJ8Q+Ylyb/f5QTp6IXNF73h5LHo8oP6/C1ZBzoHu4viuyLSuXe4UnpHD6ABI7auNFw1WRgFCBY/0FgSUqkUM03Nz4aN2AaPPDBDax98i3wxgjcOFzCN3RqTKNe2z+sm5fjKIrc7Nly7+uWem96ffKYOlHLHRO3HkJRAHdfZjf6A19C3vj+twJnQu/bxTmsa3fSeUKu/m486+9pc+fF/T6Ere720mtWO6PPfG+0PyM+52zE46iAov9x0pEWVDVufO0+bB+VTAfkkyKXsf+sIwe4P0u6o8pniR+q4YkD3dh0egryQDHg8dE+dSjoZqjt9n67dXhBho0H/fbfAAAA//849kc+uA8AAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: cluster-config
                objectset.rio.cattle.io/owner-namespace: fleet-local
              creationTimestamp: '2024-01-08T09:06:16Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 4d7acf85c65e1fa6338d590369fb2439a16d6033
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"a15aef33-99d8-4dda-adc7-5ea6c0c0b0ee"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:16Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:29Z'
              name: cluster-config-cac07
              namespace: fleet-local
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: cluster-config
                  uid: a15aef33-99d8-4dda-adc7-5ea6c0c0b0ee
              resourceVersion: '169912510'
              uid: c0d93797-8aff-46c3-80de-d8387ffe7200
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: c0d93797-8aff-46c3-80de-d8387ffe7200
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: c0d93797-8aff-46c3-80de-d8387ffe7200
                    job-name: cluster-config-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=fleet.cattle.io/repo-name=cluster-config,objectset.rio.cattle.io/hash=28283fd22e9bfd0173e9a0fdb70a8ff31f42017d
                        - '--namespace'
                        - fleet-local
                        - '--service-account'
                        - ''
                        - '--sync-generation=13'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - cluster-config
                        - /cluster-config
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-cluster-config
                  serviceAccountName: git-cluster-config
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: cluster-config-config-4c9ca4c10fef
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:29Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:29Z'
                  lastTransitionTime: '2024-01-08T09:06:29Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:16Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          local-logging-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '5'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXX2/bNhD/KgWfRUuyZCcW4IeizbZuSxqsWYGtCAqKOsmsKVIjKbde4O8+HGVbimc7CdaXAUEgi3fH+/O7350eSA2OFcwxkj0QppR2zAmtLP7kuq6FIxmJ8mSaQMrZZZHkk3iaTqBMc54kZRRHcTK7SPk4v5gwEpAKFBhvgmRkQgKi8y/AnQU3MkKPOHNOwkjoUBQkI3atODXQ6DOC+qsCQ6vVkmSkEu6LzgeHqzh49YtQxfxH4X7W+ZNmFKuBZERqziSVuqqEqp6lZBvGUbOUAI56fbIJCDfgg70TNVjH6oZkqpUyIJLlIH0WT9leMLsgGYmj6SyBi/EkLceTcT4pWJxOL3jKJkXCcyhgGsXlBcvxtmPeU854dEG6w2NeBsRH8RuUYEBxsCT79EBYIz6CsV2djqSVBCSXmi/fo+5bkNCVtGTSQkC4Vs5oKcGQzJkWArIUCgu6L8OJRLe+7BNgSZleJnQyK6c0naUJZeNpShOW8+RyEk3z6YRs7jcBsQ1wTGLO+FKX5a/CA3IcEAd1I5kDPBxC+EhBSDy7iGgU0yi+i6LM//1JBsYxGiYUmG1qTIUPhObMCk4r4eaVcIhSylq3mC+ca2wWhpVwkuWjAla6sSMHEpa6HhVAAkIbbd3nUkj8ETpYOq1Cp7W0YYTHDkwtlHf0c8PcYijVH6EkKGfWjRbKoUxrTZgLhVdToQS+oxT/tQYL/ZRn4WvOwdo0CnVjQ+AN9UAJeRLa1gJ11o2qzqqBlbCdDy/ofroL5qs2Sw/G0OrWcCD3gacThij5dJCSQYz3ARE1qxA6him+ALMVpa0T0maraBSPkqQHmHXQYIno9p6AGOgesfk2CJR9Pq/BWlbBLfqYnUj4EXEtBV+TjPzQlXOlZVvDtW6V6/BS4+PO6D7w3sVtAEI5MIpJ2otsggPtYVpOG+iOTykvdH3mcn96SpUbKP59b/f2rA61wA04Gw4bpTeE9UE5UE4gb94HBJMgVPVWmMdZw2v2DfiViXNddLrJ4qeazEsdEXjcb1JXI7vYNZnvFRIQ1jRy7V86ZipwlqIP89C0KuRalaIKtwejNaull/TjYM6aZrRsczAKHFgk2popVkFB8/X8J5B14O8YELFPJmZx/ohJg3NDZT6LeRol8QyKOI+LFNK8nM4m8YzFk3R8Wc7G8bRMpzPfsIPhFhyMDUotmJXgQBnnWHkSkO41Tu1+0M8T/7ZhrYVi7ifEIDuPLtil8nAshLvH59MEqJXvvi3E3ry/vn53h+3JZAsv2VkQcVsjVx+vbu4+3/1xe+UxeshEXXpYBcohEV2OEIVe6LaVcs8T78ob7W4NWPAp29reoeeAns6zSQ+p3tD29/flju9CW/+BeQzYVrozfu8EznDHbtT40inh3pwY65wEpF4WwryizaunJpVdvHwmbf2jhTB+Sgsmxd9gXlr8/1FN0MQgabwZLiuPV5jvNvkbyTjQHdxflNkXtco94knpAj6ABO60wZXxMYtri6uuUO03XCsNLp7G7fngBla++BZ4a4RbIy7hm0MzplWv7e8W1+g4iiLcSTvKfd0x7k0/Pw8p02m55d8uQChL4PixdqM/8AUUrR+LS0APBh80GK9uUBMDIVd/tZ7rd6y5DeJ+l8HOdkc516xBn49/hHgJmvIZZymPoxLKwQfLgLKgbtzad+7D5lHD9DA+KnIe+c9S2YP9WdI9UT5LfN8LTyj0y9Tx3cjDxIBHR/fUY6DfrDab+80G0eKYaz3kN/8EAAD//7AAPTTKDwAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: local-logging
                objectset.rio.cattle.io/owner-namespace: fleet-local
              creationTimestamp: '2024-01-08T09:06:14Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 10693e7254f252b5da1467c4a5d3cbede601f7ab
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"5ea3f483-59f6-4943-a264-3abc38506b65"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:14Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:30Z'
              name: local-logging-cac07
              namespace: fleet-local
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: local-logging
                  uid: 5ea3f483-59f6-4943-a264-3abc38506b65
              resourceVersion: '169912538'
              uid: ff459f8e-76c5-4eeb-a918-f2ac666532d7
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: ff459f8e-76c5-4eeb-a918-f2ac666532d7
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: ff459f8e-76c5-4eeb-a918-f2ac666532d7
                    job-name: local-logging-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=local-logging,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-local
                        - '--service-account'
                        - ''
                        - '--sync-generation=3'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - local-logging
                        - /logging
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-local-logging
                  serviceAccountName: git-local-logging
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: local-logging-config-4c9ca4c10fef
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:30Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:30Z'
                  lastTransitionTime: '2024-01-08T09:06:30Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:14Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          local-monitoring-cac07:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                commit: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                generation: '3'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/9RXX2/bNhD/KgWfRUuyZMcW4IeizbZuSxqsWYGtCAqKOsmsKVIjKbde4O8+HGVbSmY7CdaXAUFgiXfH+/O7353uSQ2OFcwxkt0TppR2zAmtLD5yXdfCkYxEeTJNIOVsViT5JJ6mEyjTnCdJGcVRnMwvUj7OLyaMBKQCBcabIBlJSEB0/gW4s+BGRugRZ85JGAkdioJkxG4UpwYafUZQf1VgaLVekYxUwn3R+eBwHQevfhGqWPwo3M86f9KMYjWQjEjNmaS1VsJpI1T1LD3bMI7KpQRw1Jsg24BwAz7eW1GDdaxuSKZaKQMiWQ7SJ/KU7SWzS5KRCzYfp8UMxsm04DDP42LCk5SPJymblhcwL3KI+ZRxvO1EAJQzHl2Q7vyYowHxgfwGJRhQHCzJPt0T1oiPYGxXrSPJJQHJpear96j7FiR0hS2ZtBAQrpUzWkowJHOmhYCshMKyHopxOt2tr/84iWfJxSSm09l4TtM8yeksmY7pLB3HbMyTZBZPyPZuGxDbAMdU5oyvdFn+KjwyxwFxUDeSOcDDIZaPlIXE84uIRjGN4tsoyvzfn2RgHANiQoHZZcdU+IPQnFnBaSXcohIO4UpZ65aLpXONzcKwEk6yfFTAWjd25EDCStejAkhAaKOt+1wKiQ+hg5XTKnRaSxtGeOzA1EJ5Rz83zC2HUv0RSoJyZtNooRzKtNaEuVB4NRVK4DtK8V9rsNZPeRa+5hysTaNQNzYE3lCPlZAnoW0tUGfdqOqsGlgL2/nwAhqg+2C+arPyeAytbg0Hchd4XmEIlE+PUjKI8S4gomYVoscwxZdgdqK0dULabB2N4lGS9BizDhosEd3dExAD3U9swS0C5ZDPK7CWVXCDPmYnEn5EXEvBNyQjP3TlXGvZ1nClW+U6vNT4c2/0EHjv4i4AoRwYxSTtRbbBI+1hWk4b6I5PKS91feZyf3pKlRso/n1v9/asDrXADTgbDhulN4T1QTlQTiB73gUEkyBU9VaYh1nDaw4N+JWJc110usnip5rMSx0ReNhvUlcju9w3me8VEhDWNHLjXzpmKnCWog+L0LQq5FqVogp3B6MNq6WX9ENhwZpmtGpzMAocWOTamilWQUHzzeInkHXg7xhwsU8mZnHxmEyDc9NlMY95GiXxHIo4j4sU0ryczifxnMWTdDwr5+N4WqbTue/ZwZQLHg0PSi2YteBAGedYfBKQ7jVO8H7oL3w9aMNaC8XCz4lBgh5csM/mkeEQDp6ezxeg1r4Nd1h78/7q6t0t9imTLbxki0Ho7Yxcfry8vv18+8fNpQfrY0rqksQqUA4ZaTbC8L3QTSvlgTDeldfa3Riw4BO3s72H0SOeOk8rPbZ6Q7vn70si34W//gMFGbCtdGf83gucIZH9zPGlU8K9OTHfOQlIvSqEeUWbV0+NLLt8+XDa+UcLYfy4FkyKv8G8tPj/o5qgiUHSeDPcWh7uMt9tBWgk40D3cH9RZl/UKneIJ6UL+AASuNMGd8eHdK4trr1Ctd9wvzS4gRp34INrWPviW+CtEW6DuIRvDs2YVr22v1tcqeMoinA57Yj3dce71/0gPUKcTssdEXcxQlkCxy+4a/2BL6Fo/YhcATox+MTBkHWDmhgLufyr9aS/J85dHHf7JHa2O9a5Yg26ffKzxAvRlM85S3kclVAOvmIGxAV14za+f++3D9qmB/NRkfP4f5bKAfLPku7p8lnih454QqHfrY6vSh4sBjxGul89EvpFa7u9224RM4651gN/+08AAAD//0KVtyXiDwAA
                objectset.rio.cattle.io/id: sync-repo
                objectset.rio.cattle.io/owner-gvk: gitjob.cattle.io/v1, Kind=GitJob
                objectset.rio.cattle.io/owner-name: local-monitoring
                objectset.rio.cattle.io/owner-namespace: fleet-local
              creationTimestamp: '2024-01-08T09:06:20Z'
              generation: 1
              labels:
                objectset.rio.cattle.io/hash: 7a924d8e236dce9b1d5c34c254a6f7e9dbe1c6ac
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:commit: {}
                        f:generation: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"23183751-6829-4b3b-8362-8421a2c33815"}: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:creationTimestamp: {}
                        f:spec:
                          f:containers:
                            k:{"name":"fleet"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"COMMIT"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"EVENT_TYPE"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/run/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                            k:{"name":"step-git-source"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/creds"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/creds-secrets/gitrepo-auth"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                              f:workingDir: {}
                          f:dnsPolicy: {}
                          f:initContainers:
                            .: {}
                            k:{"name":"place-tools"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/tools"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                            k:{"name":"working-dir-initializer"}:
                              .: {}
                              f:args: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tekton/home"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/tekton/results"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/workspace"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext:
                            .: {}
                            f:runAsUser: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"git-credential"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                            k:{"name":"tekton-creds"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-home"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-results"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-tools"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"tekton-internal-workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                            k:{"name":"workspace"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: gitjob
                  operation: Update
                  time: '2024-01-08T09:06:20Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2024-01-08T09:06:32Z'
              name: local-monitoring-cac07
              namespace: fleet-local
              ownerReferences:
                - apiVersion: gitjob.cattle.io/v1
                  blockOwnerDeletion: false
                  controller: true
                  kind: GitJob
                  name: local-monitoring
                  uid: 23183751-6829-4b3b-8362-8421a2c33815
              resourceVersion: '169912615'
              uid: 57c4f35c-56e5-47e3-8801-0121ca8f0487
            spec:
              backoffLimit: 2
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 57c4f35c-56e5-47e3-8801-0121ca8f0487
              suspend: false
              template:
                metadata:
                  creationTimestamp: '1970-01-01T00:00:00Z'
                  labels:
                    controller-uid: 57c4f35c-56e5-47e3-8801-0121ca8f0487
                    job-name: local-monitoring-cac07
                spec:
                  containers:
                    - args:
                        - '-basic-git=gitrepo-auth=https://gitlab.devops.telekom.de'
                        - '-post_file'
                        - /tekton/tools/0
                        - '-termination_path'
                        - /tekton/termination
                        - '-entrypoint'
                        - /usr/bin/git-init
                        - '--'
                        - '-url'
                        - >-
                          https://gitlab.devops.telekom.de/Access40/ops/ecp-fleet/c3/suse-tst.git
                        - '-revision'
                        - 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - '-path'
                        - /workspace/source
                      command:
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: step-git-source
                      resources: {}
                      terminationMessagePath: /tekton/termination
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/creds
                          name: tekton-creds
                        - mountPath: /tekton/creds-secrets/gitrepo-auth
                          name: git-credential
                      workingDir: /workspace
                    - args:
                        - '-wait_file'
                        - /tekton/tools/0
                        - '-post_file'
                        - /tekton/tools/1
                        - '-termination_path'
                        - /tekton/tools/termination_path
                        - '-entrypoint'
                        - log.sh
                        - '--'
                        - fleet
                        - apply
                        - '--targets-file=/run/config/targets.yaml'
                        - >-
                          --label=app.kubernetes.io/managed-by=Helm,fleet.cattle.io/repo-name=local-monitoring,objectset.rio.cattle.io/hash=91c40319ed1b1d4e4bf69519a15428f9216f469a
                        - '--namespace'
                        - fleet-local
                        - '--service-account'
                        - ''
                        - '--sync-generation=0'
                        - '--paused=false'
                        - '--target-namespace'
                        - ''
                        - '--'
                        - local-monitoring
                        - /monitoring
                      command:
                        - /tekton/tools/entrypoint
                      env:
                        - name: COMMIT
                          value: 0b363e4ca8d3b51645ef4bc33f01013974c2b75a
                        - name: EVENT_TYPE
                      image: rancher/fleet-agent:v0.8.0
                      imagePullPolicy: IfNotPresent
                      name: fleet
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /run/config
                          name: config
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                      workingDir: /workspace/source
                  dnsPolicy: ClusterFirst
                  initContainers:
                    - args:
                        - '-c'
                        - mkdir -p /workspace/source
                      command:
                        - sh
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: working-dir-initializer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /workspace
                          name: tekton-internal-workspace
                        - mountPath: /tekton/home
                          name: tekton-internal-home
                        - mountPath: /tekton/results
                          name: tekton-internal-results
                    - command:
                        - cp
                        - /usr/bin/entrypoint
                        - /tekton/tools/entrypoint
                      image: rancher/tekton-utils:v0.1.33
                      imagePullPolicy: IfNotPresent
                      name: place-tools
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tekton/tools
                          name: tekton-internal-tools
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: Never
                  schedulerName: default-scheduler
                  securityContext:
                    runAsUser: 1000
                  serviceAccount: git-local-monitoring
                  serviceAccountName: git-local-monitoring
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - effect: NoSchedule
                      key: cattle.io/os
                      operator: Equal
                      value: linux
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: local-monitoring-config-4c9ca4c10fef
                      name: config
                    - emptyDir: {}
                      name: workspace
                    - emptyDir: {}
                      name: tekton-internal-workspace
                    - emptyDir: {}
                      name: tekton-internal-home
                    - emptyDir: {}
                      name: tekton-internal-tools
                    - emptyDir: {}
                      name: tekton-internal-results
                    - emptyDir: {}
                      name: tekton-creds
                    - name: git-credential
                      secret:
                        defaultMode: 420
                        secretName: gitrepo-auth
            status:
              completionTime: '2024-01-08T09:06:32Z'
              conditions:
                - lastProbeTime: '2024-01-08T09:06:32Z'
                  lastTransitionTime: '2024-01-08T09:06:32Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2024-01-08T09:06:20Z'
              succeeded: 1
              uncountedTerminatedPods: {}
    kube-system:
      apps/v1:
        Deployment:
          coredns:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '4'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xVQW/bOBP9Kx/mLMVW0jaugO/QtbPboq3XqJNeCqOgqZHFNcXhkiMnRqD/vhjJduw2TdrFniyTb4ZvHucN70F58xlDNOQgB+V9HGwySGBtXAE5TNBb2tboGBKokVWhWEF+D8o5YsWGXJS/tPwLNUfks2DoTCtmi2eGBkaSQPLDfbp1GNLVZg05rC/i0c4mS/733rji/2+KgtyzKZyqEXLQFLBw8afg0SstMetmiWncRsYa2gSsWqLtilqPYqq830P6vPIZHDJGybY7dkwBJ9P5E8dWKlaQw1Lj+eji/PVolGWXLy7U8GL0Si1fZsPyvHx1ieXli/MXQ/3yUoh8V9ITpKNHLZQDbozc5VsTmcL2g6kNQz5MIKJFzRQEVCvW1YenymwlJQfFuNp2acla41Y3vlCMfYq7G6c2yli1tAh51ibAWy/MPp1gZR1rb/dxRy30pNDtUVGaHCvjMETIv9yDCiv5gFSTKyGBAbIe7FQayE2UxiIsEjC1WgmjoJyuMAxqE4LA0h14/5tnZ9nwTLq+i5g11s7IGr2FHN6VU+JZwNhbwJoNOoxxFmjZFVQqY5uA11XAWJEtIL9IoGL2fyDLvlcs9z6oUFmuIAFPgSEfDUdyKbrC7o7fXl/PRCrjDBtlJ2jVdo6aXBEhfzVMwGMwVByWMglutMYYj07OEmBTIzX8AHysj4RCL+VB2VnH6uXFAb1DBmLSZCGHm4kwfCYkZe1Pw67Hj4a9zo4Ca+RgdHwkcJFAQFWYfyW5RG4fFM9G2c8q/r3g57+gd8BITdDYtbYVB8a+9WsK0lLZ5fCjgQ74d4Ox39W+ka3hsO4G7Q7aI8UKqJtgeDsmx3jXlamspdtZMBtjcYVXUSvbzWPIS2UjJqCVV0tjDZueiioKsc306vrrb++mk6/zq0+f342vxClFIC97ylpYtL3ofzq7/UTEvxuLu0GTc2iwTWBDtqnxIzVu10e1fM52uh/ZEY66z5VmlfaR8HDCPuePcwx0E5nqo1Td//SZjAtpnsLFg5MnWKrGiokdFTg/moenI50i5GCNa+7kjnww1AlvVYzTnkCvRqptExlDqoNho5UFuaawMRrfaC3FTL81HpPFsH80v9zDGoXYeBffPXSxKyEB8oIUfnB1Z6RJRCMsS9QMOUxprissGiuV92mkqjSQxbPTesR5gWzqrXL4n2auldT/eMqFVOvJ0mo793I1Y3Lyoph9y3TTf/7Lr1Kt7uZrvO3NtzvgfcfylFtFkbt+SeC2QnfjomITS9M/VzChKfGhUGHb99FhLJZm9VF5IWIY65Pr2r8wyX7SHFZEyB40pQLfkihxQD0syXHfDOX2B0bZjc4HNqdx6cEb5KWtlD149CmztIu2bdt/AgAA//+BDg8J/AkAAA
                objectset.rio.cattle.io/id: ''
                objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
                objectset.rio.cattle.io/owner-name: coredns
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T14:26:43Z'
              generation: 4
              labels:
                k8s-app: kube-dns
                kubernetes.io/name: CoreDNS
                objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:k8s-app: {}
                        f:kubernetes.io/name: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:k8s-app: {}
                        f:spec:
                          f:containers:
                            k:{"name":"coredns"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":53,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":53,"protocol":"UDP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9153,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:add: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/coredns"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/etc/coredns/custom"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:topologySpreadConstraints:
                            .: {}
                            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"DoNotSchedule"}:
                              .: {}
                              f:labelSelector: {}
                              f:maxSkew: {}
                              f:topologyKey: {}
                              f:whenUnsatisfiable: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config-volume"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:items: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"custom-config-volume"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                                f:optional: {}
                              f:name: {}
                  manager: deploy@rancher2-tst
                  operation: Update
                  time: '2023-07-26T15:37:09Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:34Z'
              name: coredns
              namespace: kube-system
              resourceVersion: '135398443'
              uid: 040fe095-46cb-4b28-801e-b4d57ee01c60
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 0
              selector:
                matchLabels:
                  k8s-app: kube-dns
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 1
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    k8s-app: kube-dns
                spec:
                  containers:
                    - args:
                        - '-conf'
                        - /etc/coredns/Corefile
                      image: rancher/mirrored-coredns-coredns:1.10.1
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /health
                          port: 8080
                          scheme: HTTP
                        initialDelaySeconds: 60
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: coredns
                      ports:
                        - containerPort: 53
                          name: dns
                          protocol: UDP
                        - containerPort: 53
                          name: dns-tcp
                          protocol: TCP
                        - containerPort: 9153
                          name: metrics
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /ready
                          port: 8181
                          scheme: HTTP
                        periodSeconds: 2
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          memory: 170Mi
                        requests:
                          cpu: 100m
                          memory: 70Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          add:
                            - NET_BIND_SERVICE
                          drop:
                            - all
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/coredns
                          name: config-volume
                          readOnly: true
                        - mountPath: /etc/coredns/custom
                          name: custom-config-volume
                          readOnly: true
                  dnsPolicy: Default
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: coredns
                  serviceAccountName: coredns
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - key: CriticalAddonsOnly
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                  topologySpreadConstraints:
                    - labelSelector:
                        matchLabels:
                          k8s-app: kube-dns
                      maxSkew: 1
                      topologyKey: kubernetes.io/hostname
                      whenUnsatisfiable: DoNotSchedule
                  volumes:
                    - configMap:
                        defaultMode: 420
                        items:
                          - key: Corefile
                            path: Corefile
                          - key: NodeHosts
                            path: NodeHosts
                        name: coredns
                      name: config-volume
                    - configMap:
                        defaultMode: 420
                        name: coredns-custom
                        optional: true
                      name: custom-config-volume
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T14:26:54Z'
                  lastUpdateTime: '2023-07-26T14:26:54Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
                - lastTransitionTime: '2023-07-26T14:26:54Z'
                  lastUpdateTime: '2023-07-26T15:37:20Z'
                  message: ReplicaSet "coredns-75f7bbf9cd" has successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
              observedGeneration: 4
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          local-path-provisioner:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '4'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xU3W7yRhB9lWqubQMfBCFLvUBJqlZNCEqU3kSoGtZj2LDeXe0Obizkd68Gm/yoIWmlXnl/Zs6emXPGB0Cv/6AQtbOQA3ofB/UIEthpW0AOV+SNayqyDAlUxFggI+QHQGsdI2tno2zd+pkUR+IsaJcpZDaUaTfQAgLJ2Xv3l6WQbuod5LAbx3c39Sj56Xdti5/nReHstxAWK4IcjFNo0sgu4Ib+VVL0qCRzt19TGpvIVEGbgME1mS9L22LcQg6j2bgcX6jpRVmu1Xg4nUyH43IyLkcXs2ExU9MZ/ihwXUwE9ANJj7xNfXC1luZTgO7+DJ/oSQmbQF38r1qKbG50pRnyYQKRDCl2QYIqZLW9ea0AvT//aivgHJBp0xwfcMZou3n0BTJ1YC+PFmvUBteGIB+1CXDjheP9h1g5p8qbU947t5j/wKUvVDnLqC2FCPmTbKsKxZJP59sXGYP4NE2Vs6XeQAIDYjXodv0ne47OwioBsvURuRdleXf152J+e/2wnF9eQwI1mj39ElwlZEpNprin8nW9RBbxTzVmb8q1bbtKQFfivxwCWrWlMPicc14Ps2H2YwJ9wnJvzNIZrRrI4bdy4XgZKHbD9513amf2Fd26veWuY5Use57v2/CG1R2kXSa0KyHug3ZBc3NpMMZFF9e5MLWuoFQFzVqhkXZTqLWiuVLy0uIrfmkfm2IXDAmwMxROP5CnA+xIir7s4Y9DH++saWSIvUSKteH6RUeO0CYHoLIkxZDDwj2oLRV7IwPfwRypBmcokzEKlpiizKyYKjiTeoOW/lfkCiMfdfgEcnVS52RlafstenHTP2Xtvduel6lt278DAAD//8i6p1C4BQAA
                objectset.rio.cattle.io/id: ''
                objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
                objectset.rio.cattle.io/owner-name: local-storage
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T14:26:43Z'
              generation: 4
              labels:
                objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                        f:spec:
                          f:containers:
                            k:{"name":"local-path-provisioner"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"POD_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/config/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config-volume"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                  manager: deploy@rancher2-tst
                  operation: Update
                  time: '2023-07-26T15:33:10Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:34Z'
              name: local-path-provisioner
              namespace: kube-system
              resourceVersion: '135398436'
              uid: ab949995-3f32-4a58-b694-a87bbabba2ff
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 0
              selector:
                matchLabels:
                  app: local-path-provisioner
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 1
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: local-path-provisioner
                spec:
                  containers:
                    - command:
                        - local-path-provisioner
                        - start
                        - '--config'
                        - /etc/config/config.json
                      env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/local-path-provisioner:v0.0.24
                      imagePullPolicy: IfNotPresent
                      name: local-path-provisioner
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/config/
                          name: config-volume
                  dnsPolicy: ClusterFirst
                  priorityClassName: system-node-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: local-path-provisioner-service-account
                  serviceAccountName: local-path-provisioner-service-account
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - key: CriticalAddonsOnly
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: local-path-config
                      name: config-volume
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T15:37:10Z'
                  lastUpdateTime: '2023-07-26T15:37:10Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
                - lastTransitionTime: '2023-07-26T14:26:54Z'
                  lastUpdateTime: '2023-07-26T15:37:14Z'
                  message: >-
                    ReplicaSet "local-path-provisioner-54c8dd85f4" has
                    successfully progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
              observedGeneration: 4
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
          metrics-server:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                deployment.kubernetes.io/revision: '4'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xV3W4bNxN9lQ9zvWvv6sdOFtCFIOuLgjqOECktisAQKO5IYsUlWc6sYtXQuxezaztKHcVp0BthRR4enjkznLkHFcyvGMl4BwWoEOh8l0MCW+NKKOAKg/X7Ch1DAhWyKhUrKO5BOedZsfGO5K9f/oGaCfksGn+mFbPFM+PPjZBAcnLff3YY0/VuCwVsu3S0s8uT//1iXDkYlqV3L1I4VSEUIjEaTSlh3GFMy2P5LxNQUFpYtvUSU9oTYwWHBKxaom3C3L6iVIXw7KLvsG8UbaAAzDPs9PqYd7F3oS47ff26LMuyt3qNy0739SrvXV5e9lal3PfNWKBdPyGRAmoRGHFnJJcTQ+zj/tpUhqHIEiC0qNlHAVWK9eb65aAOQsxRMa73Dbm31rj1x1Aqxpbo7qNTO2WsWlqEIj8kwPsg+j58hZV1rIJ9PHdUSD9g7klLjgLX3rEyDiNB8ekeVFzLB6SpxshpaeLgnKsACaQpoa4jpsFHHuRZp581q2KoRU5DxBXGiGWqyjIiUSoR0eCtY4xO2bfTZHz39DnxxI22Y4qaMHW+xJRYcU3NTQ2glZ9GJG9reTuDvE/NDltKtQkbjCnVhpEG8+vZYjy6mozldzZc/PZ2PlkMx7NFp3+xeDN6t5hNht1XveQL7sMPof7BlndePeI6/YtTbCdRR2yjyXA0GXayxfT99e95N+t/i+wZCG4TMJVaS3ajcnqD8bwyMXrJwNfpLnbZ2cVZFxKwZocOiabRL5uCWilj64jzTUTaeFtC0U1gwxzeIMt+UCyP8FwO/gUJNBkpGoT4T3qDTX1N5vPpTMrKOMNG2Su0aj9D7V1JUFxkCQSMxpdPS7k8rVprJDq6PE+ATYW+5i/A77xrUdOW7VMVTxuBTXU+nXtUG6Jnr72FAuajKRxuE4ioSvNTjsjJ/c9b8tyRzr8wRB5CHTVS27r+rJG4+dahhgLyLKuasVP5uIcCLrN3pm1K8oIN70feMd418Shr/edpNDtjcY1j0so20wmKlbKErUXvnd1/8J7/byw+9M6CYy27tRvSjXey+9XaR8IoiciyQwI7b+sK3/naPeSrks/pg5Vtf3lIFldBug4cbiU/IRrfCLaK6KZFtALaRqGjYaOVFeMx7ozGodbCfXOiZNhbjI/j99M9bFEMGj3QNCOTJFoZTEGQ0vlhfGfE4ENyD7haoZaE3/iZ3mBZW+lhLU0jKXqLZ9LRokNGklEm1Rm9TYNVDv9T5koRt1P0OeXto+9tpFgF3l8ZGWSHb7l9OBz+DgAA//+Ky3kD1QgAAA
                objectset.rio.cattle.io/id: ''
                objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
                objectset.rio.cattle.io/owner-name: metrics-server-deployment
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T14:26:44Z'
              generation: 4
              labels:
                k8s-app: metrics-server
                objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:k8s-app: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:progressDeadlineSeconds: {}
                      f:replicas: {}
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:strategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:k8s-app: {}
                          f:name: {}
                        f:spec:
                          f:containers:
                            k:{"name":"metrics-server"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":10250,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tmp-dir"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: deploy@rancher2-tst
                  operation: Update
                  time: '2023-07-26T15:37:10Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        f:deployment.kubernetes.io/revision: {}
                    f:status:
                      f:availableReplicas: {}
                      f:conditions:
                        .: {}
                        k:{"type":"Available"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                        k:{"type":"Progressing"}:
                          .: {}
                          f:lastTransitionTime: {}
                          f:lastUpdateTime: {}
                          f:message: {}
                          f:reason: {}
                          f:status: {}
                          f:type: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                      f:updatedReplicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:43Z'
              name: metrics-server
              namespace: kube-system
              resourceVersion: '135398586'
              uid: b6be5548-3bc8-461d-b62c-22aea523b47c
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 0
              selector:
                matchLabels:
                  k8s-app: metrics-server
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 1
                type: RollingUpdate
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    k8s-app: metrics-server
                  name: metrics-server
                spec:
                  containers:
                    - args:
                        - '--cert-dir=/tmp'
                        - '--secure-port=10250'
                        - >-
                          --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
                        - '--kubelet-use-node-status-port'
                        - '--metric-resolution=15s'
                        - >-
                          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
                      image: rancher/mirrored-metrics-server:v0.6.3
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /livez
                          port: https
                          scheme: HTTPS
                        initialDelaySeconds: 60
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: metrics-server
                      ports:
                        - containerPort: 10250
                          name: https
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /readyz
                          port: https
                          scheme: HTTPS
                        periodSeconds: 2
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        requests:
                          cpu: 100m
                          memory: 70Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                        runAsNonRoot: true
                        runAsUser: 1000
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp
                          name: tmp-dir
                  dnsPolicy: ClusterFirst
                  priorityClassName: system-node-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: metrics-server
                  serviceAccountName: metrics-server
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - key: CriticalAddonsOnly
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                  volumes:
                    - emptyDir: {}
                      name: tmp-dir
            status:
              availableReplicas: 1
              conditions:
                - lastTransitionTime: '2023-07-26T15:37:10Z'
                  lastUpdateTime: '2023-07-26T15:37:10Z'
                  message: Deployment has minimum availability.
                  reason: MinimumReplicasAvailable
                  status: 'True'
                  type: Available
                - lastTransitionTime: '2023-07-26T14:26:54Z'
                  lastUpdateTime: '2023-07-26T15:37:27Z'
                  message: >-
                    ReplicaSet "metrics-server-6979879bc9" has successfully
                    progressed.
                  reason: NewReplicaSetAvailable
                  status: 'True'
                  type: Progressing
              observedGeneration: 4
              readyReplicas: 1
              replicas: 1
              updatedReplicas: 1
        ReplicaSet:
          coredns-75f7bbf9cd:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '4'
                deployment.kubernetes.io/revision-history: '2'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xVQW/bOBP9Kx/mLMVW0jaugO/QtbPboq3XqJNeCqOgqZHFNcXhkiMnRqD/vhjJduw2TdrFniyTb4ZvHucN70F58xlDNOQgB+V9HGwySGBtXAE5TNBb2tboGBKokVWhWEF+D8o5YsWGXJS/tPwLNUfks2DoTCtmi2eGBkaSQPLDfbp1GNLVZg05rC/i0c4mS/733rji/2+KgtyzKZyqEXLQFLBw8afg0SstMetmiWncRsYa2gSsWqLtilqPYqq830P6vPIZHDJGybY7dkwBJ9P5E8dWKlaQw1Lj+eji/PVolGWXLy7U8GL0Si1fZsPyvHx1ieXli/MXQ/3yUoh8V9ITpKNHLZQDbozc5VsTmcL2g6kNQz5MIKJFzRQEVCvW1YenymwlJQfFuNp2acla41Y3vlCMfYq7G6c2yli1tAh51ibAWy/MPp1gZR1rb/dxRy30pNDtUVGaHCvjMETIv9yDCiv5gFSTKyGBAbIe7FQayE2UxiIsEjC1WgmjoJyuMAxqE4LA0h14/5tnZ9nwTLq+i5g11s7IGr2FHN6VU+JZwNhbwJoNOoxxFmjZFVQqY5uA11XAWJEtIL9IoGL2fyDLvlcs9z6oUFmuIAFPgSEfDUdyKbrC7o7fXl/PRCrjDBtlJ2jVdo6aXBEhfzVMwGMwVByWMglutMYYj07OEmBTIzX8AHysj4RCL+VB2VnH6uXFAb1DBmLSZCGHm4kwfCYkZe1Pw67Hj4a9zo4Ca+RgdHwkcJFAQFWYfyW5RG4fFM9G2c8q/r3g57+gd8BITdDYtbYVB8a+9WsK0lLZ5fCjgQ74d4Ox39W+ka3hsO4G7Q7aI8UKqJtgeDsmx3jXlamspdtZMBtjcYVXUSvbzWPIS2UjJqCVV0tjDZueiioKsc306vrrb++mk6/zq0+f342vxClFIC97ylpYtL3ofzq7/UTEvxuLu0GTc2iwTWBDtqnxIzVu10e1fM52uh/ZEY66z5VmlfaR8HDCPuePcwx0E5nqo1Td//SZjAtpnsLFg5MnWKrGiokdFTg/moenI50i5GCNa+7kjnww1AlvVYzTnkCvRqptExlDqoNho5UFuaawMRrfaC3FTL81HpPFsH80v9zDGoXYeBffPXSxKyEB8oIUfnB1Z6RJRCMsS9QMOUxprissGiuV92mkqjSQxbPTesR5gWzqrXL4n2auldT/eMqFVOvJ0mo793I1Y3Lyoph9y3TTf/7Lr1Kt7uZrvO3NtzvgfcfylFtFkbt+SeC2QnfjomITS9M/VzChKfGhUGHb99FhLJZm9VF5IWIY65Pr2r8wyX7SHFZEyB40pQLfkihxQD0syXHfDOX2B0bZjc4HNqdx6cEb5KWtlD149CmztIu2bdt/AgAA//+BDg8J/AkAAA
                objectset.rio.cattle.io/id: ''
                objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
                objectset.rio.cattle.io/owner-name: coredns
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T15:32:59Z'
              generation: 3
              labels:
                k8s-app: kube-dns
                pod-template-hash: 75f7bbf9cd
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:deployment.kubernetes.io/revision-history: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:k8s-app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"040fe095-46cb-4b28-801e-b4d57ee01c60"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:k8s-app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"coredns"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":53,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":53,"protocol":"UDP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                                k:{"containerPort":9153,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:limits:
                                  .: {}
                                  f:memory: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:capabilities:
                                  .: {}
                                  f:add: {}
                                  f:drop: {}
                                f:readOnlyRootFilesystem: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/coredns"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                                k:{"mountPath":"/etc/coredns/custom"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                  f:readOnly: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:topologySpreadConstraints:
                            .: {}
                            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"DoNotSchedule"}:
                              .: {}
                              f:labelSelector: {}
                              f:maxSkew: {}
                              f:topologyKey: {}
                              f:whenUnsatisfiable: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config-volume"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:items: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"custom-config-volume"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                                f:optional: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T15:37:09Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:34Z'
              name: coredns-75f7bbf9cd
              namespace: kube-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: coredns
                  uid: 040fe095-46cb-4b28-801e-b4d57ee01c60
              resourceVersion: '135398442'
              uid: e7a4bc4f-d44b-4101-9c78-6050640d65b6
            spec:
              replicas: 1
              selector:
                matchLabels:
                  k8s-app: kube-dns
                  pod-template-hash: 75f7bbf9cd
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    k8s-app: kube-dns
                    pod-template-hash: 75f7bbf9cd
                spec:
                  containers:
                    - args:
                        - '-conf'
                        - /etc/coredns/Corefile
                      image: rancher/mirrored-coredns-coredns:1.10.1
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /health
                          port: 8080
                          scheme: HTTP
                        initialDelaySeconds: 60
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: coredns
                      ports:
                        - containerPort: 53
                          name: dns
                          protocol: UDP
                        - containerPort: 53
                          name: dns-tcp
                          protocol: TCP
                        - containerPort: 9153
                          name: metrics
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /ready
                          port: 8181
                          scheme: HTTP
                        periodSeconds: 2
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          memory: 170Mi
                        requests:
                          cpu: 100m
                          memory: 70Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          add:
                            - NET_BIND_SERVICE
                          drop:
                            - all
                        readOnlyRootFilesystem: true
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/coredns
                          name: config-volume
                          readOnly: true
                        - mountPath: /etc/coredns/custom
                          name: custom-config-volume
                          readOnly: true
                  dnsPolicy: Default
                  nodeSelector:
                    kubernetes.io/os: linux
                  priorityClassName: system-cluster-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: coredns
                  serviceAccountName: coredns
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - key: CriticalAddonsOnly
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                  topologySpreadConstraints:
                    - labelSelector:
                        matchLabels:
                          k8s-app: kube-dns
                      maxSkew: 1
                      topologyKey: kubernetes.io/hostname
                      whenUnsatisfiable: DoNotSchedule
                  volumes:
                    - configMap:
                        defaultMode: 420
                        items:
                          - key: Corefile
                            path: Corefile
                          - key: NodeHosts
                            path: NodeHosts
                        name: coredns
                      name: config-volume
                    - configMap:
                        defaultMode: 420
                        name: coredns-custom
                        optional: true
                      name: custom-config-volume
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 3
              readyReplicas: 1
              replicas: 1
          local-path-provisioner-54c8dd85f4:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '4'
                deployment.kubernetes.io/revision-history: '2'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xU3W7yRhB9lWqubQMfBCFLvUBJqlZNCEqU3kSoGtZj2LDeXe0Obizkd68Gm/yoIWmlXnl/Zs6emXPGB0Cv/6AQtbOQA3ofB/UIEthpW0AOV+SNayqyDAlUxFggI+QHQGsdI2tno2zd+pkUR+IsaJcpZDaUaTfQAgLJ2Xv3l6WQbuod5LAbx3c39Sj56Xdti5/nReHstxAWK4IcjFNo0sgu4Ib+VVL0qCRzt19TGpvIVEGbgME1mS9L22LcQg6j2bgcX6jpRVmu1Xg4nUyH43IyLkcXs2ExU9MZ/ihwXUwE9ANJj7xNfXC1luZTgO7+DJ/oSQmbQF38r1qKbG50pRnyYQKRDCl2QYIqZLW9ea0AvT//aivgHJBp0xwfcMZou3n0BTJ1YC+PFmvUBteGIB+1CXDjheP9h1g5p8qbU947t5j/wKUvVDnLqC2FCPmTbKsKxZJP59sXGYP4NE2Vs6XeQAIDYjXodv0ne47OwioBsvURuRdleXf152J+e/2wnF9eQwI1mj39ElwlZEpNprin8nW9RBbxTzVmb8q1bbtKQFfivxwCWrWlMPicc14Ps2H2YwJ9wnJvzNIZrRrI4bdy4XgZKHbD9513amf2Fd26veWuY5Use57v2/CG1R2kXSa0KyHug3ZBc3NpMMZFF9e5MLWuoFQFzVqhkXZTqLWiuVLy0uIrfmkfm2IXDAmwMxROP5CnA+xIir7s4Y9DH++saWSIvUSKteH6RUeO0CYHoLIkxZDDwj2oLRV7IwPfwRypBmcokzEKlpiizKyYKjiTeoOW/lfkCiMfdfgEcnVS52RlafstenHTP2Xtvduel6lt278DAAD//8i6p1C4BQAA
                objectset.rio.cattle.io/id: ''
                objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
                objectset.rio.cattle.io/owner-name: local-storage
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T15:32:59Z'
              generation: 3
              labels:
                app: local-path-provisioner
                pod-template-hash: 54c8dd85f4
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:deployment.kubernetes.io/revision-history: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"ab949995-3f32-4a58-b694-a87bbabba2ff"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app: {}
                            f:pod-template-hash: {}
                        f:spec:
                          f:containers:
                            k:{"name":"local-path-provisioner"}:
                              .: {}
                              f:command: {}
                              f:env:
                                .: {}
                                k:{"name":"POD_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:valueFrom:
                                    .: {}
                                    f:fieldRef: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/etc/config/"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"config-volume"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T15:37:09Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:34Z'
              name: local-path-provisioner-54c8dd85f4
              namespace: kube-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: local-path-provisioner
                  uid: ab949995-3f32-4a58-b694-a87bbabba2ff
              resourceVersion: '135398435'
              uid: 4f684322-d892-4c46-b5a8-5327e92a12b1
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: local-path-provisioner
                  pod-template-hash: 54c8dd85f4
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app: local-path-provisioner
                    pod-template-hash: 54c8dd85f4
                spec:
                  containers:
                    - command:
                        - local-path-provisioner
                        - start
                        - '--config'
                        - /etc/config/config.json
                      env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                      image: rancher/local-path-provisioner:v0.0.24
                      imagePullPolicy: IfNotPresent
                      name: local-path-provisioner
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /etc/config/
                          name: config-volume
                  dnsPolicy: ClusterFirst
                  priorityClassName: system-node-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: local-path-provisioner-service-account
                  serviceAccountName: local-path-provisioner-service-account
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - key: CriticalAddonsOnly
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                  volumes:
                    - configMap:
                        defaultMode: 420
                        name: local-path-config
                      name: config-volume
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 3
              readyReplicas: 1
              replicas: 1
          metrics-server-6979879bc9:
            apiVersion: apps/v1
            kind: ReplicaSet
            metadata:
              annotations:
                deployment.kubernetes.io/desired-replicas: '1'
                deployment.kubernetes.io/max-replicas: '2'
                deployment.kubernetes.io/revision: '4'
                deployment.kubernetes.io/revision-history: '2'
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xV3W4bNxN9lQ9zvWvv6sdOFtCFIOuLgjqOECktisAQKO5IYsUlWc6sYtXQuxezaztKHcVp0BthRR4enjkznLkHFcyvGMl4BwWoEOh8l0MCW+NKKOAKg/X7Ch1DAhWyKhUrKO5BOedZsfGO5K9f/oGaCfksGn+mFbPFM+PPjZBAcnLff3YY0/VuCwVsu3S0s8uT//1iXDkYlqV3L1I4VSEUIjEaTSlh3GFMy2P5LxNQUFpYtvUSU9oTYwWHBKxaom3C3L6iVIXw7KLvsG8UbaAAzDPs9PqYd7F3oS47ff26LMuyt3qNy0739SrvXV5e9lal3PfNWKBdPyGRAmoRGHFnJJcTQ+zj/tpUhqHIEiC0qNlHAVWK9eb65aAOQsxRMa73Dbm31rj1x1Aqxpbo7qNTO2WsWlqEIj8kwPsg+j58hZV1rIJ9PHdUSD9g7klLjgLX3rEyDiNB8ekeVFzLB6SpxshpaeLgnKsACaQpoa4jpsFHHuRZp581q2KoRU5DxBXGiGWqyjIiUSoR0eCtY4xO2bfTZHz39DnxxI22Y4qaMHW+xJRYcU3NTQ2glZ9GJG9reTuDvE/NDltKtQkbjCnVhpEG8+vZYjy6mozldzZc/PZ2PlkMx7NFp3+xeDN6t5hNht1XveQL7sMPof7BlndePeI6/YtTbCdRR2yjyXA0GXayxfT99e95N+t/i+wZCG4TMJVaS3ajcnqD8bwyMXrJwNfpLnbZ2cVZFxKwZocOiabRL5uCWilj64jzTUTaeFtC0U1gwxzeIMt+UCyP8FwO/gUJNBkpGoT4T3qDTX1N5vPpTMrKOMNG2Su0aj9D7V1JUFxkCQSMxpdPS7k8rVprJDq6PE+ATYW+5i/A77xrUdOW7VMVTxuBTXU+nXtUG6Jnr72FAuajKRxuE4ioSvNTjsjJ/c9b8tyRzr8wRB5CHTVS27r+rJG4+dahhgLyLKuasVP5uIcCLrN3pm1K8oIN70feMd418Shr/edpNDtjcY1j0so20wmKlbKErUXvnd1/8J7/byw+9M6CYy27tRvSjXey+9XaR8IoiciyQwI7b+sK3/naPeSrks/pg5Vtf3lIFldBug4cbiU/IRrfCLaK6KZFtALaRqGjYaOVFeMx7ozGodbCfXOiZNhbjI/j99M9bFEMGj3QNCOTJFoZTEGQ0vlhfGfE4ENyD7haoZaE3/iZ3mBZW+lhLU0jKXqLZ9LRokNGklEm1Rm9TYNVDv9T5koRt1P0OeXto+9tpFgF3l8ZGWSHb7l9OBz+DgAA//+Ky3kD1QgAAA
                objectset.rio.cattle.io/id: ''
                objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
                objectset.rio.cattle.io/owner-name: metrics-server-deployment
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T15:32:59Z'
              generation: 1
              labels:
                k8s-app: metrics-server
                pod-template-hash: 6979879bc9
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:deployment.kubernetes.io/desired-replicas: {}
                        f:deployment.kubernetes.io/max-replicas: {}
                        f:deployment.kubernetes.io/revision: {}
                        f:deployment.kubernetes.io/revision-history: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:k8s-app: {}
                        f:pod-template-hash: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"b6be5548-3bc8-461d-b62c-22aea523b47c"}: {}
                    f:spec:
                      f:replicas: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:k8s-app: {}
                            f:pod-template-hash: {}
                          f:name: {}
                        f:spec:
                          f:containers:
                            k:{"name":"metrics-server"}:
                              .: {}
                              f:args: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:livenessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:initialDelaySeconds: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:name: {}
                              f:ports:
                                .: {}
                                k:{"containerPort":10250,"protocol":"TCP"}:
                                  .: {}
                                  f:containerPort: {}
                                  f:name: {}
                                  f:protocol: {}
                              f:readinessProbe:
                                .: {}
                                f:failureThreshold: {}
                                f:httpGet:
                                  .: {}
                                  f:path: {}
                                  f:port: {}
                                  f:scheme: {}
                                f:periodSeconds: {}
                                f:successThreshold: {}
                                f:timeoutSeconds: {}
                              f:resources:
                                .: {}
                                f:requests:
                                  .: {}
                                  f:cpu: {}
                                  f:memory: {}
                              f:securityContext:
                                .: {}
                                f:allowPrivilegeEscalation: {}
                                f:readOnlyRootFilesystem: {}
                                f:runAsNonRoot: {}
                                f:runAsUser: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/tmp"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:priorityClassName: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:tolerations: {}
                          f:volumes:
                            .: {}
                            k:{"name":"tmp-dir"}:
                              .: {}
                              f:emptyDir: {}
                              f:name: {}
                  manager: k3s
                  operation: Update
                  time: '2023-07-26T15:37:10Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:availableReplicas: {}
                      f:fullyLabeledReplicas: {}
                      f:observedGeneration: {}
                      f:readyReplicas: {}
                      f:replicas: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-07T07:11:43Z'
              name: metrics-server-6979879bc9
              namespace: kube-system
              ownerReferences:
                - apiVersion: apps/v1
                  blockOwnerDeletion: true
                  controller: true
                  kind: Deployment
                  name: metrics-server
                  uid: b6be5548-3bc8-461d-b62c-22aea523b47c
              resourceVersion: '135398585'
              uid: b5ac7240-4971-42f3-8fd1-79da81121131
            spec:
              replicas: 1
              selector:
                matchLabels:
                  k8s-app: metrics-server
                  pod-template-hash: 6979879bc9
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    k8s-app: metrics-server
                    pod-template-hash: 6979879bc9
                  name: metrics-server
                spec:
                  containers:
                    - args:
                        - '--cert-dir=/tmp'
                        - '--secure-port=10250'
                        - >-
                          --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
                        - '--kubelet-use-node-status-port'
                        - '--metric-resolution=15s'
                        - >-
                          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
                      image: rancher/mirrored-metrics-server:v0.6.3
                      imagePullPolicy: IfNotPresent
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /livez
                          port: https
                          scheme: HTTPS
                        initialDelaySeconds: 60
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      name: metrics-server
                      ports:
                        - containerPort: 10250
                          name: https
                          protocol: TCP
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /readyz
                          port: https
                          scheme: HTTPS
                        periodSeconds: 2
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        requests:
                          cpu: 100m
                          memory: 70Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                        runAsNonRoot: true
                        runAsUser: 1000
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /tmp
                          name: tmp-dir
                  dnsPolicy: ClusterFirst
                  priorityClassName: system-node-critical
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: metrics-server
                  serviceAccountName: metrics-server
                  terminationGracePeriodSeconds: 30
                  tolerations:
                    - key: CriticalAddonsOnly
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/control-plane
                      operator: Exists
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                  volumes:
                    - emptyDir: {}
                      name: tmp-dir
            status:
              availableReplicas: 1
              fullyLabeledReplicas: 1
              observedGeneration: 1
              readyReplicas: 1
              replicas: 1
      batch/v1:
        Job:
          helm-delete-traefik:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xVYY/iNhD9K9VI96khJEBgiXQfAoRCj4UosKtW1QoZZwIujh3ZDu0J8d8rh/Q22163V6nf7Pi9mffGM84VSMmeUWkmBYRwIIaeuhcfHDgzkUEIP8oDOFCgIRkxBMIrECGkIYZJoe1WHn5FajQaVzHpUmIMR5fJLrPsE/KiQ09EmY7CI9NG1URw/pEmfxOoOsfLuWG3ji6+890nJrKPC+TF1Ab91ziCFAghGEUwZ+dvguuSUMs5Vwfs6M/aYAE3B6jCWvqOFagNKUoIRcW5A5wckNeVsHJrr9r9i/L66zfpOBF9ghConw9G+UM2GAyyfIyH/nBMxoOsN/TpwKeE9EdBFmR5ZpU1HutSZ8jRYOc1zzuOdInUyj4QepZ5vmIFMxD6nuc5YLAoOTFoz9+5+3ccS5Gz4+LuZruIesHwYzCa9h8m4/lkMpz04/7UC+YPo3E/nnr9IJiNx0EwHw28SRQMZqN43puNh7PxaP4wG/7v9b+17FMpDGEClYbwlysQdbQLuFcSXhxAcalPmjqvo8cYHLgQXrVb6+Z8QTzH6Xa5Wbc/pXGyae8X8epxP0uXz3HaiqWRKjRt3HQRpbu9TblNomk779vLfEtowU7GlDrsdj9cPz1N4nQd7+LtPkqWtw9dbS+S3muju42PTs93e67/fVXWC+9vor9ibhelP8T/SWX0tFvsk2i73U/TeBavd8totW3RcsI1tgnrzT5JNz/93MK4+kIdl/JKG1Qul5Rwx/fcQc/1XK/rD+tNv9m0Y82j5eopjffJZrWctiMqZEIbwjncXhxgBTnWX4mgJ1TdM2dliapjWyu8eO6D63UOFeNZz+v1vcD3oOEkFeeJ5Ix+hhCW+VqaRKFGYeDNrIIDCrWsFEXbvTcHLpJXBT7KSph7LxZ2mRBjZ6iZqNcYtWpdG3uLax7GBmbb2+a+vVhTQma4RY7USGWb396PEmhQ14+ghhA4E9XvduKUnTNlvljZiDlhvFIIDmhUF0YxotSmXrdeoNen525Ht2en0ez82enhtVk1Ee5/ijuq0xrWekpzdnwkpeWINrox+Ar/mvV64A0xVV3q2x8BAAD//1JAhlj2BgAA
                objectset.rio.cattle.io/id: helm-chart-registration
                objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
                objectset.rio.cattle.io/owner-name: traefik
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-08-14T14:17:15Z'
              generation: 1
              labels:
                helmcharts.helm.cattle.io/chart: traefik
                objectset.rio.cattle.io/hash: c1f47f8d444df9eb369a94d261c41caa375d5dfd
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:helmcharts.helm.cattle.io/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:helmcharts.helm.cattle.io/configHash: {}
                          f:labels:
                            .: {}
                            f:helmcharts.helm.cattle.io/chart: {}
                        f:spec:
                          f:containers:
                            k:{"name":"helm"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"AUTH_PASS_CREDENTIALS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"FAILURE_POLICY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_DRIVER"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_VERSION"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NO_PROXY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"REPO"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"TARGET_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"VERSION"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/chart"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"content"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"values"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm-controller@rancher3-tst
                  operation: Update
                  time: '2023-08-14T14:17:15Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-08-14T14:17:20Z'
              name: helm-delete-traefik
              namespace: kube-system
              resourceVersion: '16440729'
              uid: be500832-c0e3-4c9a-92f1-f925e09c5ae7
            spec:
              backoffLimit: 1000
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: be500832-c0e3-4c9a-92f1-f925e09c5ae7
              suspend: false
              template:
                metadata:
                  annotations:
                    helmcharts.helm.cattle.io/configHash: >-
                      SHA256=57C38B9FBB6B3E3C05F8793EC0355D9955F740BA54D7EF2D96D97F8D678F2B0E
                  creationTimestamp: null
                  labels:
                    controller-uid: be500832-c0e3-4c9a-92f1-f925e09c5ae7
                    helmcharts.helm.cattle.io/chart: traefik
                    job-name: helm-delete-traefik
                spec:
                  containers:
                    - args:
                        - delete
                      env:
                        - name: NAME
                          value: traefik
                        - name: VERSION
                        - name: REPO
                        - name: HELM_DRIVER
                          value: secret
                        - name: CHART_NAMESPACE
                          value: kube-system
                        - name: CHART
                          value: >-
                            https://%{KUBERNETES_API}%/static/charts/traefik-21.2.1+up21.2.0.tgz
                        - name: HELM_VERSION
                        - name: TARGET_NAMESPACE
                          value: kube-system
                        - name: AUTH_PASS_CREDENTIALS
                          value: 'false'
                        - name: NO_PROXY
                          value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
                        - name: FAILURE_POLICY
                          value: reinstall
                      image: rancher/klipper-helm:v0.8.0-build20230510
                      imagePullPolicy: IfNotPresent
                      name: helm
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /config
                          name: values
                        - mountPath: /chart
                          name: content
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: OnFailure
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: helm-traefik
                  serviceAccountName: helm-traefik
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - name: values
                      secret:
                        defaultMode: 420
                        secretName: chart-values-traefik
                    - configMap:
                        defaultMode: 420
                        name: chart-content-traefik
                      name: content
            status:
              completionTime: '2023-08-14T14:17:20Z'
              conditions:
                - lastProbeTime: '2023-08-14T14:17:20Z'
                  lastTransitionTime: '2023-08-14T14:17:20Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2023-08-14T14:17:15Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          helm-delete-traefik-crd:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/7RV34/iNhD+V6qR7qlJyK/dJZHuIeRCocdCFNhVq2qFjBnAxXEi26E9If73yiG9hu11u33oW2zPN/6+8XyTM5CaPaNUrBIQw4ZoehicPLDgyMQWYvix2oAFJWqyJZpAfAYiRKWJZpVQZlltfkWqFWpHssqhRGuODqsGzKAPyEubHojUtsQ9U1q2QLD+EVb9JlDa+9OxQ/eOTp713Wcmth8nyMvUJP3XPIKUCDFoSXDHjjaV23dBVE2owR2bDdrqi9JYwsUCKrGlv2IlKk3KGmLRcG4BJxvkbTUM5Vavcl6xb3ffzeVA1AFiGKIbUkqjoRvQgHpBsCMkGj4EWz9w77bDO3/nB8QLqWHXaW1LvkWOGu3bu95Qpmqkhv6G0GO1281YyTTEnuu6Fmgsa040mvM3+uAN5ZXYsf3kqmg5Sfy7+49ZMHLTMPSj4Tj1Ui+MkvFoHKbDKLofjyI/9B+SLPSy8D6MRlEQpkkY3UWRN3r4X97h0isBrYQmTKBUEP9yBiL35gOuFYUXC1Cc2pOu3vPkMQMLToQ3r1vtYn2Nes6K5XQx728VWb7oryfZ7HH9qZg+Z0Uvn0IqUffj0klSrNbm2mWepP27bx/1FtALO2hdq3gw+HD+/DTKinm2ypbrJJ9ePgyUeVB6rZEa9LTYvuf4jvd9U/ve30h/Q9wqKX7I/hPL5Gk1WefJcrlOi+xTNl9Nk9myB9sRrrAPmC/WebH46edejKNO1HIob5RG6fCKEm55rhP6juu4A+++XQTdop9rnExnT0W2zhezadrPKJEJpQnncHmxgJVk3+4SQQ8oB0fO6hqlbVosPrnO0HHtTcP41neNQT0XOkzecJ5XnNEvEMN0N690LlGh0HDjW7BAoqoaSdF08cWCU8WbEh+rRuhrP5bmMyfaeKlz1l85WtaqFXYb1w3LLsy0uLn78mJEiWqLS+RIdSWNAcz7SIEaVTsUFcTAmWh+N86Txm9Sf5WyEGPCeCMRLFAoT4xiQqm5et6bRrdj6CpJ9T3U8bb+7Pb43H11Wa5/kGuU/cq4rWN3bP9IaoMTfUQn9BbyrTK0A0AT3bRlv/wRAAD//9bQN1kWBwAA
                objectset.rio.cattle.io/id: helm-chart-registration
                objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
                objectset.rio.cattle.io/owner-name: traefik-crd
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-08-14T14:17:18Z'
              generation: 1
              labels:
                helmcharts.helm.cattle.io/chart: traefik-crd
                objectset.rio.cattle.io/hash: 8e04ccc9803c3c133faa9873d2305d852f23a14c
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:helmcharts.helm.cattle.io/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:helmcharts.helm.cattle.io/configHash: {}
                          f:labels:
                            .: {}
                            f:helmcharts.helm.cattle.io/chart: {}
                        f:spec:
                          f:containers:
                            k:{"name":"helm"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"AUTH_PASS_CREDENTIALS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"FAILURE_POLICY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_DRIVER"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_VERSION"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NO_PROXY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"REPO"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"TARGET_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"VERSION"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/chart"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"content"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"values"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm-controller@rancher3-tst
                  operation: Update
                  time: '2023-08-14T14:17:18Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-08-14T14:17:23Z'
              name: helm-delete-traefik-crd
              namespace: kube-system
              resourceVersion: '16440805'
              uid: c534337b-0abc-4cc2-b3a3-3fcee46f2ad8
            spec:
              backoffLimit: 1000
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: c534337b-0abc-4cc2-b3a3-3fcee46f2ad8
              suspend: false
              template:
                metadata:
                  annotations:
                    helmcharts.helm.cattle.io/configHash: >-
                      SHA256=E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
                  creationTimestamp: null
                  labels:
                    controller-uid: c534337b-0abc-4cc2-b3a3-3fcee46f2ad8
                    helmcharts.helm.cattle.io/chart: traefik-crd
                    job-name: helm-delete-traefik-crd
                spec:
                  containers:
                    - args:
                        - delete
                      env:
                        - name: NAME
                          value: traefik-crd
                        - name: VERSION
                        - name: REPO
                        - name: HELM_DRIVER
                          value: secret
                        - name: CHART_NAMESPACE
                          value: kube-system
                        - name: CHART
                          value: >-
                            https://%{KUBERNETES_API}%/static/charts/traefik-crd-21.2.1+up21.2.0.tgz
                        - name: HELM_VERSION
                        - name: TARGET_NAMESPACE
                          value: kube-system
                        - name: AUTH_PASS_CREDENTIALS
                          value: 'false'
                        - name: NO_PROXY
                          value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
                        - name: FAILURE_POLICY
                          value: reinstall
                      image: rancher/klipper-helm:v0.8.0-build20230510
                      imagePullPolicy: IfNotPresent
                      name: helm
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /config
                          name: values
                        - mountPath: /chart
                          name: content
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: OnFailure
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: helm-traefik-crd
                  serviceAccountName: helm-traefik-crd
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - name: values
                      secret:
                        defaultMode: 420
                        secretName: chart-values-traefik-crd
                    - configMap:
                        defaultMode: 420
                        name: chart-content-traefik-crd
                      name: content
            status:
              completionTime: '2023-08-14T14:17:23Z'
              conditions:
                - lastProbeTime: '2023-08-14T14:17:23Z'
                  lastTransitionTime: '2023-08-14T14:17:23Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2023-08-14T14:17:18Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          helm-install-keepalived-ingress-vip:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/7RV74/iNhD9V6qR7lsSkgB3R6T7EEIo9HYBBXbVqlohxxnAXceObCftacX/XjnkrqFdtj+kfrOdmed5z28mL0Aq9ohKMykggpwYeho0ATjwzEQBEfwgc3CgREMKYghEL0CEkIYYJoW2W5n/gtRoNJ5i0qPEGI4ekwNms0/IS5dKYZTkHJVLT0QZV+GRaaNaDHBuIshfBSr32Dx3QL1PTeB895mJ4tMCeZlY0L/FEaREiOAZsSKcNVi4TBwVau02rPpH2boitIWoc3T1F22whLMDVGHLZMdK1IaUFUSi5twBTnLkrUa2+pa69v5EpD39L2WdiD5BBDjOJzl+CP33xYfRaDQ+0DCn/nhSHEaHIihIiMU4nODYFtop0L4JE9oQzt2b975BWFdILauc0Gd5ONyxkhmIAt/3HTBYVpwYtN/fMM0bgkhxYMfFhd12EYfj95/C2XwcjObzaeIPh8ls9jEN42QUTKbpzA/m4WQSxOPhJExG/tSfzZJpEk+Go2k4G//fz3PuqWFdTphApSH6+QWIOtoFdEKDA27PRM6Vpk8OoGjatO6NVvF9Cg40hNdvmPbsfEt4TLPtcr3qH2XpZt3fL9K7+/0sWz6mWQ9aI1Vo+nHJIs52e1vBdhMnV2Vc+eA6oRd2MqbS0WDw7uXzwzTNVuku3e7jzfL8bqCtB+hFVj14nZb7l6JfIbeLs+/Tf1Vl/LBb7DfxdrtPsnSWrnbL+G7bSzsQrrGfsFrvN9n6x596MZ5uqONRXmuDyuOSEu4EvjcKPd/zB8H7djPsNn2seby8e8jS/WZ9t0z6iAq/GuT85AArybE9JYKeUA2eOasqVK51ZdT43kfPd/Oa8SL0w6E/DnzocjY15xvJGf0CESwPK2k2CjUKA1dtDw4o1LJWFK3xzw40ktcl3stamItvS7vcEGPbr2vGPzDaqnVL7Dqum8BdmG0Fe/f5yZISssAtcqRGKtso9n2UQIO6Ha8aIuBM1L/ZZlW2RZX5RmUt5oTxWtmO0agaRjGm1F696g2zm0Pswk73O6uj4Hw1fvTSrTrAyx/qEnUL+GwFuGhzTyoLIfrJHf2b2a/p1E4SQ0zdvsv59wAAAP//T1R/PpcHAAA
                objectset.rio.cattle.io/id: helm-controller-chart-registration
                objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
                objectset.rio.cattle.io/owner-name: keepalived-ingress-vip
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T15:34:22Z'
              generation: 1
              labels:
                helmcharts.helm.cattle.io/chart: keepalived-ingress-vip
                objectset.rio.cattle.io/hash: e5b9be7206d74445fc2bc059df4fd1da2ed529e5
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:helmcharts.helm.cattle.io/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:helmcharts.helm.cattle.io/configHash: {}
                          f:labels:
                            .: {}
                            f:helmcharts.helm.cattle.io/chart: {}
                        f:spec:
                          f:containers:
                            k:{"name":"helm"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"AUTH_PASS_CREDENTIALS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"FAILURE_POLICY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_DRIVER"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_VERSION"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NO_PROXY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"REPO"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"TARGET_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"VERSION"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/chart"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"content"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"values"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm-controller@rancher3-tst
                  operation: Update
                  time: '2023-07-26T15:34:22Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-26T16:05:37Z'
              name: helm-install-keepalived-ingress-vip
              namespace: kube-system
              resourceVersion: '51467'
              uid: 5d440446-46a5-4f47-8889-d4b87c06168c
            spec:
              backoffLimit: 1000
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 5d440446-46a5-4f47-8889-d4b87c06168c
              suspend: false
              template:
                metadata:
                  annotations:
                    helmcharts.helm.cattle.io/configHash: >-
                      SHA256=2DF514FFBC033CDD8E2AC419BED01F2991A5392C40B0DDCBCA934B2D53B61024
                  creationTimestamp: null
                  labels:
                    controller-uid: 5d440446-46a5-4f47-8889-d4b87c06168c
                    helmcharts.helm.cattle.io/chart: keepalived-ingress-vip
                    job-name: helm-install-keepalived-ingress-vip
                spec:
                  containers:
                    - args:
                        - install
                        - '--namespace'
                        - kube-system
                      env:
                        - name: NAME
                          value: keepalived-ingress-vip
                        - name: VERSION
                        - name: REPO
                        - name: HELM_DRIVER
                          value: secret
                        - name: CHART_NAMESPACE
                          value: kube-system
                        - name: CHART
                          value: >-
                            https://%{KUBERNETES_API}%/static/charts/keepalived-ingress-vip-v0.1.6.tgz
                        - name: HELM_VERSION
                        - name: TARGET_NAMESPACE
                          value: kube-system
                        - name: AUTH_PASS_CREDENTIALS
                          value: 'false'
                        - name: NO_PROXY
                          value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
                        - name: FAILURE_POLICY
                          value: reinstall
                      image: rancher/klipper-helm:v0.8.0-build20230510
                      imagePullPolicy: IfNotPresent
                      name: helm
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /config
                          name: values
                        - mountPath: /chart
                          name: content
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: OnFailure
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: helm-keepalived-ingress-vip
                  serviceAccountName: helm-keepalived-ingress-vip
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - name: values
                      secret:
                        defaultMode: 420
                        secretName: chart-values-keepalived-ingress-vip
                    - configMap:
                        defaultMode: 420
                        name: chart-content-keepalived-ingress-vip
                      name: content
            status:
              completionTime: '2023-07-26T16:05:37Z'
              conditions:
                - lastProbeTime: '2023-07-26T16:05:37Z'
                  lastTransitionTime: '2023-07-26T16:05:37Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2023-07-26T15:34:22Z'
              succeeded: 1
              uncountedTerminatedPods: {}
          helm-install-traefik:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/6xVUY/qNhP9K59Guk9fEgLZbJZI+xAgFHp3IQrsqlW1QsZMwMWxI9uhXSH+e+WQezfb3m5vpb7ZzszxOeM5kzOQij2j0kwKiGFLDD30Tn1w4MjEDmL4UW7BgRIN2RFDID4DEUIaYpgU2m7l9lekRqPxFJMeJcZw9JjsMZt9QF66VAqjJOeoXHogyrgK90wb1WCA87cI8jeByt2fji1Q59Op7/zvMxO7+xnycmxB/xFHkBIhBqMIFuz4XeG6ItTmHOstuvpVGyzh4gBV2FBfsxK1IWUFsag5d4CTLfKmKJZuo1V7f2LenH4XjwPRB4iB+sUwQhKRQYjBDmnUH4YRjUgwuOmT4K4IMCwIhoVl1mpsqs6ENoRz9+2iDyTpCqnlvSX0KIvigZXMQNz3fd8Bg2XFiUH7/YM++ECyFAXbz65yVrNkEN7eh9E4uBsNp6PR7ShIg7EfTu+iYZCO/SAMJ8NhGE6jG3+UhDeTKJ0OJsPbyTCa3k1u//MHuHTk204lTKDSEP9yBqL2dgFtKcEB19VoXG0UE3twYM/llnDvWscJFqTmJr829+s9vDiA4tQgtQ+zSB5TcOBEeN3txYvzNeI5zVfz5aJ7lKfZsrufpQ+Pm0k+f07zDpZGqtB048azJF9v7JWrLBl3733/+O8TOmEHYyod93qfzp+fRmm+SNfpapNk88unnrYPT6+11L1WhzvoewOv//+6ahb+X0h/Q9w6yX9I/xXL5Gk922TJarUZ5+kkXaznycOqk1YQrrGbsFhusnz508+dGE+fqONRXmuDyuOSEu70fe9m4Pme3+vfNpug3XSxpsn84SlPN9nyYT7uIir80iSXFwdYSfbNKRH0gKp35KyqULm2FeOT7915vrutGd8N/EHgh30f2pys5jyTnNFXiGFeLKTJFGoUBt6ZGxxQqGWtKNpuvzhwkrwu8VHWwlx7t7TLjBjrudaBbxgNa90Iex/XTtI2zNrB3n15saKE3OEKOVIjlTWLfR8l0KBupqaGGDgT9e/Wocr6UpmvUpZiShivFYIDGtWJUUwotVcvOiPrbVRd5eiud1rOzpdOj8/tqkW4/lquUW7H3I2rC7Z/JJXNEd3oVuBb+LekNwPCEFM3pb78EQAA///RZzjuMgcAAA
                objectset.rio.cattle.io/id: helm-controller-chart-registration
                objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
                objectset.rio.cattle.io/owner-name: traefik
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T15:37:10Z'
              generation: 1
              labels:
                helmcharts.helm.cattle.io/chart: traefik
                objectset.rio.cattle.io/hash: c0f97ea7a25e3dec71957c7a3241a38f3e5fae5f
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:helmcharts.helm.cattle.io/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:helmcharts.helm.cattle.io/configHash: {}
                          f:labels:
                            .: {}
                            f:helmcharts.helm.cattle.io/chart: {}
                        f:spec:
                          f:containers:
                            k:{"name":"helm"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"AUTH_PASS_CREDENTIALS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"FAILURE_POLICY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_DRIVER"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_VERSION"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NO_PROXY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"REPO"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"TARGET_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"VERSION"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/chart"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"content"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"values"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm-controller@rancher3-tst
                  operation: Update
                  time: '2023-07-26T15:37:10Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:conditions: {}
                      f:failed: {}
                      f:ready: {}
                      f:startTime: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-31T20:17:21Z'
              name: helm-install-traefik
              namespace: kube-system
              resourceVersion: '3463938'
              uid: 83581edc-188d-4026-a875-3f863f9c5675
            spec:
              backoffLimit: 1000
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: 83581edc-188d-4026-a875-3f863f9c5675
              suspend: false
              template:
                metadata:
                  annotations:
                    helmcharts.helm.cattle.io/configHash: >-
                      SHA256=57C38B9FBB6B3E3C05F8793EC0355D9955F740BA54D7EF2D96D97F8D678F2B0E
                  creationTimestamp: null
                  labels:
                    controller-uid: 83581edc-188d-4026-a875-3f863f9c5675
                    helmcharts.helm.cattle.io/chart: traefik
                    job-name: helm-install-traefik
                spec:
                  containers:
                    - args:
                        - install
                        - '--set-string'
                        - global.systemDefaultRegistry=
                      env:
                        - name: NAME
                          value: traefik
                        - name: VERSION
                        - name: REPO
                        - name: HELM_DRIVER
                          value: secret
                        - name: CHART_NAMESPACE
                          value: kube-system
                        - name: CHART
                          value: >-
                            https://%{KUBERNETES_API}%/static/charts/traefik-21.2.1+up21.2.0.tgz
                        - name: HELM_VERSION
                        - name: TARGET_NAMESPACE
                          value: kube-system
                        - name: AUTH_PASS_CREDENTIALS
                          value: 'false'
                        - name: NO_PROXY
                          value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
                        - name: FAILURE_POLICY
                          value: reinstall
                      image: rancher/klipper-helm:v0.8.0-build20230510
                      imagePullPolicy: IfNotPresent
                      name: helm
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /config
                          name: values
                        - mountPath: /chart
                          name: content
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: OnFailure
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: helm-traefik
                  serviceAccountName: helm-traefik
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - name: values
                      secret:
                        defaultMode: 420
                        secretName: chart-values-traefik
                    - configMap:
                        defaultMode: 420
                        name: chart-content-traefik
                      name: content
            status:
              conditions:
                - lastProbeTime: '2023-07-31T20:17:21Z'
                  lastTransitionTime: '2023-07-31T20:17:21Z'
                  message: Job has reached the specified backoff limit
                  reason: BackoffLimitExceeded
                  status: 'True'
                  type: Failed
              failed: 2
              ready: 0
              startTime: '2023-07-26T15:37:11Z'
              uncountedTerminatedPods: {}
          helm-install-traefik-crd:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                batch.kubernetes.io/job-tracking: ''
                objectset.rio.cattle.io/applied: >-
                  H4sIAAAAAAAA/7RVUY/iNhD+K9VI99QkJCEsm0j3ELhQ6O0CCuyqVbVCxkzAxbEj26E9If575ZC7hu11e324t9ie7/P3jWcmZyAVe0almRSQwJYYeuidAnDgyMQOEvhZbsGBEg3ZEUMgOQMRQhpimBTaLuX2d6RGo/EUkx4lxnD0mOwxiz4gL10qhVGSc1QuPRBlXIV7po1qOMD5Vwb5h0Dl7k/HlqhzdAqcHz4ysXs/RV6OLel/8ghSIiRgFMGCHV2qdt8E0RWhFnest+jqT9pgCRcHqMJG/pqVqA0pK0hEzbkDnGyRN4mxkhu/2nulvtn9Zi0Hog+QQHRfFP3dgPaDYLjtD8OC7igZ+PEwHhRxEQ79kBT+IA6tutZrk30mtCGcu7eXvWFNV0it/i2hR1kUD6xkBpLA930HDJYVJwbt+Rs18YZ1KQq2n14traZpOLh7n/VH/jiKwvh+Mg7GQRSnk9EkGt/H8d1kFIdROEyzKMiiuygexf1onEbxII6D0fC7PMSlkwJbuYQJVBqS385A1N5+QJtSeHEAxak5ajM+Tx8zcOBEeP262C7Ol6jnLF/NFvPuVp4tF931NHt43HzIZ89Z3uHTSBWabtx4mubrjb12tUzH3btvX/UW0Ak7GFPppNd7d/74NMryebbOVpt0Obu862n7ovSaJN3reHHDwAu94Me6CoN/iP6KuXWa/5T9L5Xp03q6Waar1WacZx+y+XqWPqw6sIJwjV3AfLFZ5otffu3EePpEHY/yWhtUHpeUcCfwvSj0fM/vBXfNot8uulyTdPbwlGeb5eJhNu4yKvz88pcXB1hJ9s0uEfSAqnfkrKpQubbGkpPv3Xu+u60Z34V+2PcHgQ8tZllzvpSc0U+QwKyYS7NUqFEYuOlccEChlrWiaMv44sBJ8rrER1kLcy3I0n4uibHN1LbW3xyNat0Yu41rx2UbZmvc3n15saaE3OEKOVIjle0A+z5KoEHdjEUNCXAm6j9t6ynbcMp8sbIQE8J4rRAc0KhOjGJKqb163plHt3Poakl3e6jV7Xyu9uTcfrUs13/INcp91blNyxZs/0gqixNdRGv0FvK1NDQTwBBTN2m//BUAAP//lzVsTiMHAAA
                objectset.rio.cattle.io/id: helm-controller-chart-registration
                objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
                objectset.rio.cattle.io/owner-name: traefik-crd
                objectset.rio.cattle.io/owner-namespace: kube-system
              creationTimestamp: '2023-07-26T15:37:10Z'
              generation: 1
              labels:
                helmcharts.helm.cattle.io/chart: traefik-crd
                objectset.rio.cattle.io/hash: 48ff3d5c3117b372fcdca509795f9f2702af0592
              managedFields:
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:objectset.rio.cattle.io/applied: {}
                        f:objectset.rio.cattle.io/id: {}
                        f:objectset.rio.cattle.io/owner-gvk: {}
                        f:objectset.rio.cattle.io/owner-name: {}
                        f:objectset.rio.cattle.io/owner-namespace: {}
                      f:labels:
                        .: {}
                        f:helmcharts.helm.cattle.io/chart: {}
                        f:objectset.rio.cattle.io/hash: {}
                    f:spec:
                      f:backoffLimit: {}
                      f:completionMode: {}
                      f:completions: {}
                      f:parallelism: {}
                      f:suspend: {}
                      f:template:
                        f:metadata:
                          f:annotations:
                            .: {}
                            f:helmcharts.helm.cattle.io/configHash: {}
                          f:labels:
                            .: {}
                            f:helmcharts.helm.cattle.io/chart: {}
                        f:spec:
                          f:containers:
                            k:{"name":"helm"}:
                              .: {}
                              f:args: {}
                              f:env:
                                .: {}
                                k:{"name":"AUTH_PASS_CREDENTIALS"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"CHART_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"FAILURE_POLICY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_DRIVER"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"HELM_VERSION"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"NAME"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"NO_PROXY"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"REPO"}:
                                  .: {}
                                  f:name: {}
                                k:{"name":"TARGET_NAMESPACE"}:
                                  .: {}
                                  f:name: {}
                                  f:value: {}
                                k:{"name":"VERSION"}:
                                  .: {}
                                  f:name: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/chart"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/config"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:nodeSelector: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:serviceAccount: {}
                          f:serviceAccountName: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"content"}:
                              .: {}
                              f:configMap:
                                .: {}
                                f:defaultMode: {}
                                f:name: {}
                              f:name: {}
                            k:{"name":"values"}:
                              .: {}
                              f:name: {}
                              f:secret:
                                .: {}
                                f:defaultMode: {}
                                f:secretName: {}
                  manager: helm-controller@rancher3-tst
                  operation: Update
                  time: '2023-07-26T15:37:10Z'
                - apiVersion: batch/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:completionTime: {}
                      f:conditions: {}
                      f:ready: {}
                      f:startTime: {}
                      f:succeeded: {}
                      f:uncountedTerminatedPods: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-07-26T15:38:05Z'
              name: helm-install-traefik-crd
              namespace: kube-system
              resourceVersion: '36168'
              uid: d2f5fa0d-b43c-4b75-acef-490faa38471a
            spec:
              backoffLimit: 1000
              completionMode: NonIndexed
              completions: 1
              parallelism: 1
              selector:
                matchLabels:
                  controller-uid: d2f5fa0d-b43c-4b75-acef-490faa38471a
              suspend: false
              template:
                metadata:
                  annotations:
                    helmcharts.helm.cattle.io/configHash: >-
                      SHA256=E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
                  creationTimestamp: null
                  labels:
                    controller-uid: d2f5fa0d-b43c-4b75-acef-490faa38471a
                    helmcharts.helm.cattle.io/chart: traefik-crd
                    job-name: helm-install-traefik-crd
                spec:
                  containers:
                    - args:
                        - install
                      env:
                        - name: NAME
                          value: traefik-crd
                        - name: VERSION
                        - name: REPO
                        - name: HELM_DRIVER
                          value: secret
                        - name: CHART_NAMESPACE
                          value: kube-system
                        - name: CHART
                          value: >-
                            https://%{KUBERNETES_API}%/static/charts/traefik-crd-21.2.1+up21.2.0.tgz
                        - name: HELM_VERSION
                        - name: TARGET_NAMESPACE
                          value: kube-system
                        - name: AUTH_PASS_CREDENTIALS
                          value: 'false'
                        - name: NO_PROXY
                          value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
                        - name: FAILURE_POLICY
                          value: reinstall
                      image: rancher/klipper-helm:v0.8.0-build20230510
                      imagePullPolicy: IfNotPresent
                      name: helm
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /config
                          name: values
                        - mountPath: /chart
                          name: content
                  dnsPolicy: ClusterFirst
                  nodeSelector:
                    kubernetes.io/os: linux
                  restartPolicy: OnFailure
                  schedulerName: default-scheduler
                  securityContext: {}
                  serviceAccount: helm-traefik-crd
                  serviceAccountName: helm-traefik-crd
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - name: values
                      secret:
                        defaultMode: 420
                        secretName: chart-values-traefik-crd
                    - configMap:
                        defaultMode: 420
                        name: chart-content-traefik-crd
                      name: content
            status:
              completionTime: '2023-07-26T15:38:05Z'
              conditions:
                - lastProbeTime: '2023-07-26T15:38:05Z'
                  lastTransitionTime: '2023-07-26T15:38:05Z'
                  status: 'True'
                  type: Complete
              ready: 0
              startTime: '2023-07-26T15:37:11Z'
              succeeded: 1
              uncountedTerminatedPods: {}
    logging-systemd-collector:
      apps/v1:
        DaemonSet:
          systemd-tailer-host-tailer:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              annotations:
                banzaicloud.com/last-applied: >-
                  UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAb3JpZ2luYWy8VE9v2z4M/S48y3/yQ4O2BnL/DViLoB12KYKBlmhHqywZEpU1C/zdB9nx6qLpjr1Z5CMf3yOTE3TEqJARqhOgtY6RtbMhPRX1niQyqVwhdc4G4pyp6w0y5S1Z8iMYKljBIMBgTWasxL7Pn2NN3hJTyLUrtA2MVhJUEI6BqVMZozbks70LfP4GcaHSYpeqlrBBwDn6z14JE3ocSY1rW23bbC6QzhiS7BLO/bLkH6ghT1ZSgOopKdDfyYdJ3VxML0w2xUJeo/2NWhoXVRrysELT73EFAqSz7FN3DxX7SAKetVVQwf8u8LflbO/mBwFRJ+h/pbxu1jfrTDY3lF2V1012K8t1RkRXDZWr6/VawbAbBISeZHI80FlOdYIOWe6/ftoyBgHzUYzsi4P6vItYWJEWgNqSnzYpXddhWsATFI2JZDmrNRe1tosnCMg0iHmS9OxBQI+83xQH9IVxbfHTRW/RzElVT6neheJjBRkak71N56qee3T48oMse01hsyrLFHYgoNGGZkjjfIe86Q1q+3YuRYfiL0ob2gRWLjLsBOgO2+TRpHAhtFrlt/kazohtNGbrjJZHqOBLc+946ymQ5dcLfT8+CPAUXPTjb+U0CDg4Ezu6c9Hy5HmXPrfIe6hg9ui1Ze+Cnv5kBnEBa1z7ij2gz1Jg2A27mWjiSB5PZafRjyXV8AHXRzUjwyXOQUDsFTI9skem9pgEp1tj5Dgetozek+X72NXkH+WeVDSkoCoFKArak7qUsmPsTodwIfxAqI5QlcPwJwAA//9QSwcI1gxeFkkCAACfBQAAUEsBAhQAFAAIAAgAAAAAANYMXhZJAgAAnwUAAAgAAAAAAAAAAAAAAAAAAAAAAG9yaWdpbmFsUEsFBgAAAAABAAEANgAAAH8CAAAAAA==
                deprecated.daemonset.template.generation: '2'
              creationTimestamp: '2023-12-14T14:46:37Z'
              generation: 2
              labels:
                app.kubernetes.io/instance: systemd-tailer-host-tailer
                app.kubernetes.io/name: host-tailer
              managedFields:
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:metadata:
                      f:annotations:
                        .: {}
                        f:banzaicloud.com/last-applied: {}
                        f:deprecated.daemonset.template.generation: {}
                      f:labels:
                        .: {}
                        f:app.kubernetes.io/instance: {}
                        f:app.kubernetes.io/name: {}
                      f:ownerReferences:
                        .: {}
                        k:{"uid":"20c7f585-cf8e-407f-9c05-eee4fe01755d"}: {}
                    f:spec:
                      f:revisionHistoryLimit: {}
                      f:selector: {}
                      f:template:
                        f:metadata:
                          f:labels:
                            .: {}
                            f:app.kubernetes.io/instance: {}
                            f:app.kubernetes.io/name: {}
                        f:spec:
                          f:containers:
                            k:{"name":"all-systemd-tailer"}:
                              .: {}
                              f:command: {}
                              f:image: {}
                              f:imagePullPolicy: {}
                              f:name: {}
                              f:resources: {}
                              f:terminationMessagePath: {}
                              f:terminationMessagePolicy: {}
                              f:volumeMounts:
                                .: {}
                                k:{"mountPath":"/var/log"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                                k:{"mountPath":"/var/pos"}:
                                  .: {}
                                  f:mountPath: {}
                                  f:name: {}
                          f:dnsPolicy: {}
                          f:restartPolicy: {}
                          f:schedulerName: {}
                          f:securityContext: {}
                          f:terminationGracePeriodSeconds: {}
                          f:volumes:
                            .: {}
                            k:{"name":"positions"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                            k:{"name":"var-log"}:
                              .: {}
                              f:hostPath:
                                .: {}
                                f:path: {}
                                f:type: {}
                              f:name: {}
                      f:updateStrategy:
                        f:rollingUpdate:
                          .: {}
                          f:maxSurge: {}
                          f:maxUnavailable: {}
                        f:type: {}
                  manager: manager
                  operation: Update
                  time: '2023-12-14T16:16:02Z'
                - apiVersion: apps/v1
                  fieldsType: FieldsV1
                  fieldsV1:
                    f:status:
                      f:currentNumberScheduled: {}
                      f:desiredNumberScheduled: {}
                      f:numberAvailable: {}
                      f:numberReady: {}
                      f:observedGeneration: {}
                      f:updatedNumberScheduled: {}
                  manager: k3s
                  operation: Update
                  subresource: status
                  time: '2023-12-14T16:16:25Z'
              name: systemd-tailer-host-tailer
              namespace: logging-systemd-collector
              ownerReferences:
                - apiVersion: logging-extensions.banzaicloud.io/v1alpha1
                  controller: true
                  kind: HostTailer
                  name: systemd-tailer
                  uid: 20c7f585-cf8e-407f-9c05-eee4fe01755d
              resourceVersion: '143291236'
              uid: 90a8c492-f80a-443c-a574-419fb0814c6f
            spec:
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app.kubernetes.io/instance: systemd-tailer-host-tailer
                  app.kubernetes.io/name: host-tailer
              template:
                metadata:
                  creationTimestamp: null
                  labels:
                    app.kubernetes.io/instance: systemd-tailer-host-tailer
                    app.kubernetes.io/name: host-tailer
                spec:
                  containers:
                    - command:
                        - /fluent-bit/bin/fluent-bit
                        - '-i'
                        - systemd
                        - '-p'
                        - path=/var/log/journal
                        - '-p'
                        - >-
                          db=/var/pos/systemd-tailer-host-tailer-all-systemd-tailer.db
                        - '-p'
                        - max_entries=100
                        - '-o'
                        - file
                        - '-p'
                        - format=plain
                        - '-p'
                        - path=/dev/
                        - '-p'
                        - file=stdout
                      image: fluent/fluent-bit:1.9.5
                      imagePullPolicy: IfNotPresent
                      name: all-systemd-tailer
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                      volumeMounts:
                        - mountPath: /var/pos
                          name: positions
                        - mountPath: /var/log
                          name: var-log
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  terminationGracePeriodSeconds: 30
                  volumes:
                    - hostPath:
                        path: /var/pos
                        type: ''
                      name: positions
                    - hostPath:
                        path: /var/log
                        type: ''
                      name: var-log
              updateStrategy:
                rollingUpdate:
                  maxSurge: 0
                  maxUnavailable: 1
                type: RollingUpdate
            status:
              currentNumberScheduled: 3
              desiredNumberScheduled: 3
              numberAvailable: 3
              numberMisscheduled: 0
              numberReady: 3
              observedGeneration: 2
              updatedNumberScheduled: 3
    test:
      apps/v1:
        Deployment: {}
        ReplicaSet: {}
